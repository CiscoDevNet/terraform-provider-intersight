---
subcategory: "iam"
layout: "intersight"
page_title: "Intersight: intersight_iam_private_key_spec"
description: |-
        Parameters used to generate a private key.

---

# Resource: intersight_iam_private_key_spec
Parameters used to generate a private key.
## Usage Example
### Resource Creation

```hcl
resource "intersight_iam_private_key_spec" "iam_private_key_spec1" {
  certificate_request {
    object_type = "iam.CertificateRequest"
    moid        = var.certificate_request
  }
}

variable "certificate_request" {
  type        = string
  description = "value for certificate request"
}
```
## Argument Reference
The following arguments are supported:
* `account_moid`:(string)(ReadOnly) The Account ID for this managed object. 
* `algorithm`:(HashMap) - Algorithm used to generate the key pair and algorithm-speicifc parameters, such as RSA modulus size. 
This complex property has following sub-properties:
  + `additional_properties`:(JSON as string) - Additional Properties as per object type, can be added as JSON using `jsonencode()`. Allowed Types are: [pkix.EcdsaKeySpec](#pkixEcdsaKeySpec)
[pkix.EddsaKeySpec](#pkixEddsaKeySpec)
[pkix.RsaAlgorithm](#pkixRsaAlgorithm)
  + `name`:(string)(ReadOnly) Name of the key generation algorithm.* `RSA` - Key pairs should be generated by the RSA algorithm. 
  + `object_type`:(string) The fully-qualified name of the instantiated, concrete type.The value should be the same as the 'ClassId' property.The enum values provides the list of concrete types that can be instantiated from this abstract type. 
* `ancestors`:(Array)(ReadOnly) An array of relationships to moBaseMo resources. 
This complex property has following sub-properties:
  + `moid`:(string) The Moid of the referenced REST resource. 
  + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
  + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
* `certificate_request`:(HashMap) - A reference to a iamCertificateRequest resource.When the $expand query parameter is specified, the referenced resource is returned inline. 
This complex property has following sub-properties:
  + `moid`:(string) The Moid of the referenced REST resource. 
  + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
  + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
* `create_time`:(string)(ReadOnly) The time when this managed object was created. 
* `domain_group_moid`:(string)(ReadOnly) The DomainGroup ID for this managed object. 
* `mod_time`:(string)(ReadOnly) The time when this managed object was last modified. 
* `moid`:(string) The unique identifier of this Managed Object instance. 
* `owners`:
                (Array of schema.TypeString) -(ReadOnly)
* `parent`:(HashMap) -(ReadOnly) A reference to a moBaseMo resource.When the $expand query parameter is specified, the referenced resource is returned inline. 
This complex property has following sub-properties:
  + `moid`:(string) The Moid of the referenced REST resource. 
  + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
  + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
* `permission_resources`:(Array)(ReadOnly) An array of relationships to moBaseMo resources. 
This complex property has following sub-properties:
  + `moid`:(string) The Moid of the referenced REST resource. 
  + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
  + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
* `shared_scope`:(string)(ReadOnly) Intersight provides pre-built workflows, tasks and policies to end users through global catalogs.Objects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs. 
* `tags`:(Array)
This complex property has following sub-properties:
  + `key`:(string) The string representation of a tag key. 
  + `value`:(string) The string representation of a tag value. 
* `version_context`:(HashMap) -(ReadOnly) The versioning info for this managed object. 
This complex property has following sub-properties:
  + `interested_mos`:(Array)
This complex property has following sub-properties:
    + `moid`:(string) The Moid of the referenced REST resource. 
    + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
    + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
  + `marked_for_deletion`:(bool)(ReadOnly) The flag to indicate if snapshot is marked for deletion or not. If flag is set then snapshot will be removed after the successful deployment of the policy. 
  + `object_type`:(string) The fully-qualified name of the instantiated, concrete type.The value should be the same as the 'ClassId' property. 
  + `ref_mo`:(HashMap) -(ReadOnly) A reference to the original Managed Object. 
This complex property has following sub-properties:
    + `moid`:(string) The Moid of the referenced REST resource. 
    + `object_type`:(string) The fully-qualified name of the remote type referred by this relationship. 
    + `selector`:(string) An OData $filter expression which describes the REST resource to be referenced. This field maybe set instead of 'moid' by clients.1. If 'moid' is set this field is ignored.1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of theresource matching the filter expression and populates it in the MoRef that is part of the objectinstance being inserted/updated to fulfill the REST request.An error is returned if the filter matches zero or more than one REST resource.An example filter string is: Serial eq '3AA8B7T11'. 
  + `timestamp`:(string)(ReadOnly) The time this versioned Managed Object was created. 
  + `nr_version`:(string)(ReadOnly) The version of the Managed Object, e.g. an incrementing number or a hash id. 
  + `version_type`:(string)(ReadOnly) Specifies type of version. Currently the only supported value is \ Configured\ that is used to keep track of snapshots of policies and profiles that are intendedto be configured to target endpoints.* `Modified` - Version created every time an object is modified.* `Configured` - Version created every time an object is configured to the service profile.* `Deployed` - Version created for objects related to a service profile when it is deployed. 


## Import
`intersight_iam_private_key_spec` can be imported using the Moid of the object, e.g.
```
$ terraform import intersight_iam_private_key_spec.example 1234567890987654321abcde
```
## Allowed Types in `AdditionalProperties`
 
### [pkix.EcdsaKeySpec](#argument-reference)
The key pair is generated using Elliptic Curve Digital Signature Algorithm (ECDSA), as defined in FIPS 186-4.
The ECDSA standard was originally developed for the American National Standards Institute by the Accredited
Standards Committee on Financial Services, X9.
ANS X9.62 defines methods for digital signature generation and verification using ECDSA. Specifications for
the generation of the domain parameters used during the generation and verification of digital signatures
are also included in ANS X9.62.
* `curve`:(string) A specific set of Elliptic Curve parameters, as recommended by NIST in FIPS 186-4.* `P256` - P256 returns a Curve which implements P-256, as defined in FIPS 186-4, section D.2.3.* `P224` - P224 returns a Curve which implements P-224, as defined in FIPS 186-4, section D.2.2.* `P384` - P384 returns a Curve which implements P-384, as defined in FIPS 186-4, section D.2.4.* `P521` - P521 returns a Curve which implements P-521, as defined in FIPS 186-4, section D.2.5. 

### [pkix.EddsaKeySpec](#argument-reference)
The key pair is generated using Edwards-Curve Digital Signature Algorithm (EdDSA).
The Edwards-curve Digital Signature Algorithm (EdDSA) is a variant of
Schnorr's signature system with (possibly twisted) Edwards curves.
* `algorithm`:(string) The EdDSA algorithm, as defined in RFC 8032.* `Ed25519` - The edwards25519 curve, as defined in RFC 8032 section 5.1.* `Ed25519ph` - The edwards25519 curve for the PureEdDSA variant.* `Ed25519ctx` - The edwards25519 curve for the HashEdDSA variant. 

### [pkix.RsaAlgorithm](#argument-reference)
The key pair is generated using the RSA algorithm and specified parameters.
* `modulus`:(int) The length of the RSA key, expressed in bits, for both public and private keys.* `2048` - A key length of 2048 bits.* `2560` - A key length of 2560 bits.* `3072` - A key length of 3072 bits.* `3584` - A key length of 3584 bits.* `4096` - A key length of 4096 bits. 
  
