/*
Cisco Intersight

Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document.

API version: 1.0.11-18775
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"fmt"
	"reflect"
	"strings"
)

// checks if the OpenapiTaskGenerationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiTaskGenerationRequest{}

// OpenapiTaskGenerationRequest Creates a request which has information about the tasks that need to be created from the previously uploaded OpenAPI specification file. This object internally triggers a workflow that creates tasks which can be used in workflows.
type OpenapiTaskGenerationRequest struct {
	MoBaseMo
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// Indicates if target endpoint is external or internal. An endpoint is internal if the target is an Intersight resource. For instance, configuring an intersight object using a Task. * `External` - Denotes that the target endpoint is an external API endpoint. * `Internal` - Denotes that the target endpoint is a Intersight API endpoint.
	EndpointType     *string               `json:"EndpointType,omitempty"`
	FailedTasks      []OpenapiFailedTask   `json:"FailedTasks,omitempty"`
	HeaderParameters []OpenapiKeyValuePair `json:"HeaderParameters,omitempty"`
	// When this value is set to true, the task name validations happen and provides the task validation status against each of the selected API on the property selectedApis When this value is set to false, an internal workflow to generate the tasks is submitted,  conflicting task names are created with an incremented version.
	IsValidateRequest *bool `json:"IsValidateRequest,omitempty"`
	// Specifies the REST API protocol being used, which can be one of HTTP or HTTPS. * `HTTPS` - Denotes that the API call uses the HTTPS protocol type * `HTTP` - Denotes that the API call uses the HTTP protocol type
	Protocol        *string               `json:"Protocol,omitempty"`
	QueryParameters []OpenapiKeyValuePair `json:"QueryParameters,omitempty"`
	SelectedApis    []OpenapiApiInfo      `json:"SelectedApis,omitempty"`
	// Depicts the status of the task creation request. * `none` - Indicates the default status. * `InProgress` - Request has been picked up for generating tasks from the OpenAPI Specification file. * `Completed` - All the tasks from the request have been created. * `Failed` - There were failures in generating one or more tasks in the request.
	Status *string `json:"Status,omitempty"`
	// Optional string that can be prefixed to the name of created tasks.
	TaskPrefix *string               `json:"TaskPrefix,omitempty"`
	TaskTags   []OpenapiKeyValuePair `json:"TaskTags,omitempty"`
	// Specifies the URL of the endpoint that the created task communicates with. It is defaulted to intersight.com for internal endpoints.
	Url                  *string                                      `json:"Url,omitempty"`
	Organization         NullableOrganizationOrganizationRelationship `json:"Organization,omitempty"`
	Source               NullableOpenapiProcessFileRelationship       `json:"Source,omitempty"`
	Workflow             NullableWorkflowWorkflowInfoRelationship     `json:"Workflow,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OpenapiTaskGenerationRequest OpenapiTaskGenerationRequest

// NewOpenapiTaskGenerationRequest instantiates a new OpenapiTaskGenerationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiTaskGenerationRequest(classId string, objectType string) *OpenapiTaskGenerationRequest {
	this := OpenapiTaskGenerationRequest{}
	this.ClassId = classId
	this.ObjectType = objectType
	var endpointType string = "External"
	this.EndpointType = &endpointType
	var protocol string = "HTTPS"
	this.Protocol = &protocol
	return &this
}

// NewOpenapiTaskGenerationRequestWithDefaults instantiates a new OpenapiTaskGenerationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiTaskGenerationRequestWithDefaults() *OpenapiTaskGenerationRequest {
	this := OpenapiTaskGenerationRequest{}
	var classId string = "openapi.TaskGenerationRequest"
	this.ClassId = classId
	var objectType string = "openapi.TaskGenerationRequest"
	this.ObjectType = objectType
	var endpointType string = "External"
	this.EndpointType = &endpointType
	var protocol string = "HTTPS"
	this.Protocol = &protocol
	return &this
}

// GetClassId returns the ClassId field value
func (o *OpenapiTaskGenerationRequest) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *OpenapiTaskGenerationRequest) SetClassId(v string) {
	o.ClassId = v
}

// GetDefaultClassId returns the default value "openapi.TaskGenerationRequest" of the ClassId field.
func (o *OpenapiTaskGenerationRequest) GetDefaultClassId() interface{} {
	return "openapi.TaskGenerationRequest"
}

// GetObjectType returns the ObjectType field value
func (o *OpenapiTaskGenerationRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *OpenapiTaskGenerationRequest) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDefaultObjectType returns the default value "openapi.TaskGenerationRequest" of the ObjectType field.
func (o *OpenapiTaskGenerationRequest) GetDefaultObjectType() interface{} {
	return "openapi.TaskGenerationRequest"
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetEndpointType() string {
	if o == nil || IsNil(o.EndpointType) {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetEndpointTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointType) {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasEndpointType() bool {
	if o != nil && !IsNil(o.EndpointType) {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *OpenapiTaskGenerationRequest) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetFailedTasks returns the FailedTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetFailedTasks() []OpenapiFailedTask {
	if o == nil {
		var ret []OpenapiFailedTask
		return ret
	}
	return o.FailedTasks
}

// GetFailedTasksOk returns a tuple with the FailedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetFailedTasksOk() ([]OpenapiFailedTask, bool) {
	if o == nil || IsNil(o.FailedTasks) {
		return nil, false
	}
	return o.FailedTasks, true
}

// HasFailedTasks returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasFailedTasks() bool {
	if o != nil && !IsNil(o.FailedTasks) {
		return true
	}

	return false
}

// SetFailedTasks gets a reference to the given []OpenapiFailedTask and assigns it to the FailedTasks field.
func (o *OpenapiTaskGenerationRequest) SetFailedTasks(v []OpenapiFailedTask) {
	o.FailedTasks = v
}

// GetHeaderParameters returns the HeaderParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetHeaderParameters() []OpenapiKeyValuePair {
	if o == nil {
		var ret []OpenapiKeyValuePair
		return ret
	}
	return o.HeaderParameters
}

// GetHeaderParametersOk returns a tuple with the HeaderParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetHeaderParametersOk() ([]OpenapiKeyValuePair, bool) {
	if o == nil || IsNil(o.HeaderParameters) {
		return nil, false
	}
	return o.HeaderParameters, true
}

// HasHeaderParameters returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasHeaderParameters() bool {
	if o != nil && !IsNil(o.HeaderParameters) {
		return true
	}

	return false
}

// SetHeaderParameters gets a reference to the given []OpenapiKeyValuePair and assigns it to the HeaderParameters field.
func (o *OpenapiTaskGenerationRequest) SetHeaderParameters(v []OpenapiKeyValuePair) {
	o.HeaderParameters = v
}

// GetIsValidateRequest returns the IsValidateRequest field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetIsValidateRequest() bool {
	if o == nil || IsNil(o.IsValidateRequest) {
		var ret bool
		return ret
	}
	return *o.IsValidateRequest
}

// GetIsValidateRequestOk returns a tuple with the IsValidateRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetIsValidateRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsValidateRequest) {
		return nil, false
	}
	return o.IsValidateRequest, true
}

// HasIsValidateRequest returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasIsValidateRequest() bool {
	if o != nil && !IsNil(o.IsValidateRequest) {
		return true
	}

	return false
}

// SetIsValidateRequest gets a reference to the given bool and assigns it to the IsValidateRequest field.
func (o *OpenapiTaskGenerationRequest) SetIsValidateRequest(v bool) {
	o.IsValidateRequest = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *OpenapiTaskGenerationRequest) SetProtocol(v string) {
	o.Protocol = &v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetQueryParameters() []OpenapiKeyValuePair {
	if o == nil {
		var ret []OpenapiKeyValuePair
		return ret
	}
	return o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetQueryParametersOk() ([]OpenapiKeyValuePair, bool) {
	if o == nil || IsNil(o.QueryParameters) {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasQueryParameters() bool {
	if o != nil && !IsNil(o.QueryParameters) {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given []OpenapiKeyValuePair and assigns it to the QueryParameters field.
func (o *OpenapiTaskGenerationRequest) SetQueryParameters(v []OpenapiKeyValuePair) {
	o.QueryParameters = v
}

// GetSelectedApis returns the SelectedApis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetSelectedApis() []OpenapiApiInfo {
	if o == nil {
		var ret []OpenapiApiInfo
		return ret
	}
	return o.SelectedApis
}

// GetSelectedApisOk returns a tuple with the SelectedApis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetSelectedApisOk() ([]OpenapiApiInfo, bool) {
	if o == nil || IsNil(o.SelectedApis) {
		return nil, false
	}
	return o.SelectedApis, true
}

// HasSelectedApis returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasSelectedApis() bool {
	if o != nil && !IsNil(o.SelectedApis) {
		return true
	}

	return false
}

// SetSelectedApis gets a reference to the given []OpenapiApiInfo and assigns it to the SelectedApis field.
func (o *OpenapiTaskGenerationRequest) SetSelectedApis(v []OpenapiApiInfo) {
	o.SelectedApis = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenapiTaskGenerationRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTaskPrefix returns the TaskPrefix field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetTaskPrefix() string {
	if o == nil || IsNil(o.TaskPrefix) {
		var ret string
		return ret
	}
	return *o.TaskPrefix
}

// GetTaskPrefixOk returns a tuple with the TaskPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetTaskPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.TaskPrefix) {
		return nil, false
	}
	return o.TaskPrefix, true
}

// HasTaskPrefix returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasTaskPrefix() bool {
	if o != nil && !IsNil(o.TaskPrefix) {
		return true
	}

	return false
}

// SetTaskPrefix gets a reference to the given string and assigns it to the TaskPrefix field.
func (o *OpenapiTaskGenerationRequest) SetTaskPrefix(v string) {
	o.TaskPrefix = &v
}

// GetTaskTags returns the TaskTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetTaskTags() []OpenapiKeyValuePair {
	if o == nil {
		var ret []OpenapiKeyValuePair
		return ret
	}
	return o.TaskTags
}

// GetTaskTagsOk returns a tuple with the TaskTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetTaskTagsOk() ([]OpenapiKeyValuePair, bool) {
	if o == nil || IsNil(o.TaskTags) {
		return nil, false
	}
	return o.TaskTags, true
}

// HasTaskTags returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasTaskTags() bool {
	if o != nil && !IsNil(o.TaskTags) {
		return true
	}

	return false
}

// SetTaskTags gets a reference to the given []OpenapiKeyValuePair and assigns it to the TaskTags field.
func (o *OpenapiTaskGenerationRequest) SetTaskTags(v []OpenapiKeyValuePair) {
	o.TaskTags = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OpenapiTaskGenerationRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiTaskGenerationRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OpenapiTaskGenerationRequest) SetUrl(v string) {
	o.Url = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetOrganization() OrganizationOrganizationRelationship {
	if o == nil || IsNil(o.Organization.Get()) {
		var ret OrganizationOrganizationRelationship
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetOrganizationOk() (*OrganizationOrganizationRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableOrganizationOrganizationRelationship and assigns it to the Organization field.
func (o *OpenapiTaskGenerationRequest) SetOrganization(v OrganizationOrganizationRelationship) {
	o.Organization.Set(&v)
}

// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *OpenapiTaskGenerationRequest) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *OpenapiTaskGenerationRequest) UnsetOrganization() {
	o.Organization.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetSource() OpenapiProcessFileRelationship {
	if o == nil || IsNil(o.Source.Get()) {
		var ret OpenapiProcessFileRelationship
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetSourceOk() (*OpenapiProcessFileRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableOpenapiProcessFileRelationship and assigns it to the Source field.
func (o *OpenapiTaskGenerationRequest) SetSource(v OpenapiProcessFileRelationship) {
	o.Source.Set(&v)
}

// SetSourceNil sets the value for Source to be an explicit nil
func (o *OpenapiTaskGenerationRequest) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *OpenapiTaskGenerationRequest) UnsetSource() {
	o.Source.Unset()
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiTaskGenerationRequest) GetWorkflow() WorkflowWorkflowInfoRelationship {
	if o == nil || IsNil(o.Workflow.Get()) {
		var ret WorkflowWorkflowInfoRelationship
		return ret
	}
	return *o.Workflow.Get()
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiTaskGenerationRequest) GetWorkflowOk() (*WorkflowWorkflowInfoRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workflow.Get(), o.Workflow.IsSet()
}

// HasWorkflow returns a boolean if a field has been set.
func (o *OpenapiTaskGenerationRequest) HasWorkflow() bool {
	if o != nil && o.Workflow.IsSet() {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given NullableWorkflowWorkflowInfoRelationship and assigns it to the Workflow field.
func (o *OpenapiTaskGenerationRequest) SetWorkflow(v WorkflowWorkflowInfoRelationship) {
	o.Workflow.Set(&v)
}

// SetWorkflowNil sets the value for Workflow to be an explicit nil
func (o *OpenapiTaskGenerationRequest) SetWorkflowNil() {
	o.Workflow.Set(nil)
}

// UnsetWorkflow ensures that no value is present for Workflow, not even an explicit nil
func (o *OpenapiTaskGenerationRequest) UnsetWorkflow() {
	o.Workflow.Unset()
}

func (o OpenapiTaskGenerationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiTaskGenerationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseMo, errMoBaseMo := json.Marshal(o.MoBaseMo)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	errMoBaseMo = json.Unmarshal([]byte(serializedMoBaseMo), &toSerialize)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	if _, exists := toSerialize["ClassId"]; !exists {
		toSerialize["ClassId"] = o.GetDefaultClassId()
	}
	toSerialize["ClassId"] = o.ClassId
	if _, exists := toSerialize["ObjectType"]; !exists {
		toSerialize["ObjectType"] = o.GetDefaultObjectType()
	}
	toSerialize["ObjectType"] = o.ObjectType
	if !IsNil(o.EndpointType) {
		toSerialize["EndpointType"] = o.EndpointType
	}
	if o.FailedTasks != nil {
		toSerialize["FailedTasks"] = o.FailedTasks
	}
	if o.HeaderParameters != nil {
		toSerialize["HeaderParameters"] = o.HeaderParameters
	}
	if !IsNil(o.IsValidateRequest) {
		toSerialize["IsValidateRequest"] = o.IsValidateRequest
	}
	if !IsNil(o.Protocol) {
		toSerialize["Protocol"] = o.Protocol
	}
	if o.QueryParameters != nil {
		toSerialize["QueryParameters"] = o.QueryParameters
	}
	if o.SelectedApis != nil {
		toSerialize["SelectedApis"] = o.SelectedApis
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.TaskPrefix) {
		toSerialize["TaskPrefix"] = o.TaskPrefix
	}
	if o.TaskTags != nil {
		toSerialize["TaskTags"] = o.TaskTags
	}
	if !IsNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if o.Organization.IsSet() {
		toSerialize["Organization"] = o.Organization.Get()
	}
	if o.Source.IsSet() {
		toSerialize["Source"] = o.Source.Get()
	}
	if o.Workflow.IsSet() {
		toSerialize["Workflow"] = o.Workflow.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OpenapiTaskGenerationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ClassId",
		"ObjectType",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{
		"ClassId":    o.GetDefaultClassId,
		"ObjectType": o.GetDefaultObjectType,
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	type OpenapiTaskGenerationRequestWithoutEmbeddedStruct struct {
		// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
		ClassId string `json:"ClassId"`
		// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
		ObjectType string `json:"ObjectType"`
		// Indicates if target endpoint is external or internal. An endpoint is internal if the target is an Intersight resource. For instance, configuring an intersight object using a Task. * `External` - Denotes that the target endpoint is an external API endpoint. * `Internal` - Denotes that the target endpoint is a Intersight API endpoint.
		EndpointType     *string               `json:"EndpointType,omitempty"`
		FailedTasks      []OpenapiFailedTask   `json:"FailedTasks,omitempty"`
		HeaderParameters []OpenapiKeyValuePair `json:"HeaderParameters,omitempty"`
		// When this value is set to true, the task name validations happen and provides the task validation status against each of the selected API on the property selectedApis When this value is set to false, an internal workflow to generate the tasks is submitted,  conflicting task names are created with an incremented version.
		IsValidateRequest *bool `json:"IsValidateRequest,omitempty"`
		// Specifies the REST API protocol being used, which can be one of HTTP or HTTPS. * `HTTPS` - Denotes that the API call uses the HTTPS protocol type * `HTTP` - Denotes that the API call uses the HTTP protocol type
		Protocol        *string               `json:"Protocol,omitempty"`
		QueryParameters []OpenapiKeyValuePair `json:"QueryParameters,omitempty"`
		SelectedApis    []OpenapiApiInfo      `json:"SelectedApis,omitempty"`
		// Depicts the status of the task creation request. * `none` - Indicates the default status. * `InProgress` - Request has been picked up for generating tasks from the OpenAPI Specification file. * `Completed` - All the tasks from the request have been created. * `Failed` - There were failures in generating one or more tasks in the request.
		Status *string `json:"Status,omitempty"`
		// Optional string that can be prefixed to the name of created tasks.
		TaskPrefix *string               `json:"TaskPrefix,omitempty"`
		TaskTags   []OpenapiKeyValuePair `json:"TaskTags,omitempty"`
		// Specifies the URL of the endpoint that the created task communicates with. It is defaulted to intersight.com for internal endpoints.
		Url          *string                                      `json:"Url,omitempty"`
		Organization NullableOrganizationOrganizationRelationship `json:"Organization,omitempty"`
		Source       NullableOpenapiProcessFileRelationship       `json:"Source,omitempty"`
		Workflow     NullableWorkflowWorkflowInfoRelationship     `json:"Workflow,omitempty"`
	}

	varOpenapiTaskGenerationRequestWithoutEmbeddedStruct := OpenapiTaskGenerationRequestWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varOpenapiTaskGenerationRequestWithoutEmbeddedStruct)
	if err == nil {
		varOpenapiTaskGenerationRequest := _OpenapiTaskGenerationRequest{}
		varOpenapiTaskGenerationRequest.ClassId = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.ClassId
		varOpenapiTaskGenerationRequest.ObjectType = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.ObjectType
		varOpenapiTaskGenerationRequest.EndpointType = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.EndpointType
		varOpenapiTaskGenerationRequest.FailedTasks = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.FailedTasks
		varOpenapiTaskGenerationRequest.HeaderParameters = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.HeaderParameters
		varOpenapiTaskGenerationRequest.IsValidateRequest = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.IsValidateRequest
		varOpenapiTaskGenerationRequest.Protocol = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Protocol
		varOpenapiTaskGenerationRequest.QueryParameters = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.QueryParameters
		varOpenapiTaskGenerationRequest.SelectedApis = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.SelectedApis
		varOpenapiTaskGenerationRequest.Status = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Status
		varOpenapiTaskGenerationRequest.TaskPrefix = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.TaskPrefix
		varOpenapiTaskGenerationRequest.TaskTags = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.TaskTags
		varOpenapiTaskGenerationRequest.Url = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Url
		varOpenapiTaskGenerationRequest.Organization = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Organization
		varOpenapiTaskGenerationRequest.Source = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Source
		varOpenapiTaskGenerationRequest.Workflow = varOpenapiTaskGenerationRequestWithoutEmbeddedStruct.Workflow
		*o = OpenapiTaskGenerationRequest(varOpenapiTaskGenerationRequest)
	} else {
		return err
	}

	varOpenapiTaskGenerationRequest := _OpenapiTaskGenerationRequest{}

	err = json.Unmarshal(data, &varOpenapiTaskGenerationRequest)
	if err == nil {
		o.MoBaseMo = varOpenapiTaskGenerationRequest.MoBaseMo
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "EndpointType")
		delete(additionalProperties, "FailedTasks")
		delete(additionalProperties, "HeaderParameters")
		delete(additionalProperties, "IsValidateRequest")
		delete(additionalProperties, "Protocol")
		delete(additionalProperties, "QueryParameters")
		delete(additionalProperties, "SelectedApis")
		delete(additionalProperties, "Status")
		delete(additionalProperties, "TaskPrefix")
		delete(additionalProperties, "TaskTags")
		delete(additionalProperties, "Url")
		delete(additionalProperties, "Organization")
		delete(additionalProperties, "Source")
		delete(additionalProperties, "Workflow")

		// remove fields from embedded structs
		reflectMoBaseMo := reflect.ValueOf(o.MoBaseMo)
		for i := 0; i < reflectMoBaseMo.Type().NumField(); i++ {
			t := reflectMoBaseMo.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOpenapiTaskGenerationRequest struct {
	value *OpenapiTaskGenerationRequest
	isSet bool
}

func (v NullableOpenapiTaskGenerationRequest) Get() *OpenapiTaskGenerationRequest {
	return v.value
}

func (v *NullableOpenapiTaskGenerationRequest) Set(val *OpenapiTaskGenerationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiTaskGenerationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiTaskGenerationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiTaskGenerationRequest(val *OpenapiTaskGenerationRequest) *NullableOpenapiTaskGenerationRequest {
	return &NullableOpenapiTaskGenerationRequest{value: val, isSet: true}
}

func (v NullableOpenapiTaskGenerationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiTaskGenerationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
