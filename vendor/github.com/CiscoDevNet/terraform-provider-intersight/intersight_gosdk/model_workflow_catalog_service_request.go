/*
Cisco Intersight

Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document.

API version: 1.0.11-2024100405
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"fmt"
	"reflect"
	"strings"
	"time"
)

// checks if the WorkflowCatalogServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowCatalogServiceRequest{}

// WorkflowCatalogServiceRequest Catalog Service Request is one instance of a catalog item based on a catalog item definition.
type WorkflowCatalogServiceRequest struct {
	MoBaseMo
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// The description for this catalog service request which provides information on request from the user.
	Description *string `json:"Description,omitempty"`
	// The time at which the service request completed or stopped.
	EndTime *time.Time `json:"EndTime,omitempty"`
	// Inputs for a catalog service request instance creation, format is specified by input definition of the catalog item definition.
	Input interface{} `json:"Input,omitempty"`
	// A user friendly short name to identify the catalog service request instance. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.), colon (:), space ( ) or an underscore (_).
	Label    *string                 `json:"Label,omitempty" validate:"regexp=^$|^[a-zA-Z0-9]+[\\\\sa-zA-Z0-9_.:-]{1,92}$"`
	Messages []ServicerequestMessage `json:"Messages,omitempty"`
	// A name of the catalog service request instance.
	Name                    *string                             `json:"Name,omitempty" validate:"regexp=^[a-zA-Z0-9]+[\\\\sa-zA-Z0-9_.:-]{1,92}$"`
	Operation               NullableWorkflowBaseOperation       `json:"Operation,omitempty"`
	SelectionCriteriaInputs []ServiceitemSelectionCriteriaInput `json:"SelectionCriteriaInputs,omitempty"`
	// Status of the catalog service request instance which determines the actions that are allowed on this instance. * `NotCreated` - The service item is not yet created and it is in a draft mode. A service item instance can be deleted in this state. * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be started. * `Failed` - The last action on the service item instance failed and corrective measures need to be taken to bring the service item instance back to valid state. * `Okay` - The last action on the service item instance completed and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and can be safely deleted. A service item instance in any other state after it has been created cannot be deleted until it has been decommissioned.
	Status *string `json:"Status,omitempty"`
	// The user identifier who invoked the request to create the catalog service request.
	UserIdOrEmail         *string                                           `json:"UserIdOrEmail,omitempty"`
	CatalogItemDefinition NullableWorkflowCatalogItemDefinitionRelationship `json:"CatalogItemDefinition,omitempty"`
	Idp                   NullableIamIdpRelationship                        `json:"Idp,omitempty"`
	IdpReference          NullableIamIdpReferenceRelationship               `json:"IdpReference,omitempty"`
	Organization          NullableOrganizationOrganizationRelationship      `json:"Organization,omitempty"`
	// An array of relationships to workflowServiceItemActionInstance resources.
	ServiceItemActionInstances []WorkflowServiceItemActionInstanceRelationship `json:"ServiceItemActionInstances,omitempty"`
	// An array of relationships to workflowServiceItemInstance resources.
	ServiceItemInstances []WorkflowServiceItemInstanceRelationship `json:"ServiceItemInstances,omitempty"`
	User                 NullableIamUserRelationship               `json:"User,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowCatalogServiceRequest WorkflowCatalogServiceRequest

// NewWorkflowCatalogServiceRequest instantiates a new WorkflowCatalogServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowCatalogServiceRequest(classId string, objectType string) *WorkflowCatalogServiceRequest {
	this := WorkflowCatalogServiceRequest{}
	this.ClassId = classId
	this.ObjectType = objectType
	return &this
}

// NewWorkflowCatalogServiceRequestWithDefaults instantiates a new WorkflowCatalogServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowCatalogServiceRequestWithDefaults() *WorkflowCatalogServiceRequest {
	this := WorkflowCatalogServiceRequest{}
	var classId string = "workflow.CatalogServiceRequest"
	this.ClassId = classId
	var objectType string = "workflow.CatalogServiceRequest"
	this.ObjectType = objectType
	return &this
}

// GetClassId returns the ClassId field value
func (o *WorkflowCatalogServiceRequest) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *WorkflowCatalogServiceRequest) SetClassId(v string) {
	o.ClassId = v
}

// GetDefaultClassId returns the default value "workflow.CatalogServiceRequest" of the ClassId field.
func (o *WorkflowCatalogServiceRequest) GetDefaultClassId() interface{} {
	return "workflow.CatalogServiceRequest"
}

// GetObjectType returns the ObjectType field value
func (o *WorkflowCatalogServiceRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *WorkflowCatalogServiceRequest) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDefaultObjectType returns the default value "workflow.CatalogServiceRequest" of the ObjectType field.
func (o *WorkflowCatalogServiceRequest) GetDefaultObjectType() interface{} {
	return "workflow.CatalogServiceRequest"
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowCatalogServiceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *WorkflowCatalogServiceRequest) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetInput returns the Input field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return &o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given interface{} and assigns it to the Input field.
func (o *WorkflowCatalogServiceRequest) SetInput(v interface{}) {
	o.Input = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *WorkflowCatalogServiceRequest) SetLabel(v string) {
	o.Label = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetMessages() []ServicerequestMessage {
	if o == nil {
		var ret []ServicerequestMessage
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetMessagesOk() ([]ServicerequestMessage, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []ServicerequestMessage and assigns it to the Messages field.
func (o *WorkflowCatalogServiceRequest) SetMessages(v []ServicerequestMessage) {
	o.Messages = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowCatalogServiceRequest) SetName(v string) {
	o.Name = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetOperation() WorkflowBaseOperation {
	if o == nil || IsNil(o.Operation.Get()) {
		var ret WorkflowBaseOperation
		return ret
	}
	return *o.Operation.Get()
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetOperationOk() (*WorkflowBaseOperation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operation.Get(), o.Operation.IsSet()
}

// HasOperation returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasOperation() bool {
	if o != nil && o.Operation.IsSet() {
		return true
	}

	return false
}

// SetOperation gets a reference to the given NullableWorkflowBaseOperation and assigns it to the Operation field.
func (o *WorkflowCatalogServiceRequest) SetOperation(v WorkflowBaseOperation) {
	o.Operation.Set(&v)
}

// SetOperationNil sets the value for Operation to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetOperationNil() {
	o.Operation.Set(nil)
}

// UnsetOperation ensures that no value is present for Operation, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetOperation() {
	o.Operation.Unset()
}

// GetSelectionCriteriaInputs returns the SelectionCriteriaInputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetSelectionCriteriaInputs() []ServiceitemSelectionCriteriaInput {
	if o == nil {
		var ret []ServiceitemSelectionCriteriaInput
		return ret
	}
	return o.SelectionCriteriaInputs
}

// GetSelectionCriteriaInputsOk returns a tuple with the SelectionCriteriaInputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetSelectionCriteriaInputsOk() ([]ServiceitemSelectionCriteriaInput, bool) {
	if o == nil || IsNil(o.SelectionCriteriaInputs) {
		return nil, false
	}
	return o.SelectionCriteriaInputs, true
}

// HasSelectionCriteriaInputs returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasSelectionCriteriaInputs() bool {
	if o != nil && !IsNil(o.SelectionCriteriaInputs) {
		return true
	}

	return false
}

// SetSelectionCriteriaInputs gets a reference to the given []ServiceitemSelectionCriteriaInput and assigns it to the SelectionCriteriaInputs field.
func (o *WorkflowCatalogServiceRequest) SetSelectionCriteriaInputs(v []ServiceitemSelectionCriteriaInput) {
	o.SelectionCriteriaInputs = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WorkflowCatalogServiceRequest) SetStatus(v string) {
	o.Status = &v
}

// GetUserIdOrEmail returns the UserIdOrEmail field value if set, zero value otherwise.
func (o *WorkflowCatalogServiceRequest) GetUserIdOrEmail() string {
	if o == nil || IsNil(o.UserIdOrEmail) {
		var ret string
		return ret
	}
	return *o.UserIdOrEmail
}

// GetUserIdOrEmailOk returns a tuple with the UserIdOrEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowCatalogServiceRequest) GetUserIdOrEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdOrEmail) {
		return nil, false
	}
	return o.UserIdOrEmail, true
}

// HasUserIdOrEmail returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasUserIdOrEmail() bool {
	if o != nil && !IsNil(o.UserIdOrEmail) {
		return true
	}

	return false
}

// SetUserIdOrEmail gets a reference to the given string and assigns it to the UserIdOrEmail field.
func (o *WorkflowCatalogServiceRequest) SetUserIdOrEmail(v string) {
	o.UserIdOrEmail = &v
}

// GetCatalogItemDefinition returns the CatalogItemDefinition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetCatalogItemDefinition() WorkflowCatalogItemDefinitionRelationship {
	if o == nil || IsNil(o.CatalogItemDefinition.Get()) {
		var ret WorkflowCatalogItemDefinitionRelationship
		return ret
	}
	return *o.CatalogItemDefinition.Get()
}

// GetCatalogItemDefinitionOk returns a tuple with the CatalogItemDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetCatalogItemDefinitionOk() (*WorkflowCatalogItemDefinitionRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogItemDefinition.Get(), o.CatalogItemDefinition.IsSet()
}

// HasCatalogItemDefinition returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasCatalogItemDefinition() bool {
	if o != nil && o.CatalogItemDefinition.IsSet() {
		return true
	}

	return false
}

// SetCatalogItemDefinition gets a reference to the given NullableWorkflowCatalogItemDefinitionRelationship and assigns it to the CatalogItemDefinition field.
func (o *WorkflowCatalogServiceRequest) SetCatalogItemDefinition(v WorkflowCatalogItemDefinitionRelationship) {
	o.CatalogItemDefinition.Set(&v)
}

// SetCatalogItemDefinitionNil sets the value for CatalogItemDefinition to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetCatalogItemDefinitionNil() {
	o.CatalogItemDefinition.Set(nil)
}

// UnsetCatalogItemDefinition ensures that no value is present for CatalogItemDefinition, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetCatalogItemDefinition() {
	o.CatalogItemDefinition.Unset()
}

// GetIdp returns the Idp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetIdp() IamIdpRelationship {
	if o == nil || IsNil(o.Idp.Get()) {
		var ret IamIdpRelationship
		return ret
	}
	return *o.Idp.Get()
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetIdpOk() (*IamIdpRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Idp.Get(), o.Idp.IsSet()
}

// HasIdp returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasIdp() bool {
	if o != nil && o.Idp.IsSet() {
		return true
	}

	return false
}

// SetIdp gets a reference to the given NullableIamIdpRelationship and assigns it to the Idp field.
func (o *WorkflowCatalogServiceRequest) SetIdp(v IamIdpRelationship) {
	o.Idp.Set(&v)
}

// SetIdpNil sets the value for Idp to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetIdpNil() {
	o.Idp.Set(nil)
}

// UnsetIdp ensures that no value is present for Idp, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetIdp() {
	o.Idp.Unset()
}

// GetIdpReference returns the IdpReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetIdpReference() IamIdpReferenceRelationship {
	if o == nil || IsNil(o.IdpReference.Get()) {
		var ret IamIdpReferenceRelationship
		return ret
	}
	return *o.IdpReference.Get()
}

// GetIdpReferenceOk returns a tuple with the IdpReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetIdpReferenceOk() (*IamIdpReferenceRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdpReference.Get(), o.IdpReference.IsSet()
}

// HasIdpReference returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasIdpReference() bool {
	if o != nil && o.IdpReference.IsSet() {
		return true
	}

	return false
}

// SetIdpReference gets a reference to the given NullableIamIdpReferenceRelationship and assigns it to the IdpReference field.
func (o *WorkflowCatalogServiceRequest) SetIdpReference(v IamIdpReferenceRelationship) {
	o.IdpReference.Set(&v)
}

// SetIdpReferenceNil sets the value for IdpReference to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetIdpReferenceNil() {
	o.IdpReference.Set(nil)
}

// UnsetIdpReference ensures that no value is present for IdpReference, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetIdpReference() {
	o.IdpReference.Unset()
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetOrganization() OrganizationOrganizationRelationship {
	if o == nil || IsNil(o.Organization.Get()) {
		var ret OrganizationOrganizationRelationship
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetOrganizationOk() (*OrganizationOrganizationRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableOrganizationOrganizationRelationship and assigns it to the Organization field.
func (o *WorkflowCatalogServiceRequest) SetOrganization(v OrganizationOrganizationRelationship) {
	o.Organization.Set(&v)
}

// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetOrganization() {
	o.Organization.Unset()
}

// GetServiceItemActionInstances returns the ServiceItemActionInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetServiceItemActionInstances() []WorkflowServiceItemActionInstanceRelationship {
	if o == nil {
		var ret []WorkflowServiceItemActionInstanceRelationship
		return ret
	}
	return o.ServiceItemActionInstances
}

// GetServiceItemActionInstancesOk returns a tuple with the ServiceItemActionInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetServiceItemActionInstancesOk() ([]WorkflowServiceItemActionInstanceRelationship, bool) {
	if o == nil || IsNil(o.ServiceItemActionInstances) {
		return nil, false
	}
	return o.ServiceItemActionInstances, true
}

// HasServiceItemActionInstances returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasServiceItemActionInstances() bool {
	if o != nil && !IsNil(o.ServiceItemActionInstances) {
		return true
	}

	return false
}

// SetServiceItemActionInstances gets a reference to the given []WorkflowServiceItemActionInstanceRelationship and assigns it to the ServiceItemActionInstances field.
func (o *WorkflowCatalogServiceRequest) SetServiceItemActionInstances(v []WorkflowServiceItemActionInstanceRelationship) {
	o.ServiceItemActionInstances = v
}

// GetServiceItemInstances returns the ServiceItemInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetServiceItemInstances() []WorkflowServiceItemInstanceRelationship {
	if o == nil {
		var ret []WorkflowServiceItemInstanceRelationship
		return ret
	}
	return o.ServiceItemInstances
}

// GetServiceItemInstancesOk returns a tuple with the ServiceItemInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetServiceItemInstancesOk() ([]WorkflowServiceItemInstanceRelationship, bool) {
	if o == nil || IsNil(o.ServiceItemInstances) {
		return nil, false
	}
	return o.ServiceItemInstances, true
}

// HasServiceItemInstances returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasServiceItemInstances() bool {
	if o != nil && !IsNil(o.ServiceItemInstances) {
		return true
	}

	return false
}

// SetServiceItemInstances gets a reference to the given []WorkflowServiceItemInstanceRelationship and assigns it to the ServiceItemInstances field.
func (o *WorkflowCatalogServiceRequest) SetServiceItemInstances(v []WorkflowServiceItemInstanceRelationship) {
	o.ServiceItemInstances = v
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowCatalogServiceRequest) GetUser() IamUserRelationship {
	if o == nil || IsNil(o.User.Get()) {
		var ret IamUserRelationship
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowCatalogServiceRequest) GetUserOk() (*IamUserRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *WorkflowCatalogServiceRequest) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableIamUserRelationship and assigns it to the User field.
func (o *WorkflowCatalogServiceRequest) SetUser(v IamUserRelationship) {
	o.User.Set(&v)
}

// SetUserNil sets the value for User to be an explicit nil
func (o *WorkflowCatalogServiceRequest) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *WorkflowCatalogServiceRequest) UnsetUser() {
	o.User.Unset()
}

func (o WorkflowCatalogServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowCatalogServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseMo, errMoBaseMo := json.Marshal(o.MoBaseMo)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	errMoBaseMo = json.Unmarshal([]byte(serializedMoBaseMo), &toSerialize)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	if _, exists := toSerialize["ClassId"]; !exists {
		toSerialize["ClassId"] = o.GetDefaultClassId()
	}
	toSerialize["ClassId"] = o.ClassId
	if _, exists := toSerialize["ObjectType"]; !exists {
		toSerialize["ObjectType"] = o.GetDefaultObjectType()
	}
	toSerialize["ObjectType"] = o.ObjectType
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.EndTime) {
		toSerialize["EndTime"] = o.EndTime
	}
	if o.Input != nil {
		toSerialize["Input"] = o.Input
	}
	if !IsNil(o.Label) {
		toSerialize["Label"] = o.Label
	}
	if o.Messages != nil {
		toSerialize["Messages"] = o.Messages
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if o.Operation.IsSet() {
		toSerialize["Operation"] = o.Operation.Get()
	}
	if o.SelectionCriteriaInputs != nil {
		toSerialize["SelectionCriteriaInputs"] = o.SelectionCriteriaInputs
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.UserIdOrEmail) {
		toSerialize["UserIdOrEmail"] = o.UserIdOrEmail
	}
	if o.CatalogItemDefinition.IsSet() {
		toSerialize["CatalogItemDefinition"] = o.CatalogItemDefinition.Get()
	}
	if o.Idp.IsSet() {
		toSerialize["Idp"] = o.Idp.Get()
	}
	if o.IdpReference.IsSet() {
		toSerialize["IdpReference"] = o.IdpReference.Get()
	}
	if o.Organization.IsSet() {
		toSerialize["Organization"] = o.Organization.Get()
	}
	if o.ServiceItemActionInstances != nil {
		toSerialize["ServiceItemActionInstances"] = o.ServiceItemActionInstances
	}
	if o.ServiceItemInstances != nil {
		toSerialize["ServiceItemInstances"] = o.ServiceItemInstances
	}
	if o.User.IsSet() {
		toSerialize["User"] = o.User.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkflowCatalogServiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ClassId",
		"ObjectType",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{
		"ClassId":    o.GetDefaultClassId,
		"ObjectType": o.GetDefaultObjectType,
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	type WorkflowCatalogServiceRequestWithoutEmbeddedStruct struct {
		// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
		ClassId string `json:"ClassId"`
		// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
		ObjectType string `json:"ObjectType"`
		// The description for this catalog service request which provides information on request from the user.
		Description *string `json:"Description,omitempty"`
		// The time at which the service request completed or stopped.
		EndTime *time.Time `json:"EndTime,omitempty"`
		// Inputs for a catalog service request instance creation, format is specified by input definition of the catalog item definition.
		Input interface{} `json:"Input,omitempty"`
		// A user friendly short name to identify the catalog service request instance. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.), colon (:), space ( ) or an underscore (_).
		Label    *string                 `json:"Label,omitempty" validate:"regexp=^$|^[a-zA-Z0-9]+[\\\\sa-zA-Z0-9_.:-]{1,92}$"`
		Messages []ServicerequestMessage `json:"Messages,omitempty"`
		// A name of the catalog service request instance.
		Name                    *string                             `json:"Name,omitempty" validate:"regexp=^[a-zA-Z0-9]+[\\\\sa-zA-Z0-9_.:-]{1,92}$"`
		Operation               NullableWorkflowBaseOperation       `json:"Operation,omitempty"`
		SelectionCriteriaInputs []ServiceitemSelectionCriteriaInput `json:"SelectionCriteriaInputs,omitempty"`
		// Status of the catalog service request instance which determines the actions that are allowed on this instance. * `NotCreated` - The service item is not yet created and it is in a draft mode. A service item instance can be deleted in this state. * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be started. * `Failed` - The last action on the service item instance failed and corrective measures need to be taken to bring the service item instance back to valid state. * `Okay` - The last action on the service item instance completed and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and can be safely deleted. A service item instance in any other state after it has been created cannot be deleted until it has been decommissioned.
		Status *string `json:"Status,omitempty"`
		// The user identifier who invoked the request to create the catalog service request.
		UserIdOrEmail         *string                                           `json:"UserIdOrEmail,omitempty"`
		CatalogItemDefinition NullableWorkflowCatalogItemDefinitionRelationship `json:"CatalogItemDefinition,omitempty"`
		Idp                   NullableIamIdpRelationship                        `json:"Idp,omitempty"`
		IdpReference          NullableIamIdpReferenceRelationship               `json:"IdpReference,omitempty"`
		Organization          NullableOrganizationOrganizationRelationship      `json:"Organization,omitempty"`
		// An array of relationships to workflowServiceItemActionInstance resources.
		ServiceItemActionInstances []WorkflowServiceItemActionInstanceRelationship `json:"ServiceItemActionInstances,omitempty"`
		// An array of relationships to workflowServiceItemInstance resources.
		ServiceItemInstances []WorkflowServiceItemInstanceRelationship `json:"ServiceItemInstances,omitempty"`
		User                 NullableIamUserRelationship               `json:"User,omitempty"`
	}

	varWorkflowCatalogServiceRequestWithoutEmbeddedStruct := WorkflowCatalogServiceRequestWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varWorkflowCatalogServiceRequestWithoutEmbeddedStruct)
	if err == nil {
		varWorkflowCatalogServiceRequest := _WorkflowCatalogServiceRequest{}
		varWorkflowCatalogServiceRequest.ClassId = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.ClassId
		varWorkflowCatalogServiceRequest.ObjectType = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.ObjectType
		varWorkflowCatalogServiceRequest.Description = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Description
		varWorkflowCatalogServiceRequest.EndTime = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.EndTime
		varWorkflowCatalogServiceRequest.Input = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Input
		varWorkflowCatalogServiceRequest.Label = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Label
		varWorkflowCatalogServiceRequest.Messages = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Messages
		varWorkflowCatalogServiceRequest.Name = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Name
		varWorkflowCatalogServiceRequest.Operation = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Operation
		varWorkflowCatalogServiceRequest.SelectionCriteriaInputs = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.SelectionCriteriaInputs
		varWorkflowCatalogServiceRequest.Status = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Status
		varWorkflowCatalogServiceRequest.UserIdOrEmail = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.UserIdOrEmail
		varWorkflowCatalogServiceRequest.CatalogItemDefinition = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.CatalogItemDefinition
		varWorkflowCatalogServiceRequest.Idp = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Idp
		varWorkflowCatalogServiceRequest.IdpReference = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.IdpReference
		varWorkflowCatalogServiceRequest.Organization = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.Organization
		varWorkflowCatalogServiceRequest.ServiceItemActionInstances = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.ServiceItemActionInstances
		varWorkflowCatalogServiceRequest.ServiceItemInstances = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.ServiceItemInstances
		varWorkflowCatalogServiceRequest.User = varWorkflowCatalogServiceRequestWithoutEmbeddedStruct.User
		*o = WorkflowCatalogServiceRequest(varWorkflowCatalogServiceRequest)
	} else {
		return err
	}

	varWorkflowCatalogServiceRequest := _WorkflowCatalogServiceRequest{}

	err = json.Unmarshal(data, &varWorkflowCatalogServiceRequest)
	if err == nil {
		o.MoBaseMo = varWorkflowCatalogServiceRequest.MoBaseMo
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "Description")
		delete(additionalProperties, "EndTime")
		delete(additionalProperties, "Input")
		delete(additionalProperties, "Label")
		delete(additionalProperties, "Messages")
		delete(additionalProperties, "Name")
		delete(additionalProperties, "Operation")
		delete(additionalProperties, "SelectionCriteriaInputs")
		delete(additionalProperties, "Status")
		delete(additionalProperties, "UserIdOrEmail")
		delete(additionalProperties, "CatalogItemDefinition")
		delete(additionalProperties, "Idp")
		delete(additionalProperties, "IdpReference")
		delete(additionalProperties, "Organization")
		delete(additionalProperties, "ServiceItemActionInstances")
		delete(additionalProperties, "ServiceItemInstances")
		delete(additionalProperties, "User")

		// remove fields from embedded structs
		reflectMoBaseMo := reflect.ValueOf(o.MoBaseMo)
		for i := 0; i < reflectMoBaseMo.Type().NumField(); i++ {
			t := reflectMoBaseMo.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowCatalogServiceRequest struct {
	value *WorkflowCatalogServiceRequest
	isSet bool
}

func (v NullableWorkflowCatalogServiceRequest) Get() *WorkflowCatalogServiceRequest {
	return v.value
}

func (v *NullableWorkflowCatalogServiceRequest) Set(val *WorkflowCatalogServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowCatalogServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowCatalogServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowCatalogServiceRequest(val *WorkflowCatalogServiceRequest) *NullableWorkflowCatalogServiceRequest {
	return &NullableWorkflowCatalogServiceRequest{value: val, isSet: true}
}

func (v NullableWorkflowCatalogServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowCatalogServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
