/*
Cisco Intersight

Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document.

API version: 1.0.11-18775
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"fmt"
	"reflect"
	"strings"
	"time"
)

// checks if the WorkflowServiceItemActionInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowServiceItemActionInstance{}

// WorkflowServiceItemActionInstance Service item action instance which represents one action on a service item instance.
type WorkflowServiceItemActionInstance struct {
	MoBaseMo
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// Name of the action that needs to be performed on the service item instance. * `None` - No action is set, this is the default value for action field. * `Validate` - Validate the action instance inputs and run the validation workflows. * `Start` - Start a new execution of the action instance. * `Rerun` - Rerun the service item action instance from the beginning. * `Retry` - Retry the workflow that has failed from the failure point. * `Cancel` - Cancel the core workflow that is in running or waiting state. This action can be used when the workflows are stuck and not progressing. * `Stop` - Stop the action instance which is in progress and didn't complete successfully. Use this action to clear the state and then delete the action instance. A completed action cannot be stopped.
	Action *string `json:"Action,omitempty"`
	// The time when the action was stopped or completed execution last time.
	EndTime *time.Time `json:"EndTime,omitempty"`
	// Inputs for a service item action and the format is specified by input definition of the service item action definition.
	Input interface{} `json:"Input,omitempty"`
	// The last action that was issued on the action definition workflows is saved in this property. * `None` - No action is set, this is the default value for action field. * `Validate` - Validate the action instance inputs and run the validation workflows. * `Start` - Start a new execution of the action instance. * `Rerun` - Rerun the service item action instance from the beginning. * `Retry` - Retry the workflow that has failed from the failure point. * `Cancel` - Cancel the core workflow that is in running or waiting state. This action can be used when the workflows are stuck and not progressing. * `Stop` - Stop the action instance which is in progress and didn't complete successfully. Use this action to clear the state and then delete the action instance. A completed action cannot be stopped.
	LastAction *string              `json:"LastAction,omitempty"`
	Messages   []ServiceitemMessage `json:"Messages,omitempty"`
	// Name for the action instance is created in the system by appending name of the service item instance to the name of the action definition.
	Name *string `json:"Name,omitempty"`
	// Lifecycle state of service item instance. * `Creating` - The service item is not yet created and creation action is in progress. * `Created` - The service item is created. * `Decommissioning` - The service item is not yet decommissioned and decommission action is in progress. * `Decommissioned` - The service item is decommisioned. * `Deleting` - The service item is not yet deleted and deletion action is in progress. * `Deleted` - The service item is deleted. * `Failed` - The service item action is failed to perform the operation.
	ResourcelifecycleStatus *string                             `json:"ResourcelifecycleStatus,omitempty"`
	SelectionCriteriaInputs []ServiceitemSelectionCriteriaInput `json:"SelectionCriteriaInputs,omitempty"`
	// Inputs for a service item action from catalog service request and the format is specified by input definition of the catalog item definition.
	ServiceRequestInput interface{} `json:"ServiceRequestInput,omitempty"`
	// The time when the action was started for execution last time.
	StartTime *time.Time `json:"StartTime,omitempty"`
	// State of the service item action instance. * `NotStarted` - An action on the service item is not yet started and it is in a draft mode. A service item action instance can be deleted in this state. * `Validating` - A validate action has been triggered on the action and until it completes the start action cannot be issued. * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be started. * `Failed` - The action on the service item instance failed and can be retried. * `Completed` - The action on the service item instance completed successfully. * `Stopping` - The stop action is running on the action instance. * `Stopped` - The action on the service item instance has stopped.
	Status *string `json:"Status,omitempty"`
	// The user identifier who invoked the request to create the service item instance.
	UserIdOrEmail      *string                                  `json:"UserIdOrEmail,omitempty"`
	ActionWorkflowInfo NullableWorkflowWorkflowInfoRelationship `json:"ActionWorkflowInfo,omitempty"`
	// An array of relationships to workflowCatalogServiceRequest resources.
	CatalogServiceRequest       []WorkflowCatalogServiceRequestRelationship             `json:"CatalogServiceRequest,omitempty"`
	Idp                         NullableIamIdpRelationship                              `json:"Idp,omitempty"`
	IdpReference                NullableIamIdpReferenceRelationship                     `json:"IdpReference,omitempty"`
	ServiceItemActionDefinition NullableWorkflowServiceItemActionDefinitionRelationship `json:"ServiceItemActionDefinition,omitempty"`
	ServiceItemDefinition       NullableWorkflowServiceItemDefinitionRelationship       `json:"ServiceItemDefinition,omitempty"`
	ServiceItemInstance         NullableWorkflowServiceItemInstanceRelationship         `json:"ServiceItemInstance,omitempty"`
	StopWorkflowInfo            NullableWorkflowWorkflowInfoRelationship                `json:"StopWorkflowInfo,omitempty"`
	User                        NullableIamUserRelationship                             `json:"User,omitempty"`
	ValidationWorkflowInfo      NullableWorkflowWorkflowInfoRelationship                `json:"ValidationWorkflowInfo,omitempty"`
	AdditionalProperties        map[string]interface{}
}

type _WorkflowServiceItemActionInstance WorkflowServiceItemActionInstance

// NewWorkflowServiceItemActionInstance instantiates a new WorkflowServiceItemActionInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowServiceItemActionInstance(classId string, objectType string) *WorkflowServiceItemActionInstance {
	this := WorkflowServiceItemActionInstance{}
	this.ClassId = classId
	this.ObjectType = objectType
	var action string = "None"
	this.Action = &action
	return &this
}

// NewWorkflowServiceItemActionInstanceWithDefaults instantiates a new WorkflowServiceItemActionInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowServiceItemActionInstanceWithDefaults() *WorkflowServiceItemActionInstance {
	this := WorkflowServiceItemActionInstance{}
	var classId string = "workflow.ServiceItemActionInstance"
	this.ClassId = classId
	var objectType string = "workflow.ServiceItemActionInstance"
	this.ObjectType = objectType
	var action string = "None"
	this.Action = &action
	return &this
}

// GetClassId returns the ClassId field value
func (o *WorkflowServiceItemActionInstance) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *WorkflowServiceItemActionInstance) SetClassId(v string) {
	o.ClassId = v
}

// GetDefaultClassId returns the default value "workflow.ServiceItemActionInstance" of the ClassId field.
func (o *WorkflowServiceItemActionInstance) GetDefaultClassId() interface{} {
	return "workflow.ServiceItemActionInstance"
}

// GetObjectType returns the ObjectType field value
func (o *WorkflowServiceItemActionInstance) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *WorkflowServiceItemActionInstance) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDefaultObjectType returns the default value "workflow.ServiceItemActionInstance" of the ObjectType field.
func (o *WorkflowServiceItemActionInstance) GetDefaultObjectType() interface{} {
	return "workflow.ServiceItemActionInstance"
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *WorkflowServiceItemActionInstance) SetAction(v string) {
	o.Action = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *WorkflowServiceItemActionInstance) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetInput returns the Input field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return &o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given interface{} and assigns it to the Input field.
func (o *WorkflowServiceItemActionInstance) SetInput(v interface{}) {
	o.Input = v
}

// GetLastAction returns the LastAction field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetLastAction() string {
	if o == nil || IsNil(o.LastAction) {
		var ret string
		return ret
	}
	return *o.LastAction
}

// GetLastActionOk returns a tuple with the LastAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetLastActionOk() (*string, bool) {
	if o == nil || IsNil(o.LastAction) {
		return nil, false
	}
	return o.LastAction, true
}

// HasLastAction returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasLastAction() bool {
	if o != nil && !IsNil(o.LastAction) {
		return true
	}

	return false
}

// SetLastAction gets a reference to the given string and assigns it to the LastAction field.
func (o *WorkflowServiceItemActionInstance) SetLastAction(v string) {
	o.LastAction = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetMessages() []ServiceitemMessage {
	if o == nil {
		var ret []ServiceitemMessage
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetMessagesOk() ([]ServiceitemMessage, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []ServiceitemMessage and assigns it to the Messages field.
func (o *WorkflowServiceItemActionInstance) SetMessages(v []ServiceitemMessage) {
	o.Messages = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkflowServiceItemActionInstance) SetName(v string) {
	o.Name = &v
}

// GetResourcelifecycleStatus returns the ResourcelifecycleStatus field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetResourcelifecycleStatus() string {
	if o == nil || IsNil(o.ResourcelifecycleStatus) {
		var ret string
		return ret
	}
	return *o.ResourcelifecycleStatus
}

// GetResourcelifecycleStatusOk returns a tuple with the ResourcelifecycleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetResourcelifecycleStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ResourcelifecycleStatus) {
		return nil, false
	}
	return o.ResourcelifecycleStatus, true
}

// HasResourcelifecycleStatus returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasResourcelifecycleStatus() bool {
	if o != nil && !IsNil(o.ResourcelifecycleStatus) {
		return true
	}

	return false
}

// SetResourcelifecycleStatus gets a reference to the given string and assigns it to the ResourcelifecycleStatus field.
func (o *WorkflowServiceItemActionInstance) SetResourcelifecycleStatus(v string) {
	o.ResourcelifecycleStatus = &v
}

// GetSelectionCriteriaInputs returns the SelectionCriteriaInputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetSelectionCriteriaInputs() []ServiceitemSelectionCriteriaInput {
	if o == nil {
		var ret []ServiceitemSelectionCriteriaInput
		return ret
	}
	return o.SelectionCriteriaInputs
}

// GetSelectionCriteriaInputsOk returns a tuple with the SelectionCriteriaInputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetSelectionCriteriaInputsOk() ([]ServiceitemSelectionCriteriaInput, bool) {
	if o == nil || IsNil(o.SelectionCriteriaInputs) {
		return nil, false
	}
	return o.SelectionCriteriaInputs, true
}

// HasSelectionCriteriaInputs returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasSelectionCriteriaInputs() bool {
	if o != nil && !IsNil(o.SelectionCriteriaInputs) {
		return true
	}

	return false
}

// SetSelectionCriteriaInputs gets a reference to the given []ServiceitemSelectionCriteriaInput and assigns it to the SelectionCriteriaInputs field.
func (o *WorkflowServiceItemActionInstance) SetSelectionCriteriaInputs(v []ServiceitemSelectionCriteriaInput) {
	o.SelectionCriteriaInputs = v
}

// GetServiceRequestInput returns the ServiceRequestInput field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetServiceRequestInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ServiceRequestInput
}

// GetServiceRequestInputOk returns a tuple with the ServiceRequestInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetServiceRequestInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ServiceRequestInput) {
		return nil, false
	}
	return &o.ServiceRequestInput, true
}

// HasServiceRequestInput returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasServiceRequestInput() bool {
	if o != nil && !IsNil(o.ServiceRequestInput) {
		return true
	}

	return false
}

// SetServiceRequestInput gets a reference to the given interface{} and assigns it to the ServiceRequestInput field.
func (o *WorkflowServiceItemActionInstance) SetServiceRequestInput(v interface{}) {
	o.ServiceRequestInput = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *WorkflowServiceItemActionInstance) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WorkflowServiceItemActionInstance) SetStatus(v string) {
	o.Status = &v
}

// GetUserIdOrEmail returns the UserIdOrEmail field value if set, zero value otherwise.
func (o *WorkflowServiceItemActionInstance) GetUserIdOrEmail() string {
	if o == nil || IsNil(o.UserIdOrEmail) {
		var ret string
		return ret
	}
	return *o.UserIdOrEmail
}

// GetUserIdOrEmailOk returns a tuple with the UserIdOrEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowServiceItemActionInstance) GetUserIdOrEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdOrEmail) {
		return nil, false
	}
	return o.UserIdOrEmail, true
}

// HasUserIdOrEmail returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasUserIdOrEmail() bool {
	if o != nil && !IsNil(o.UserIdOrEmail) {
		return true
	}

	return false
}

// SetUserIdOrEmail gets a reference to the given string and assigns it to the UserIdOrEmail field.
func (o *WorkflowServiceItemActionInstance) SetUserIdOrEmail(v string) {
	o.UserIdOrEmail = &v
}

// GetActionWorkflowInfo returns the ActionWorkflowInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetActionWorkflowInfo() WorkflowWorkflowInfoRelationship {
	if o == nil || IsNil(o.ActionWorkflowInfo.Get()) {
		var ret WorkflowWorkflowInfoRelationship
		return ret
	}
	return *o.ActionWorkflowInfo.Get()
}

// GetActionWorkflowInfoOk returns a tuple with the ActionWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetActionWorkflowInfoOk() (*WorkflowWorkflowInfoRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionWorkflowInfo.Get(), o.ActionWorkflowInfo.IsSet()
}

// HasActionWorkflowInfo returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasActionWorkflowInfo() bool {
	if o != nil && o.ActionWorkflowInfo.IsSet() {
		return true
	}

	return false
}

// SetActionWorkflowInfo gets a reference to the given NullableWorkflowWorkflowInfoRelationship and assigns it to the ActionWorkflowInfo field.
func (o *WorkflowServiceItemActionInstance) SetActionWorkflowInfo(v WorkflowWorkflowInfoRelationship) {
	o.ActionWorkflowInfo.Set(&v)
}

// SetActionWorkflowInfoNil sets the value for ActionWorkflowInfo to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetActionWorkflowInfoNil() {
	o.ActionWorkflowInfo.Set(nil)
}

// UnsetActionWorkflowInfo ensures that no value is present for ActionWorkflowInfo, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetActionWorkflowInfo() {
	o.ActionWorkflowInfo.Unset()
}

// GetCatalogServiceRequest returns the CatalogServiceRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetCatalogServiceRequest() []WorkflowCatalogServiceRequestRelationship {
	if o == nil {
		var ret []WorkflowCatalogServiceRequestRelationship
		return ret
	}
	return o.CatalogServiceRequest
}

// GetCatalogServiceRequestOk returns a tuple with the CatalogServiceRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetCatalogServiceRequestOk() ([]WorkflowCatalogServiceRequestRelationship, bool) {
	if o == nil || IsNil(o.CatalogServiceRequest) {
		return nil, false
	}
	return o.CatalogServiceRequest, true
}

// HasCatalogServiceRequest returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasCatalogServiceRequest() bool {
	if o != nil && !IsNil(o.CatalogServiceRequest) {
		return true
	}

	return false
}

// SetCatalogServiceRequest gets a reference to the given []WorkflowCatalogServiceRequestRelationship and assigns it to the CatalogServiceRequest field.
func (o *WorkflowServiceItemActionInstance) SetCatalogServiceRequest(v []WorkflowCatalogServiceRequestRelationship) {
	o.CatalogServiceRequest = v
}

// GetIdp returns the Idp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetIdp() IamIdpRelationship {
	if o == nil || IsNil(o.Idp.Get()) {
		var ret IamIdpRelationship
		return ret
	}
	return *o.Idp.Get()
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetIdpOk() (*IamIdpRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Idp.Get(), o.Idp.IsSet()
}

// HasIdp returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasIdp() bool {
	if o != nil && o.Idp.IsSet() {
		return true
	}

	return false
}

// SetIdp gets a reference to the given NullableIamIdpRelationship and assigns it to the Idp field.
func (o *WorkflowServiceItemActionInstance) SetIdp(v IamIdpRelationship) {
	o.Idp.Set(&v)
}

// SetIdpNil sets the value for Idp to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetIdpNil() {
	o.Idp.Set(nil)
}

// UnsetIdp ensures that no value is present for Idp, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetIdp() {
	o.Idp.Unset()
}

// GetIdpReference returns the IdpReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetIdpReference() IamIdpReferenceRelationship {
	if o == nil || IsNil(o.IdpReference.Get()) {
		var ret IamIdpReferenceRelationship
		return ret
	}
	return *o.IdpReference.Get()
}

// GetIdpReferenceOk returns a tuple with the IdpReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetIdpReferenceOk() (*IamIdpReferenceRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdpReference.Get(), o.IdpReference.IsSet()
}

// HasIdpReference returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasIdpReference() bool {
	if o != nil && o.IdpReference.IsSet() {
		return true
	}

	return false
}

// SetIdpReference gets a reference to the given NullableIamIdpReferenceRelationship and assigns it to the IdpReference field.
func (o *WorkflowServiceItemActionInstance) SetIdpReference(v IamIdpReferenceRelationship) {
	o.IdpReference.Set(&v)
}

// SetIdpReferenceNil sets the value for IdpReference to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetIdpReferenceNil() {
	o.IdpReference.Set(nil)
}

// UnsetIdpReference ensures that no value is present for IdpReference, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetIdpReference() {
	o.IdpReference.Unset()
}

// GetServiceItemActionDefinition returns the ServiceItemActionDefinition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetServiceItemActionDefinition() WorkflowServiceItemActionDefinitionRelationship {
	if o == nil || IsNil(o.ServiceItemActionDefinition.Get()) {
		var ret WorkflowServiceItemActionDefinitionRelationship
		return ret
	}
	return *o.ServiceItemActionDefinition.Get()
}

// GetServiceItemActionDefinitionOk returns a tuple with the ServiceItemActionDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetServiceItemActionDefinitionOk() (*WorkflowServiceItemActionDefinitionRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceItemActionDefinition.Get(), o.ServiceItemActionDefinition.IsSet()
}

// HasServiceItemActionDefinition returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasServiceItemActionDefinition() bool {
	if o != nil && o.ServiceItemActionDefinition.IsSet() {
		return true
	}

	return false
}

// SetServiceItemActionDefinition gets a reference to the given NullableWorkflowServiceItemActionDefinitionRelationship and assigns it to the ServiceItemActionDefinition field.
func (o *WorkflowServiceItemActionInstance) SetServiceItemActionDefinition(v WorkflowServiceItemActionDefinitionRelationship) {
	o.ServiceItemActionDefinition.Set(&v)
}

// SetServiceItemActionDefinitionNil sets the value for ServiceItemActionDefinition to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetServiceItemActionDefinitionNil() {
	o.ServiceItemActionDefinition.Set(nil)
}

// UnsetServiceItemActionDefinition ensures that no value is present for ServiceItemActionDefinition, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetServiceItemActionDefinition() {
	o.ServiceItemActionDefinition.Unset()
}

// GetServiceItemDefinition returns the ServiceItemDefinition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetServiceItemDefinition() WorkflowServiceItemDefinitionRelationship {
	if o == nil || IsNil(o.ServiceItemDefinition.Get()) {
		var ret WorkflowServiceItemDefinitionRelationship
		return ret
	}
	return *o.ServiceItemDefinition.Get()
}

// GetServiceItemDefinitionOk returns a tuple with the ServiceItemDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetServiceItemDefinitionOk() (*WorkflowServiceItemDefinitionRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceItemDefinition.Get(), o.ServiceItemDefinition.IsSet()
}

// HasServiceItemDefinition returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasServiceItemDefinition() bool {
	if o != nil && o.ServiceItemDefinition.IsSet() {
		return true
	}

	return false
}

// SetServiceItemDefinition gets a reference to the given NullableWorkflowServiceItemDefinitionRelationship and assigns it to the ServiceItemDefinition field.
func (o *WorkflowServiceItemActionInstance) SetServiceItemDefinition(v WorkflowServiceItemDefinitionRelationship) {
	o.ServiceItemDefinition.Set(&v)
}

// SetServiceItemDefinitionNil sets the value for ServiceItemDefinition to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetServiceItemDefinitionNil() {
	o.ServiceItemDefinition.Set(nil)
}

// UnsetServiceItemDefinition ensures that no value is present for ServiceItemDefinition, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetServiceItemDefinition() {
	o.ServiceItemDefinition.Unset()
}

// GetServiceItemInstance returns the ServiceItemInstance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetServiceItemInstance() WorkflowServiceItemInstanceRelationship {
	if o == nil || IsNil(o.ServiceItemInstance.Get()) {
		var ret WorkflowServiceItemInstanceRelationship
		return ret
	}
	return *o.ServiceItemInstance.Get()
}

// GetServiceItemInstanceOk returns a tuple with the ServiceItemInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetServiceItemInstanceOk() (*WorkflowServiceItemInstanceRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceItemInstance.Get(), o.ServiceItemInstance.IsSet()
}

// HasServiceItemInstance returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasServiceItemInstance() bool {
	if o != nil && o.ServiceItemInstance.IsSet() {
		return true
	}

	return false
}

// SetServiceItemInstance gets a reference to the given NullableWorkflowServiceItemInstanceRelationship and assigns it to the ServiceItemInstance field.
func (o *WorkflowServiceItemActionInstance) SetServiceItemInstance(v WorkflowServiceItemInstanceRelationship) {
	o.ServiceItemInstance.Set(&v)
}

// SetServiceItemInstanceNil sets the value for ServiceItemInstance to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetServiceItemInstanceNil() {
	o.ServiceItemInstance.Set(nil)
}

// UnsetServiceItemInstance ensures that no value is present for ServiceItemInstance, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetServiceItemInstance() {
	o.ServiceItemInstance.Unset()
}

// GetStopWorkflowInfo returns the StopWorkflowInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetStopWorkflowInfo() WorkflowWorkflowInfoRelationship {
	if o == nil || IsNil(o.StopWorkflowInfo.Get()) {
		var ret WorkflowWorkflowInfoRelationship
		return ret
	}
	return *o.StopWorkflowInfo.Get()
}

// GetStopWorkflowInfoOk returns a tuple with the StopWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetStopWorkflowInfoOk() (*WorkflowWorkflowInfoRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.StopWorkflowInfo.Get(), o.StopWorkflowInfo.IsSet()
}

// HasStopWorkflowInfo returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasStopWorkflowInfo() bool {
	if o != nil && o.StopWorkflowInfo.IsSet() {
		return true
	}

	return false
}

// SetStopWorkflowInfo gets a reference to the given NullableWorkflowWorkflowInfoRelationship and assigns it to the StopWorkflowInfo field.
func (o *WorkflowServiceItemActionInstance) SetStopWorkflowInfo(v WorkflowWorkflowInfoRelationship) {
	o.StopWorkflowInfo.Set(&v)
}

// SetStopWorkflowInfoNil sets the value for StopWorkflowInfo to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetStopWorkflowInfoNil() {
	o.StopWorkflowInfo.Set(nil)
}

// UnsetStopWorkflowInfo ensures that no value is present for StopWorkflowInfo, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetStopWorkflowInfo() {
	o.StopWorkflowInfo.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetUser() IamUserRelationship {
	if o == nil || IsNil(o.User.Get()) {
		var ret IamUserRelationship
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetUserOk() (*IamUserRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableIamUserRelationship and assigns it to the User field.
func (o *WorkflowServiceItemActionInstance) SetUser(v IamUserRelationship) {
	o.User.Set(&v)
}

// SetUserNil sets the value for User to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetUser() {
	o.User.Unset()
}

// GetValidationWorkflowInfo returns the ValidationWorkflowInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowServiceItemActionInstance) GetValidationWorkflowInfo() WorkflowWorkflowInfoRelationship {
	if o == nil || IsNil(o.ValidationWorkflowInfo.Get()) {
		var ret WorkflowWorkflowInfoRelationship
		return ret
	}
	return *o.ValidationWorkflowInfo.Get()
}

// GetValidationWorkflowInfoOk returns a tuple with the ValidationWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowServiceItemActionInstance) GetValidationWorkflowInfoOk() (*WorkflowWorkflowInfoRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidationWorkflowInfo.Get(), o.ValidationWorkflowInfo.IsSet()
}

// HasValidationWorkflowInfo returns a boolean if a field has been set.
func (o *WorkflowServiceItemActionInstance) HasValidationWorkflowInfo() bool {
	if o != nil && o.ValidationWorkflowInfo.IsSet() {
		return true
	}

	return false
}

// SetValidationWorkflowInfo gets a reference to the given NullableWorkflowWorkflowInfoRelationship and assigns it to the ValidationWorkflowInfo field.
func (o *WorkflowServiceItemActionInstance) SetValidationWorkflowInfo(v WorkflowWorkflowInfoRelationship) {
	o.ValidationWorkflowInfo.Set(&v)
}

// SetValidationWorkflowInfoNil sets the value for ValidationWorkflowInfo to be an explicit nil
func (o *WorkflowServiceItemActionInstance) SetValidationWorkflowInfoNil() {
	o.ValidationWorkflowInfo.Set(nil)
}

// UnsetValidationWorkflowInfo ensures that no value is present for ValidationWorkflowInfo, not even an explicit nil
func (o *WorkflowServiceItemActionInstance) UnsetValidationWorkflowInfo() {
	o.ValidationWorkflowInfo.Unset()
}

func (o WorkflowServiceItemActionInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowServiceItemActionInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseMo, errMoBaseMo := json.Marshal(o.MoBaseMo)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	errMoBaseMo = json.Unmarshal([]byte(serializedMoBaseMo), &toSerialize)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	if _, exists := toSerialize["ClassId"]; !exists {
		toSerialize["ClassId"] = o.GetDefaultClassId()
	}
	toSerialize["ClassId"] = o.ClassId
	if _, exists := toSerialize["ObjectType"]; !exists {
		toSerialize["ObjectType"] = o.GetDefaultObjectType()
	}
	toSerialize["ObjectType"] = o.ObjectType
	if !IsNil(o.Action) {
		toSerialize["Action"] = o.Action
	}
	if !IsNil(o.EndTime) {
		toSerialize["EndTime"] = o.EndTime
	}
	if o.Input != nil {
		toSerialize["Input"] = o.Input
	}
	if !IsNil(o.LastAction) {
		toSerialize["LastAction"] = o.LastAction
	}
	if o.Messages != nil {
		toSerialize["Messages"] = o.Messages
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.ResourcelifecycleStatus) {
		toSerialize["ResourcelifecycleStatus"] = o.ResourcelifecycleStatus
	}
	if o.SelectionCriteriaInputs != nil {
		toSerialize["SelectionCriteriaInputs"] = o.SelectionCriteriaInputs
	}
	if o.ServiceRequestInput != nil {
		toSerialize["ServiceRequestInput"] = o.ServiceRequestInput
	}
	if !IsNil(o.StartTime) {
		toSerialize["StartTime"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.UserIdOrEmail) {
		toSerialize["UserIdOrEmail"] = o.UserIdOrEmail
	}
	if o.ActionWorkflowInfo.IsSet() {
		toSerialize["ActionWorkflowInfo"] = o.ActionWorkflowInfo.Get()
	}
	if o.CatalogServiceRequest != nil {
		toSerialize["CatalogServiceRequest"] = o.CatalogServiceRequest
	}
	if o.Idp.IsSet() {
		toSerialize["Idp"] = o.Idp.Get()
	}
	if o.IdpReference.IsSet() {
		toSerialize["IdpReference"] = o.IdpReference.Get()
	}
	if o.ServiceItemActionDefinition.IsSet() {
		toSerialize["ServiceItemActionDefinition"] = o.ServiceItemActionDefinition.Get()
	}
	if o.ServiceItemDefinition.IsSet() {
		toSerialize["ServiceItemDefinition"] = o.ServiceItemDefinition.Get()
	}
	if o.ServiceItemInstance.IsSet() {
		toSerialize["ServiceItemInstance"] = o.ServiceItemInstance.Get()
	}
	if o.StopWorkflowInfo.IsSet() {
		toSerialize["StopWorkflowInfo"] = o.StopWorkflowInfo.Get()
	}
	if o.User.IsSet() {
		toSerialize["User"] = o.User.Get()
	}
	if o.ValidationWorkflowInfo.IsSet() {
		toSerialize["ValidationWorkflowInfo"] = o.ValidationWorkflowInfo.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkflowServiceItemActionInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ClassId",
		"ObjectType",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{
		"ClassId":    o.GetDefaultClassId,
		"ObjectType": o.GetDefaultObjectType,
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	type WorkflowServiceItemActionInstanceWithoutEmbeddedStruct struct {
		// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
		ClassId string `json:"ClassId"`
		// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
		ObjectType string `json:"ObjectType"`
		// Name of the action that needs to be performed on the service item instance. * `None` - No action is set, this is the default value for action field. * `Validate` - Validate the action instance inputs and run the validation workflows. * `Start` - Start a new execution of the action instance. * `Rerun` - Rerun the service item action instance from the beginning. * `Retry` - Retry the workflow that has failed from the failure point. * `Cancel` - Cancel the core workflow that is in running or waiting state. This action can be used when the workflows are stuck and not progressing. * `Stop` - Stop the action instance which is in progress and didn't complete successfully. Use this action to clear the state and then delete the action instance. A completed action cannot be stopped.
		Action *string `json:"Action,omitempty"`
		// The time when the action was stopped or completed execution last time.
		EndTime *time.Time `json:"EndTime,omitempty"`
		// Inputs for a service item action and the format is specified by input definition of the service item action definition.
		Input interface{} `json:"Input,omitempty"`
		// The last action that was issued on the action definition workflows is saved in this property. * `None` - No action is set, this is the default value for action field. * `Validate` - Validate the action instance inputs and run the validation workflows. * `Start` - Start a new execution of the action instance. * `Rerun` - Rerun the service item action instance from the beginning. * `Retry` - Retry the workflow that has failed from the failure point. * `Cancel` - Cancel the core workflow that is in running or waiting state. This action can be used when the workflows are stuck and not progressing. * `Stop` - Stop the action instance which is in progress and didn't complete successfully. Use this action to clear the state and then delete the action instance. A completed action cannot be stopped.
		LastAction *string              `json:"LastAction,omitempty"`
		Messages   []ServiceitemMessage `json:"Messages,omitempty"`
		// Name for the action instance is created in the system by appending name of the service item instance to the name of the action definition.
		Name *string `json:"Name,omitempty"`
		// Lifecycle state of service item instance. * `Creating` - The service item is not yet created and creation action is in progress. * `Created` - The service item is created. * `Decommissioning` - The service item is not yet decommissioned and decommission action is in progress. * `Decommissioned` - The service item is decommisioned. * `Deleting` - The service item is not yet deleted and deletion action is in progress. * `Deleted` - The service item is deleted. * `Failed` - The service item action is failed to perform the operation.
		ResourcelifecycleStatus *string                             `json:"ResourcelifecycleStatus,omitempty"`
		SelectionCriteriaInputs []ServiceitemSelectionCriteriaInput `json:"SelectionCriteriaInputs,omitempty"`
		// Inputs for a service item action from catalog service request and the format is specified by input definition of the catalog item definition.
		ServiceRequestInput interface{} `json:"ServiceRequestInput,omitempty"`
		// The time when the action was started for execution last time.
		StartTime *time.Time `json:"StartTime,omitempty"`
		// State of the service item action instance. * `NotStarted` - An action on the service item is not yet started and it is in a draft mode. A service item action instance can be deleted in this state. * `Validating` - A validate action has been triggered on the action and until it completes the start action cannot be issued. * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be started. * `Failed` - The action on the service item instance failed and can be retried. * `Completed` - The action on the service item instance completed successfully. * `Stopping` - The stop action is running on the action instance. * `Stopped` - The action on the service item instance has stopped.
		Status *string `json:"Status,omitempty"`
		// The user identifier who invoked the request to create the service item instance.
		UserIdOrEmail      *string                                  `json:"UserIdOrEmail,omitempty"`
		ActionWorkflowInfo NullableWorkflowWorkflowInfoRelationship `json:"ActionWorkflowInfo,omitempty"`
		// An array of relationships to workflowCatalogServiceRequest resources.
		CatalogServiceRequest       []WorkflowCatalogServiceRequestRelationship             `json:"CatalogServiceRequest,omitempty"`
		Idp                         NullableIamIdpRelationship                              `json:"Idp,omitempty"`
		IdpReference                NullableIamIdpReferenceRelationship                     `json:"IdpReference,omitempty"`
		ServiceItemActionDefinition NullableWorkflowServiceItemActionDefinitionRelationship `json:"ServiceItemActionDefinition,omitempty"`
		ServiceItemDefinition       NullableWorkflowServiceItemDefinitionRelationship       `json:"ServiceItemDefinition,omitempty"`
		ServiceItemInstance         NullableWorkflowServiceItemInstanceRelationship         `json:"ServiceItemInstance,omitempty"`
		StopWorkflowInfo            NullableWorkflowWorkflowInfoRelationship                `json:"StopWorkflowInfo,omitempty"`
		User                        NullableIamUserRelationship                             `json:"User,omitempty"`
		ValidationWorkflowInfo      NullableWorkflowWorkflowInfoRelationship                `json:"ValidationWorkflowInfo,omitempty"`
	}

	varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct := WorkflowServiceItemActionInstanceWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct)
	if err == nil {
		varWorkflowServiceItemActionInstance := _WorkflowServiceItemActionInstance{}
		varWorkflowServiceItemActionInstance.ClassId = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ClassId
		varWorkflowServiceItemActionInstance.ObjectType = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ObjectType
		varWorkflowServiceItemActionInstance.Action = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Action
		varWorkflowServiceItemActionInstance.EndTime = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.EndTime
		varWorkflowServiceItemActionInstance.Input = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Input
		varWorkflowServiceItemActionInstance.LastAction = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.LastAction
		varWorkflowServiceItemActionInstance.Messages = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Messages
		varWorkflowServiceItemActionInstance.Name = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Name
		varWorkflowServiceItemActionInstance.ResourcelifecycleStatus = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ResourcelifecycleStatus
		varWorkflowServiceItemActionInstance.SelectionCriteriaInputs = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.SelectionCriteriaInputs
		varWorkflowServiceItemActionInstance.ServiceRequestInput = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ServiceRequestInput
		varWorkflowServiceItemActionInstance.StartTime = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.StartTime
		varWorkflowServiceItemActionInstance.Status = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Status
		varWorkflowServiceItemActionInstance.UserIdOrEmail = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.UserIdOrEmail
		varWorkflowServiceItemActionInstance.ActionWorkflowInfo = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ActionWorkflowInfo
		varWorkflowServiceItemActionInstance.CatalogServiceRequest = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.CatalogServiceRequest
		varWorkflowServiceItemActionInstance.Idp = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.Idp
		varWorkflowServiceItemActionInstance.IdpReference = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.IdpReference
		varWorkflowServiceItemActionInstance.ServiceItemActionDefinition = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ServiceItemActionDefinition
		varWorkflowServiceItemActionInstance.ServiceItemDefinition = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ServiceItemDefinition
		varWorkflowServiceItemActionInstance.ServiceItemInstance = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ServiceItemInstance
		varWorkflowServiceItemActionInstance.StopWorkflowInfo = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.StopWorkflowInfo
		varWorkflowServiceItemActionInstance.User = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.User
		varWorkflowServiceItemActionInstance.ValidationWorkflowInfo = varWorkflowServiceItemActionInstanceWithoutEmbeddedStruct.ValidationWorkflowInfo
		*o = WorkflowServiceItemActionInstance(varWorkflowServiceItemActionInstance)
	} else {
		return err
	}

	varWorkflowServiceItemActionInstance := _WorkflowServiceItemActionInstance{}

	err = json.Unmarshal(data, &varWorkflowServiceItemActionInstance)
	if err == nil {
		o.MoBaseMo = varWorkflowServiceItemActionInstance.MoBaseMo
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "Action")
		delete(additionalProperties, "EndTime")
		delete(additionalProperties, "Input")
		delete(additionalProperties, "LastAction")
		delete(additionalProperties, "Messages")
		delete(additionalProperties, "Name")
		delete(additionalProperties, "ResourcelifecycleStatus")
		delete(additionalProperties, "SelectionCriteriaInputs")
		delete(additionalProperties, "ServiceRequestInput")
		delete(additionalProperties, "StartTime")
		delete(additionalProperties, "Status")
		delete(additionalProperties, "UserIdOrEmail")
		delete(additionalProperties, "ActionWorkflowInfo")
		delete(additionalProperties, "CatalogServiceRequest")
		delete(additionalProperties, "Idp")
		delete(additionalProperties, "IdpReference")
		delete(additionalProperties, "ServiceItemActionDefinition")
		delete(additionalProperties, "ServiceItemDefinition")
		delete(additionalProperties, "ServiceItemInstance")
		delete(additionalProperties, "StopWorkflowInfo")
		delete(additionalProperties, "User")
		delete(additionalProperties, "ValidationWorkflowInfo")

		// remove fields from embedded structs
		reflectMoBaseMo := reflect.ValueOf(o.MoBaseMo)
		for i := 0; i < reflectMoBaseMo.Type().NumField(); i++ {
			t := reflectMoBaseMo.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowServiceItemActionInstance struct {
	value *WorkflowServiceItemActionInstance
	isSet bool
}

func (v NullableWorkflowServiceItemActionInstance) Get() *WorkflowServiceItemActionInstance {
	return v.value
}

func (v *NullableWorkflowServiceItemActionInstance) Set(val *WorkflowServiceItemActionInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowServiceItemActionInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowServiceItemActionInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowServiceItemActionInstance(val *WorkflowServiceItemActionInstance) *NullableWorkflowServiceItemActionInstance {
	return &NullableWorkflowServiceItemActionInstance{value: val, isSet: true}
}

func (v NullableWorkflowServiceItemActionInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowServiceItemActionInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
