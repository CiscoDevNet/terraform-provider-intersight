/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2021-07-21T16:37:30Z.
 *
 * API version: 1.0.9-4403
 * Contact: intersight@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"reflect"
	"strings"
)

// HyperflexClusterBackupPolicyDeployment Record of HyperFlex Cluster backup policy deployment.
type HyperflexClusterBackupPolicyDeployment struct {
	MoBaseMo
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// Backup data store name used during the auto creation of the datastore. All VMs created in this data store will be automatically backed up.
	BackupDataStoreName *string `json:"BackupDataStoreName,omitempty"`
	// Replication data store size in backupDataStoreSizeUnit.
	BackupDataStoreSize *int64 `json:"BackupDataStoreSize,omitempty"`
	// Replication data store size.
	BackupDataStoreSizeUnit *string `json:"BackupDataStoreSizeUnit,omitempty"`
	// Description from corresponding ClusterBackupPolicy.
	Description *string `json:"Description,omitempty"`
	// True if record created by discovery on HyperFlex cluster.
	Discovered *bool `json:"Discovered,omitempty"`
	// Name from corresponding ClusterBackupPolicy.
	Name *string `json:"Name,omitempty"`
	// Deployed cluster policy moid.
	PolicyMoid *string `json:"PolicyMoid,omitempty"`
	// Deployed cluster profile moid.
	ProfileMoid *string `json:"ProfileMoid,omitempty"`
	// Replication cluster pairing name prefix.
	ReplicationPairNamePrefix *string                              `json:"ReplicationPairNamePrefix,omitempty"`
	ReplicationSchedule       NullableHyperflexReplicationSchedule `json:"ReplicationSchedule,omitempty"`
	// Number of snapshots that will be retained as part of the Multi Point in Time support.
	SnapshotRetentionCount *int64 `json:"SnapshotRetentionCount,omitempty"`
	// True if policy was detached from source Hyperflex Cluster.
	SourceDetached *bool `json:"SourceDetached,omitempty"`
	// Unique source cluster request ID allowing retry of the same logical request following a transient communication failure.
	SourceRequestId *string `json:"SourceRequestId,omitempty"`
	// Uuid of the source Hyperflex Cluster.
	SourceUuid *string `json:"SourceUuid,omitempty"`
	// True if policy was detached from target Hyperflex Cluster.
	TargetDetached *bool `json:"TargetDetached,omitempty"`
	// Unique target cluster request ID allowing retry of the same logical request following a transient communication failure.
	TargetRequestId *string `json:"TargetRequestId,omitempty"`
	// Uuid of the target Hyperflex Cluster.
	TargetUuid           *string                               `json:"TargetUuid,omitempty"`
	BackupTarget         *HyperflexClusterRelationship         `json:"BackupTarget,omitempty"`
	Organization         *OrganizationOrganizationRelationship `json:"Organization,omitempty"`
	SourceCluster        *HyperflexClusterRelationship         `json:"SourceCluster,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HyperflexClusterBackupPolicyDeployment HyperflexClusterBackupPolicyDeployment

// NewHyperflexClusterBackupPolicyDeployment instantiates a new HyperflexClusterBackupPolicyDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHyperflexClusterBackupPolicyDeployment(classId string, objectType string) *HyperflexClusterBackupPolicyDeployment {
	this := HyperflexClusterBackupPolicyDeployment{}
	this.ClassId = classId
	this.ObjectType = objectType
	var backupDataStoreName string = "backup-source-ds"
	this.BackupDataStoreName = &backupDataStoreName
	var backupDataStoreSize int64 = 2
	this.BackupDataStoreSize = &backupDataStoreSize
	var backupDataStoreSizeUnit string = "TB"
	this.BackupDataStoreSizeUnit = &backupDataStoreSizeUnit
	var replicationPairNamePrefix string = "backup"
	this.ReplicationPairNamePrefix = &replicationPairNamePrefix
	var snapshotRetentionCount int64 = 4
	this.SnapshotRetentionCount = &snapshotRetentionCount
	return &this
}

// NewHyperflexClusterBackupPolicyDeploymentWithDefaults instantiates a new HyperflexClusterBackupPolicyDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHyperflexClusterBackupPolicyDeploymentWithDefaults() *HyperflexClusterBackupPolicyDeployment {
	this := HyperflexClusterBackupPolicyDeployment{}
	var classId string = "hyperflex.ClusterBackupPolicyDeployment"
	this.ClassId = classId
	var objectType string = "hyperflex.ClusterBackupPolicyDeployment"
	this.ObjectType = objectType
	var backupDataStoreName string = "backup-source-ds"
	this.BackupDataStoreName = &backupDataStoreName
	var backupDataStoreSize int64 = 2
	this.BackupDataStoreSize = &backupDataStoreSize
	var backupDataStoreSizeUnit string = "TB"
	this.BackupDataStoreSizeUnit = &backupDataStoreSizeUnit
	var replicationPairNamePrefix string = "backup"
	this.ReplicationPairNamePrefix = &replicationPairNamePrefix
	var snapshotRetentionCount int64 = 4
	this.SnapshotRetentionCount = &snapshotRetentionCount
	return &this
}

// GetClassId returns the ClassId field value
func (o *HyperflexClusterBackupPolicyDeployment) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *HyperflexClusterBackupPolicyDeployment) SetClassId(v string) {
	o.ClassId = v
}

// GetObjectType returns the ObjectType field value
func (o *HyperflexClusterBackupPolicyDeployment) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *HyperflexClusterBackupPolicyDeployment) SetObjectType(v string) {
	o.ObjectType = v
}

// GetBackupDataStoreName returns the BackupDataStoreName field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreName() string {
	if o == nil || o.BackupDataStoreName == nil {
		var ret string
		return ret
	}
	return *o.BackupDataStoreName
}

// GetBackupDataStoreNameOk returns a tuple with the BackupDataStoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreNameOk() (*string, bool) {
	if o == nil || o.BackupDataStoreName == nil {
		return nil, false
	}
	return o.BackupDataStoreName, true
}

// HasBackupDataStoreName returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasBackupDataStoreName() bool {
	if o != nil && o.BackupDataStoreName != nil {
		return true
	}

	return false
}

// SetBackupDataStoreName gets a reference to the given string and assigns it to the BackupDataStoreName field.
func (o *HyperflexClusterBackupPolicyDeployment) SetBackupDataStoreName(v string) {
	o.BackupDataStoreName = &v
}

// GetBackupDataStoreSize returns the BackupDataStoreSize field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreSize() int64 {
	if o == nil || o.BackupDataStoreSize == nil {
		var ret int64
		return ret
	}
	return *o.BackupDataStoreSize
}

// GetBackupDataStoreSizeOk returns a tuple with the BackupDataStoreSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreSizeOk() (*int64, bool) {
	if o == nil || o.BackupDataStoreSize == nil {
		return nil, false
	}
	return o.BackupDataStoreSize, true
}

// HasBackupDataStoreSize returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasBackupDataStoreSize() bool {
	if o != nil && o.BackupDataStoreSize != nil {
		return true
	}

	return false
}

// SetBackupDataStoreSize gets a reference to the given int64 and assigns it to the BackupDataStoreSize field.
func (o *HyperflexClusterBackupPolicyDeployment) SetBackupDataStoreSize(v int64) {
	o.BackupDataStoreSize = &v
}

// GetBackupDataStoreSizeUnit returns the BackupDataStoreSizeUnit field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreSizeUnit() string {
	if o == nil || o.BackupDataStoreSizeUnit == nil {
		var ret string
		return ret
	}
	return *o.BackupDataStoreSizeUnit
}

// GetBackupDataStoreSizeUnitOk returns a tuple with the BackupDataStoreSizeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupDataStoreSizeUnitOk() (*string, bool) {
	if o == nil || o.BackupDataStoreSizeUnit == nil {
		return nil, false
	}
	return o.BackupDataStoreSizeUnit, true
}

// HasBackupDataStoreSizeUnit returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasBackupDataStoreSizeUnit() bool {
	if o != nil && o.BackupDataStoreSizeUnit != nil {
		return true
	}

	return false
}

// SetBackupDataStoreSizeUnit gets a reference to the given string and assigns it to the BackupDataStoreSizeUnit field.
func (o *HyperflexClusterBackupPolicyDeployment) SetBackupDataStoreSizeUnit(v string) {
	o.BackupDataStoreSizeUnit = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HyperflexClusterBackupPolicyDeployment) SetDescription(v string) {
	o.Description = &v
}

// GetDiscovered returns the Discovered field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetDiscovered() bool {
	if o == nil || o.Discovered == nil {
		var ret bool
		return ret
	}
	return *o.Discovered
}

// GetDiscoveredOk returns a tuple with the Discovered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetDiscoveredOk() (*bool, bool) {
	if o == nil || o.Discovered == nil {
		return nil, false
	}
	return o.Discovered, true
}

// HasDiscovered returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasDiscovered() bool {
	if o != nil && o.Discovered != nil {
		return true
	}

	return false
}

// SetDiscovered gets a reference to the given bool and assigns it to the Discovered field.
func (o *HyperflexClusterBackupPolicyDeployment) SetDiscovered(v bool) {
	o.Discovered = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HyperflexClusterBackupPolicyDeployment) SetName(v string) {
	o.Name = &v
}

// GetPolicyMoid returns the PolicyMoid field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetPolicyMoid() string {
	if o == nil || o.PolicyMoid == nil {
		var ret string
		return ret
	}
	return *o.PolicyMoid
}

// GetPolicyMoidOk returns a tuple with the PolicyMoid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetPolicyMoidOk() (*string, bool) {
	if o == nil || o.PolicyMoid == nil {
		return nil, false
	}
	return o.PolicyMoid, true
}

// HasPolicyMoid returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasPolicyMoid() bool {
	if o != nil && o.PolicyMoid != nil {
		return true
	}

	return false
}

// SetPolicyMoid gets a reference to the given string and assigns it to the PolicyMoid field.
func (o *HyperflexClusterBackupPolicyDeployment) SetPolicyMoid(v string) {
	o.PolicyMoid = &v
}

// GetProfileMoid returns the ProfileMoid field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetProfileMoid() string {
	if o == nil || o.ProfileMoid == nil {
		var ret string
		return ret
	}
	return *o.ProfileMoid
}

// GetProfileMoidOk returns a tuple with the ProfileMoid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetProfileMoidOk() (*string, bool) {
	if o == nil || o.ProfileMoid == nil {
		return nil, false
	}
	return o.ProfileMoid, true
}

// HasProfileMoid returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasProfileMoid() bool {
	if o != nil && o.ProfileMoid != nil {
		return true
	}

	return false
}

// SetProfileMoid gets a reference to the given string and assigns it to the ProfileMoid field.
func (o *HyperflexClusterBackupPolicyDeployment) SetProfileMoid(v string) {
	o.ProfileMoid = &v
}

// GetReplicationPairNamePrefix returns the ReplicationPairNamePrefix field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetReplicationPairNamePrefix() string {
	if o == nil || o.ReplicationPairNamePrefix == nil {
		var ret string
		return ret
	}
	return *o.ReplicationPairNamePrefix
}

// GetReplicationPairNamePrefixOk returns a tuple with the ReplicationPairNamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetReplicationPairNamePrefixOk() (*string, bool) {
	if o == nil || o.ReplicationPairNamePrefix == nil {
		return nil, false
	}
	return o.ReplicationPairNamePrefix, true
}

// HasReplicationPairNamePrefix returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasReplicationPairNamePrefix() bool {
	if o != nil && o.ReplicationPairNamePrefix != nil {
		return true
	}

	return false
}

// SetReplicationPairNamePrefix gets a reference to the given string and assigns it to the ReplicationPairNamePrefix field.
func (o *HyperflexClusterBackupPolicyDeployment) SetReplicationPairNamePrefix(v string) {
	o.ReplicationPairNamePrefix = &v
}

// GetReplicationSchedule returns the ReplicationSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HyperflexClusterBackupPolicyDeployment) GetReplicationSchedule() HyperflexReplicationSchedule {
	if o == nil || o.ReplicationSchedule.Get() == nil {
		var ret HyperflexReplicationSchedule
		return ret
	}
	return *o.ReplicationSchedule.Get()
}

// GetReplicationScheduleOk returns a tuple with the ReplicationSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HyperflexClusterBackupPolicyDeployment) GetReplicationScheduleOk() (*HyperflexReplicationSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicationSchedule.Get(), o.ReplicationSchedule.IsSet()
}

// HasReplicationSchedule returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasReplicationSchedule() bool {
	if o != nil && o.ReplicationSchedule.IsSet() {
		return true
	}

	return false
}

// SetReplicationSchedule gets a reference to the given NullableHyperflexReplicationSchedule and assigns it to the ReplicationSchedule field.
func (o *HyperflexClusterBackupPolicyDeployment) SetReplicationSchedule(v HyperflexReplicationSchedule) {
	o.ReplicationSchedule.Set(&v)
}

// SetReplicationScheduleNil sets the value for ReplicationSchedule to be an explicit nil
func (o *HyperflexClusterBackupPolicyDeployment) SetReplicationScheduleNil() {
	o.ReplicationSchedule.Set(nil)
}

// UnsetReplicationSchedule ensures that no value is present for ReplicationSchedule, not even an explicit nil
func (o *HyperflexClusterBackupPolicyDeployment) UnsetReplicationSchedule() {
	o.ReplicationSchedule.Unset()
}

// GetSnapshotRetentionCount returns the SnapshotRetentionCount field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetSnapshotRetentionCount() int64 {
	if o == nil || o.SnapshotRetentionCount == nil {
		var ret int64
		return ret
	}
	return *o.SnapshotRetentionCount
}

// GetSnapshotRetentionCountOk returns a tuple with the SnapshotRetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetSnapshotRetentionCountOk() (*int64, bool) {
	if o == nil || o.SnapshotRetentionCount == nil {
		return nil, false
	}
	return o.SnapshotRetentionCount, true
}

// HasSnapshotRetentionCount returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasSnapshotRetentionCount() bool {
	if o != nil && o.SnapshotRetentionCount != nil {
		return true
	}

	return false
}

// SetSnapshotRetentionCount gets a reference to the given int64 and assigns it to the SnapshotRetentionCount field.
func (o *HyperflexClusterBackupPolicyDeployment) SetSnapshotRetentionCount(v int64) {
	o.SnapshotRetentionCount = &v
}

// GetSourceDetached returns the SourceDetached field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceDetached() bool {
	if o == nil || o.SourceDetached == nil {
		var ret bool
		return ret
	}
	return *o.SourceDetached
}

// GetSourceDetachedOk returns a tuple with the SourceDetached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceDetachedOk() (*bool, bool) {
	if o == nil || o.SourceDetached == nil {
		return nil, false
	}
	return o.SourceDetached, true
}

// HasSourceDetached returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasSourceDetached() bool {
	if o != nil && o.SourceDetached != nil {
		return true
	}

	return false
}

// SetSourceDetached gets a reference to the given bool and assigns it to the SourceDetached field.
func (o *HyperflexClusterBackupPolicyDeployment) SetSourceDetached(v bool) {
	o.SourceDetached = &v
}

// GetSourceRequestId returns the SourceRequestId field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceRequestId() string {
	if o == nil || o.SourceRequestId == nil {
		var ret string
		return ret
	}
	return *o.SourceRequestId
}

// GetSourceRequestIdOk returns a tuple with the SourceRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceRequestIdOk() (*string, bool) {
	if o == nil || o.SourceRequestId == nil {
		return nil, false
	}
	return o.SourceRequestId, true
}

// HasSourceRequestId returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasSourceRequestId() bool {
	if o != nil && o.SourceRequestId != nil {
		return true
	}

	return false
}

// SetSourceRequestId gets a reference to the given string and assigns it to the SourceRequestId field.
func (o *HyperflexClusterBackupPolicyDeployment) SetSourceRequestId(v string) {
	o.SourceRequestId = &v
}

// GetSourceUuid returns the SourceUuid field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceUuid() string {
	if o == nil || o.SourceUuid == nil {
		var ret string
		return ret
	}
	return *o.SourceUuid
}

// GetSourceUuidOk returns a tuple with the SourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceUuidOk() (*string, bool) {
	if o == nil || o.SourceUuid == nil {
		return nil, false
	}
	return o.SourceUuid, true
}

// HasSourceUuid returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasSourceUuid() bool {
	if o != nil && o.SourceUuid != nil {
		return true
	}

	return false
}

// SetSourceUuid gets a reference to the given string and assigns it to the SourceUuid field.
func (o *HyperflexClusterBackupPolicyDeployment) SetSourceUuid(v string) {
	o.SourceUuid = &v
}

// GetTargetDetached returns the TargetDetached field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetDetached() bool {
	if o == nil || o.TargetDetached == nil {
		var ret bool
		return ret
	}
	return *o.TargetDetached
}

// GetTargetDetachedOk returns a tuple with the TargetDetached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetDetachedOk() (*bool, bool) {
	if o == nil || o.TargetDetached == nil {
		return nil, false
	}
	return o.TargetDetached, true
}

// HasTargetDetached returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasTargetDetached() bool {
	if o != nil && o.TargetDetached != nil {
		return true
	}

	return false
}

// SetTargetDetached gets a reference to the given bool and assigns it to the TargetDetached field.
func (o *HyperflexClusterBackupPolicyDeployment) SetTargetDetached(v bool) {
	o.TargetDetached = &v
}

// GetTargetRequestId returns the TargetRequestId field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetRequestId() string {
	if o == nil || o.TargetRequestId == nil {
		var ret string
		return ret
	}
	return *o.TargetRequestId
}

// GetTargetRequestIdOk returns a tuple with the TargetRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetRequestIdOk() (*string, bool) {
	if o == nil || o.TargetRequestId == nil {
		return nil, false
	}
	return o.TargetRequestId, true
}

// HasTargetRequestId returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasTargetRequestId() bool {
	if o != nil && o.TargetRequestId != nil {
		return true
	}

	return false
}

// SetTargetRequestId gets a reference to the given string and assigns it to the TargetRequestId field.
func (o *HyperflexClusterBackupPolicyDeployment) SetTargetRequestId(v string) {
	o.TargetRequestId = &v
}

// GetTargetUuid returns the TargetUuid field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetUuid() string {
	if o == nil || o.TargetUuid == nil {
		var ret string
		return ret
	}
	return *o.TargetUuid
}

// GetTargetUuidOk returns a tuple with the TargetUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetTargetUuidOk() (*string, bool) {
	if o == nil || o.TargetUuid == nil {
		return nil, false
	}
	return o.TargetUuid, true
}

// HasTargetUuid returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasTargetUuid() bool {
	if o != nil && o.TargetUuid != nil {
		return true
	}

	return false
}

// SetTargetUuid gets a reference to the given string and assigns it to the TargetUuid field.
func (o *HyperflexClusterBackupPolicyDeployment) SetTargetUuid(v string) {
	o.TargetUuid = &v
}

// GetBackupTarget returns the BackupTarget field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupTarget() HyperflexClusterRelationship {
	if o == nil || o.BackupTarget == nil {
		var ret HyperflexClusterRelationship
		return ret
	}
	return *o.BackupTarget
}

// GetBackupTargetOk returns a tuple with the BackupTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetBackupTargetOk() (*HyperflexClusterRelationship, bool) {
	if o == nil || o.BackupTarget == nil {
		return nil, false
	}
	return o.BackupTarget, true
}

// HasBackupTarget returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasBackupTarget() bool {
	if o != nil && o.BackupTarget != nil {
		return true
	}

	return false
}

// SetBackupTarget gets a reference to the given HyperflexClusterRelationship and assigns it to the BackupTarget field.
func (o *HyperflexClusterBackupPolicyDeployment) SetBackupTarget(v HyperflexClusterRelationship) {
	o.BackupTarget = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetOrganization() OrganizationOrganizationRelationship {
	if o == nil || o.Organization == nil {
		var ret OrganizationOrganizationRelationship
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetOrganizationOk() (*OrganizationOrganizationRelationship, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given OrganizationOrganizationRelationship and assigns it to the Organization field.
func (o *HyperflexClusterBackupPolicyDeployment) SetOrganization(v OrganizationOrganizationRelationship) {
	o.Organization = &v
}

// GetSourceCluster returns the SourceCluster field value if set, zero value otherwise.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceCluster() HyperflexClusterRelationship {
	if o == nil || o.SourceCluster == nil {
		var ret HyperflexClusterRelationship
		return ret
	}
	return *o.SourceCluster
}

// GetSourceClusterOk returns a tuple with the SourceCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperflexClusterBackupPolicyDeployment) GetSourceClusterOk() (*HyperflexClusterRelationship, bool) {
	if o == nil || o.SourceCluster == nil {
		return nil, false
	}
	return o.SourceCluster, true
}

// HasSourceCluster returns a boolean if a field has been set.
func (o *HyperflexClusterBackupPolicyDeployment) HasSourceCluster() bool {
	if o != nil && o.SourceCluster != nil {
		return true
	}

	return false
}

// SetSourceCluster gets a reference to the given HyperflexClusterRelationship and assigns it to the SourceCluster field.
func (o *HyperflexClusterBackupPolicyDeployment) SetSourceCluster(v HyperflexClusterRelationship) {
	o.SourceCluster = &v
}

func (o HyperflexClusterBackupPolicyDeployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseMo, errMoBaseMo := json.Marshal(o.MoBaseMo)
	if errMoBaseMo != nil {
		return []byte{}, errMoBaseMo
	}
	errMoBaseMo = json.Unmarshal([]byte(serializedMoBaseMo), &toSerialize)
	if errMoBaseMo != nil {
		return []byte{}, errMoBaseMo
	}
	if true {
		toSerialize["ClassId"] = o.ClassId
	}
	if true {
		toSerialize["ObjectType"] = o.ObjectType
	}
	if o.BackupDataStoreName != nil {
		toSerialize["BackupDataStoreName"] = o.BackupDataStoreName
	}
	if o.BackupDataStoreSize != nil {
		toSerialize["BackupDataStoreSize"] = o.BackupDataStoreSize
	}
	if o.BackupDataStoreSizeUnit != nil {
		toSerialize["BackupDataStoreSizeUnit"] = o.BackupDataStoreSizeUnit
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.Discovered != nil {
		toSerialize["Discovered"] = o.Discovered
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.PolicyMoid != nil {
		toSerialize["PolicyMoid"] = o.PolicyMoid
	}
	if o.ProfileMoid != nil {
		toSerialize["ProfileMoid"] = o.ProfileMoid
	}
	if o.ReplicationPairNamePrefix != nil {
		toSerialize["ReplicationPairNamePrefix"] = o.ReplicationPairNamePrefix
	}
	if o.ReplicationSchedule.IsSet() {
		toSerialize["ReplicationSchedule"] = o.ReplicationSchedule.Get()
	}
	if o.SnapshotRetentionCount != nil {
		toSerialize["SnapshotRetentionCount"] = o.SnapshotRetentionCount
	}
	if o.SourceDetached != nil {
		toSerialize["SourceDetached"] = o.SourceDetached
	}
	if o.SourceRequestId != nil {
		toSerialize["SourceRequestId"] = o.SourceRequestId
	}
	if o.SourceUuid != nil {
		toSerialize["SourceUuid"] = o.SourceUuid
	}
	if o.TargetDetached != nil {
		toSerialize["TargetDetached"] = o.TargetDetached
	}
	if o.TargetRequestId != nil {
		toSerialize["TargetRequestId"] = o.TargetRequestId
	}
	if o.TargetUuid != nil {
		toSerialize["TargetUuid"] = o.TargetUuid
	}
	if o.BackupTarget != nil {
		toSerialize["BackupTarget"] = o.BackupTarget
	}
	if o.Organization != nil {
		toSerialize["Organization"] = o.Organization
	}
	if o.SourceCluster != nil {
		toSerialize["SourceCluster"] = o.SourceCluster
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *HyperflexClusterBackupPolicyDeployment) UnmarshalJSON(bytes []byte) (err error) {
	type HyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct struct {
		// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
		ClassId string `json:"ClassId"`
		// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
		ObjectType string `json:"ObjectType"`
		// Backup data store name used during the auto creation of the datastore. All VMs created in this data store will be automatically backed up.
		BackupDataStoreName *string `json:"BackupDataStoreName,omitempty"`
		// Replication data store size in backupDataStoreSizeUnit.
		BackupDataStoreSize *int64 `json:"BackupDataStoreSize,omitempty"`
		// Replication data store size.
		BackupDataStoreSizeUnit *string `json:"BackupDataStoreSizeUnit,omitempty"`
		// Description from corresponding ClusterBackupPolicy.
		Description *string `json:"Description,omitempty"`
		// True if record created by discovery on HyperFlex cluster.
		Discovered *bool `json:"Discovered,omitempty"`
		// Name from corresponding ClusterBackupPolicy.
		Name *string `json:"Name,omitempty"`
		// Deployed cluster policy moid.
		PolicyMoid *string `json:"PolicyMoid,omitempty"`
		// Deployed cluster profile moid.
		ProfileMoid *string `json:"ProfileMoid,omitempty"`
		// Replication cluster pairing name prefix.
		ReplicationPairNamePrefix *string                              `json:"ReplicationPairNamePrefix,omitempty"`
		ReplicationSchedule       NullableHyperflexReplicationSchedule `json:"ReplicationSchedule,omitempty"`
		// Number of snapshots that will be retained as part of the Multi Point in Time support.
		SnapshotRetentionCount *int64 `json:"SnapshotRetentionCount,omitempty"`
		// True if policy was detached from source Hyperflex Cluster.
		SourceDetached *bool `json:"SourceDetached,omitempty"`
		// Unique source cluster request ID allowing retry of the same logical request following a transient communication failure.
		SourceRequestId *string `json:"SourceRequestId,omitempty"`
		// Uuid of the source Hyperflex Cluster.
		SourceUuid *string `json:"SourceUuid,omitempty"`
		// True if policy was detached from target Hyperflex Cluster.
		TargetDetached *bool `json:"TargetDetached,omitempty"`
		// Unique target cluster request ID allowing retry of the same logical request following a transient communication failure.
		TargetRequestId *string `json:"TargetRequestId,omitempty"`
		// Uuid of the target Hyperflex Cluster.
		TargetUuid    *string                               `json:"TargetUuid,omitempty"`
		BackupTarget  *HyperflexClusterRelationship         `json:"BackupTarget,omitempty"`
		Organization  *OrganizationOrganizationRelationship `json:"Organization,omitempty"`
		SourceCluster *HyperflexClusterRelationship         `json:"SourceCluster,omitempty"`
	}

	varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct := HyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct{}

	err = json.Unmarshal(bytes, &varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct)
	if err == nil {
		varHyperflexClusterBackupPolicyDeployment := _HyperflexClusterBackupPolicyDeployment{}
		varHyperflexClusterBackupPolicyDeployment.ClassId = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.ClassId
		varHyperflexClusterBackupPolicyDeployment.ObjectType = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.ObjectType
		varHyperflexClusterBackupPolicyDeployment.BackupDataStoreName = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.BackupDataStoreName
		varHyperflexClusterBackupPolicyDeployment.BackupDataStoreSize = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.BackupDataStoreSize
		varHyperflexClusterBackupPolicyDeployment.BackupDataStoreSizeUnit = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.BackupDataStoreSizeUnit
		varHyperflexClusterBackupPolicyDeployment.Description = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.Description
		varHyperflexClusterBackupPolicyDeployment.Discovered = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.Discovered
		varHyperflexClusterBackupPolicyDeployment.Name = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.Name
		varHyperflexClusterBackupPolicyDeployment.PolicyMoid = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.PolicyMoid
		varHyperflexClusterBackupPolicyDeployment.ProfileMoid = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.ProfileMoid
		varHyperflexClusterBackupPolicyDeployment.ReplicationPairNamePrefix = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.ReplicationPairNamePrefix
		varHyperflexClusterBackupPolicyDeployment.ReplicationSchedule = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.ReplicationSchedule
		varHyperflexClusterBackupPolicyDeployment.SnapshotRetentionCount = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.SnapshotRetentionCount
		varHyperflexClusterBackupPolicyDeployment.SourceDetached = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.SourceDetached
		varHyperflexClusterBackupPolicyDeployment.SourceRequestId = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.SourceRequestId
		varHyperflexClusterBackupPolicyDeployment.SourceUuid = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.SourceUuid
		varHyperflexClusterBackupPolicyDeployment.TargetDetached = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.TargetDetached
		varHyperflexClusterBackupPolicyDeployment.TargetRequestId = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.TargetRequestId
		varHyperflexClusterBackupPolicyDeployment.TargetUuid = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.TargetUuid
		varHyperflexClusterBackupPolicyDeployment.BackupTarget = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.BackupTarget
		varHyperflexClusterBackupPolicyDeployment.Organization = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.Organization
		varHyperflexClusterBackupPolicyDeployment.SourceCluster = varHyperflexClusterBackupPolicyDeploymentWithoutEmbeddedStruct.SourceCluster
		*o = HyperflexClusterBackupPolicyDeployment(varHyperflexClusterBackupPolicyDeployment)
	} else {
		return err
	}

	varHyperflexClusterBackupPolicyDeployment := _HyperflexClusterBackupPolicyDeployment{}

	err = json.Unmarshal(bytes, &varHyperflexClusterBackupPolicyDeployment)
	if err == nil {
		o.MoBaseMo = varHyperflexClusterBackupPolicyDeployment.MoBaseMo
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "BackupDataStoreName")
		delete(additionalProperties, "BackupDataStoreSize")
		delete(additionalProperties, "BackupDataStoreSizeUnit")
		delete(additionalProperties, "Description")
		delete(additionalProperties, "Discovered")
		delete(additionalProperties, "Name")
		delete(additionalProperties, "PolicyMoid")
		delete(additionalProperties, "ProfileMoid")
		delete(additionalProperties, "ReplicationPairNamePrefix")
		delete(additionalProperties, "ReplicationSchedule")
		delete(additionalProperties, "SnapshotRetentionCount")
		delete(additionalProperties, "SourceDetached")
		delete(additionalProperties, "SourceRequestId")
		delete(additionalProperties, "SourceUuid")
		delete(additionalProperties, "TargetDetached")
		delete(additionalProperties, "TargetRequestId")
		delete(additionalProperties, "TargetUuid")
		delete(additionalProperties, "BackupTarget")
		delete(additionalProperties, "Organization")
		delete(additionalProperties, "SourceCluster")

		// remove fields from embedded structs
		reflectMoBaseMo := reflect.ValueOf(o.MoBaseMo)
		for i := 0; i < reflectMoBaseMo.Type().NumField(); i++ {
			t := reflectMoBaseMo.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHyperflexClusterBackupPolicyDeployment struct {
	value *HyperflexClusterBackupPolicyDeployment
	isSet bool
}

func (v NullableHyperflexClusterBackupPolicyDeployment) Get() *HyperflexClusterBackupPolicyDeployment {
	return v.value
}

func (v *NullableHyperflexClusterBackupPolicyDeployment) Set(val *HyperflexClusterBackupPolicyDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableHyperflexClusterBackupPolicyDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableHyperflexClusterBackupPolicyDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHyperflexClusterBackupPolicyDeployment(val *HyperflexClusterBackupPolicyDeployment) *NullableHyperflexClusterBackupPolicyDeployment {
	return &NullableHyperflexClusterBackupPolicyDeployment{value: val, isSet: true}
}

func (v NullableHyperflexClusterBackupPolicyDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHyperflexClusterBackupPolicyDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
