/*
Cisco Intersight

Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document.

API version: 1.0.11-2024100405
Contact: intersight@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
	"fmt"
	"reflect"
	"strings"
)

// checks if the OpenapiProcessFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiProcessFile{}

// OpenapiProcessFile Validates the OpenAPI specification file. On successful validation, it persists information about the available APIs. This information can be used to create tasks in the cloud orchestrator.
type OpenapiProcessFile struct {
	MoBaseMo
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// An error message for when download, validation or processing of OpenAPI Specification fails.
	FailureReason *string `json:"FailureReason,omitempty"`
	// Status of the internal OpenAPI specification fetch operation * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
	FileDownloadStatus *string `json:"FileDownloadStatus,omitempty"`
	// Status of the OpenAPI specification processing operation. The OpenAPI specification file is processed to create APIMethod objects. * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
	FileProcessingStatus *string `json:"FileProcessingStatus,omitempty"`
	// Status of the OpenAPI specification validation operation. * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
	FileValidationStatus *string `json:"FileValidationStatus,omitempty"`
	// The location of the previously uploaded OpenAPI specification file.
	SpecFilePath         *string                                         `json:"SpecFilePath,omitempty"`
	FileInfo             NullableOpenapiOpenApiSpecificationRelationship `json:"FileInfo,omitempty"`
	Organization         NullableOrganizationOrganizationRelationship    `json:"Organization,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OpenapiProcessFile OpenapiProcessFile

// NewOpenapiProcessFile instantiates a new OpenapiProcessFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiProcessFile(classId string, objectType string) *OpenapiProcessFile {
	this := OpenapiProcessFile{}
	this.ClassId = classId
	this.ObjectType = objectType
	return &this
}

// NewOpenapiProcessFileWithDefaults instantiates a new OpenapiProcessFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiProcessFileWithDefaults() *OpenapiProcessFile {
	this := OpenapiProcessFile{}
	var classId string = "openapi.ProcessFile"
	this.ClassId = classId
	var objectType string = "openapi.ProcessFile"
	this.ObjectType = objectType
	return &this
}

// GetClassId returns the ClassId field value
func (o *OpenapiProcessFile) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *OpenapiProcessFile) SetClassId(v string) {
	o.ClassId = v
}

// GetDefaultClassId returns the default value "openapi.ProcessFile" of the ClassId field.
func (o *OpenapiProcessFile) GetDefaultClassId() interface{} {
	return "openapi.ProcessFile"
}

// GetObjectType returns the ObjectType field value
func (o *OpenapiProcessFile) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *OpenapiProcessFile) SetObjectType(v string) {
	o.ObjectType = v
}

// GetDefaultObjectType returns the default value "openapi.ProcessFile" of the ObjectType field.
func (o *OpenapiProcessFile) GetDefaultObjectType() interface{} {
	return "openapi.ProcessFile"
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *OpenapiProcessFile) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *OpenapiProcessFile) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetFileDownloadStatus returns the FileDownloadStatus field value if set, zero value otherwise.
func (o *OpenapiProcessFile) GetFileDownloadStatus() string {
	if o == nil || IsNil(o.FileDownloadStatus) {
		var ret string
		return ret
	}
	return *o.FileDownloadStatus
}

// GetFileDownloadStatusOk returns a tuple with the FileDownloadStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetFileDownloadStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FileDownloadStatus) {
		return nil, false
	}
	return o.FileDownloadStatus, true
}

// HasFileDownloadStatus returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasFileDownloadStatus() bool {
	if o != nil && !IsNil(o.FileDownloadStatus) {
		return true
	}

	return false
}

// SetFileDownloadStatus gets a reference to the given string and assigns it to the FileDownloadStatus field.
func (o *OpenapiProcessFile) SetFileDownloadStatus(v string) {
	o.FileDownloadStatus = &v
}

// GetFileProcessingStatus returns the FileProcessingStatus field value if set, zero value otherwise.
func (o *OpenapiProcessFile) GetFileProcessingStatus() string {
	if o == nil || IsNil(o.FileProcessingStatus) {
		var ret string
		return ret
	}
	return *o.FileProcessingStatus
}

// GetFileProcessingStatusOk returns a tuple with the FileProcessingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetFileProcessingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FileProcessingStatus) {
		return nil, false
	}
	return o.FileProcessingStatus, true
}

// HasFileProcessingStatus returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasFileProcessingStatus() bool {
	if o != nil && !IsNil(o.FileProcessingStatus) {
		return true
	}

	return false
}

// SetFileProcessingStatus gets a reference to the given string and assigns it to the FileProcessingStatus field.
func (o *OpenapiProcessFile) SetFileProcessingStatus(v string) {
	o.FileProcessingStatus = &v
}

// GetFileValidationStatus returns the FileValidationStatus field value if set, zero value otherwise.
func (o *OpenapiProcessFile) GetFileValidationStatus() string {
	if o == nil || IsNil(o.FileValidationStatus) {
		var ret string
		return ret
	}
	return *o.FileValidationStatus
}

// GetFileValidationStatusOk returns a tuple with the FileValidationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetFileValidationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FileValidationStatus) {
		return nil, false
	}
	return o.FileValidationStatus, true
}

// HasFileValidationStatus returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasFileValidationStatus() bool {
	if o != nil && !IsNil(o.FileValidationStatus) {
		return true
	}

	return false
}

// SetFileValidationStatus gets a reference to the given string and assigns it to the FileValidationStatus field.
func (o *OpenapiProcessFile) SetFileValidationStatus(v string) {
	o.FileValidationStatus = &v
}

// GetSpecFilePath returns the SpecFilePath field value if set, zero value otherwise.
func (o *OpenapiProcessFile) GetSpecFilePath() string {
	if o == nil || IsNil(o.SpecFilePath) {
		var ret string
		return ret
	}
	return *o.SpecFilePath
}

// GetSpecFilePathOk returns a tuple with the SpecFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiProcessFile) GetSpecFilePathOk() (*string, bool) {
	if o == nil || IsNil(o.SpecFilePath) {
		return nil, false
	}
	return o.SpecFilePath, true
}

// HasSpecFilePath returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasSpecFilePath() bool {
	if o != nil && !IsNil(o.SpecFilePath) {
		return true
	}

	return false
}

// SetSpecFilePath gets a reference to the given string and assigns it to the SpecFilePath field.
func (o *OpenapiProcessFile) SetSpecFilePath(v string) {
	o.SpecFilePath = &v
}

// GetFileInfo returns the FileInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiProcessFile) GetFileInfo() OpenapiOpenApiSpecificationRelationship {
	if o == nil || IsNil(o.FileInfo.Get()) {
		var ret OpenapiOpenApiSpecificationRelationship
		return ret
	}
	return *o.FileInfo.Get()
}

// GetFileInfoOk returns a tuple with the FileInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiProcessFile) GetFileInfoOk() (*OpenapiOpenApiSpecificationRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileInfo.Get(), o.FileInfo.IsSet()
}

// HasFileInfo returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasFileInfo() bool {
	if o != nil && o.FileInfo.IsSet() {
		return true
	}

	return false
}

// SetFileInfo gets a reference to the given NullableOpenapiOpenApiSpecificationRelationship and assigns it to the FileInfo field.
func (o *OpenapiProcessFile) SetFileInfo(v OpenapiOpenApiSpecificationRelationship) {
	o.FileInfo.Set(&v)
}

// SetFileInfoNil sets the value for FileInfo to be an explicit nil
func (o *OpenapiProcessFile) SetFileInfoNil() {
	o.FileInfo.Set(nil)
}

// UnsetFileInfo ensures that no value is present for FileInfo, not even an explicit nil
func (o *OpenapiProcessFile) UnsetFileInfo() {
	o.FileInfo.Unset()
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiProcessFile) GetOrganization() OrganizationOrganizationRelationship {
	if o == nil || IsNil(o.Organization.Get()) {
		var ret OrganizationOrganizationRelationship
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiProcessFile) GetOrganizationOk() (*OrganizationOrganizationRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *OpenapiProcessFile) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableOrganizationOrganizationRelationship and assigns it to the Organization field.
func (o *OpenapiProcessFile) SetOrganization(v OrganizationOrganizationRelationship) {
	o.Organization.Set(&v)
}

// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *OpenapiProcessFile) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *OpenapiProcessFile) UnsetOrganization() {
	o.Organization.Unset()
}

func (o OpenapiProcessFile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiProcessFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseMo, errMoBaseMo := json.Marshal(o.MoBaseMo)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	errMoBaseMo = json.Unmarshal([]byte(serializedMoBaseMo), &toSerialize)
	if errMoBaseMo != nil {
		return map[string]interface{}{}, errMoBaseMo
	}
	if _, exists := toSerialize["ClassId"]; !exists {
		toSerialize["ClassId"] = o.GetDefaultClassId()
	}
	toSerialize["ClassId"] = o.ClassId
	if _, exists := toSerialize["ObjectType"]; !exists {
		toSerialize["ObjectType"] = o.GetDefaultObjectType()
	}
	toSerialize["ObjectType"] = o.ObjectType
	if !IsNil(o.FailureReason) {
		toSerialize["FailureReason"] = o.FailureReason
	}
	if !IsNil(o.FileDownloadStatus) {
		toSerialize["FileDownloadStatus"] = o.FileDownloadStatus
	}
	if !IsNil(o.FileProcessingStatus) {
		toSerialize["FileProcessingStatus"] = o.FileProcessingStatus
	}
	if !IsNil(o.FileValidationStatus) {
		toSerialize["FileValidationStatus"] = o.FileValidationStatus
	}
	if !IsNil(o.SpecFilePath) {
		toSerialize["SpecFilePath"] = o.SpecFilePath
	}
	if o.FileInfo.IsSet() {
		toSerialize["FileInfo"] = o.FileInfo.Get()
	}
	if o.Organization.IsSet() {
		toSerialize["Organization"] = o.Organization.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OpenapiProcessFile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ClassId",
		"ObjectType",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{
		"ClassId":    o.GetDefaultClassId,
		"ObjectType": o.GetDefaultObjectType,
	}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	type OpenapiProcessFileWithoutEmbeddedStruct struct {
		// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
		ClassId string `json:"ClassId"`
		// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
		ObjectType string `json:"ObjectType"`
		// An error message for when download, validation or processing of OpenAPI Specification fails.
		FailureReason *string `json:"FailureReason,omitempty"`
		// Status of the internal OpenAPI specification fetch operation * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
		FileDownloadStatus *string `json:"FileDownloadStatus,omitempty"`
		// Status of the OpenAPI specification processing operation. The OpenAPI specification file is processed to create APIMethod objects. * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
		FileProcessingStatus *string `json:"FileProcessingStatus,omitempty"`
		// Status of the OpenAPI specification validation operation. * `none` - Indicates the default status * `InProgress` - Indicates that operation is in progress * `Completed` - Indicates that the operation is complete * `Failed` - Indicates that the operation has failed. Check the failureReason attribute for more details.
		FileValidationStatus *string `json:"FileValidationStatus,omitempty"`
		// The location of the previously uploaded OpenAPI specification file.
		SpecFilePath *string                                         `json:"SpecFilePath,omitempty"`
		FileInfo     NullableOpenapiOpenApiSpecificationRelationship `json:"FileInfo,omitempty"`
		Organization NullableOrganizationOrganizationRelationship    `json:"Organization,omitempty"`
	}

	varOpenapiProcessFileWithoutEmbeddedStruct := OpenapiProcessFileWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varOpenapiProcessFileWithoutEmbeddedStruct)
	if err == nil {
		varOpenapiProcessFile := _OpenapiProcessFile{}
		varOpenapiProcessFile.ClassId = varOpenapiProcessFileWithoutEmbeddedStruct.ClassId
		varOpenapiProcessFile.ObjectType = varOpenapiProcessFileWithoutEmbeddedStruct.ObjectType
		varOpenapiProcessFile.FailureReason = varOpenapiProcessFileWithoutEmbeddedStruct.FailureReason
		varOpenapiProcessFile.FileDownloadStatus = varOpenapiProcessFileWithoutEmbeddedStruct.FileDownloadStatus
		varOpenapiProcessFile.FileProcessingStatus = varOpenapiProcessFileWithoutEmbeddedStruct.FileProcessingStatus
		varOpenapiProcessFile.FileValidationStatus = varOpenapiProcessFileWithoutEmbeddedStruct.FileValidationStatus
		varOpenapiProcessFile.SpecFilePath = varOpenapiProcessFileWithoutEmbeddedStruct.SpecFilePath
		varOpenapiProcessFile.FileInfo = varOpenapiProcessFileWithoutEmbeddedStruct.FileInfo
		varOpenapiProcessFile.Organization = varOpenapiProcessFileWithoutEmbeddedStruct.Organization
		*o = OpenapiProcessFile(varOpenapiProcessFile)
	} else {
		return err
	}

	varOpenapiProcessFile := _OpenapiProcessFile{}

	err = json.Unmarshal(data, &varOpenapiProcessFile)
	if err == nil {
		o.MoBaseMo = varOpenapiProcessFile.MoBaseMo
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "FailureReason")
		delete(additionalProperties, "FileDownloadStatus")
		delete(additionalProperties, "FileProcessingStatus")
		delete(additionalProperties, "FileValidationStatus")
		delete(additionalProperties, "SpecFilePath")
		delete(additionalProperties, "FileInfo")
		delete(additionalProperties, "Organization")

		// remove fields from embedded structs
		reflectMoBaseMo := reflect.ValueOf(o.MoBaseMo)
		for i := 0; i < reflectMoBaseMo.Type().NumField(); i++ {
			t := reflectMoBaseMo.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOpenapiProcessFile struct {
	value *OpenapiProcessFile
	isSet bool
}

func (v NullableOpenapiProcessFile) Get() *OpenapiProcessFile {
	return v.value
}

func (v *NullableOpenapiProcessFile) Set(val *OpenapiProcessFile) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiProcessFile) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiProcessFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiProcessFile(val *OpenapiProcessFile) *NullableOpenapiProcessFile {
	return &NullableOpenapiProcessFile{value: val, isSet: true}
}

func (v NullableOpenapiProcessFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiProcessFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
