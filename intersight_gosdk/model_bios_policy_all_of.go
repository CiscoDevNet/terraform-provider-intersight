/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2021-07-21T16:37:30Z.
 *
 * API version: 1.0.9-4403
 * Contact: intersight@cisco.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intersight

import (
	"encoding/json"
)

// BiosPolicyAllOf Definition of the list of properties defined in 'bios.Policy', excluding properties defined in parent classes.
type BiosPolicyAllOf struct {
	// The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the type of the payload when marshaling and unmarshaling data.
	ClassId string `json:"ClassId"`
	// The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
	ObjectType string `json:"ObjectType"`
	// BIOS Token for setting ACS Control GPU 1 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu1state *string `json:"AcsControlGpu1state,omitempty"`
	// BIOS Token for setting ACS Control GPU 2 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu2state *string `json:"AcsControlGpu2state,omitempty"`
	// BIOS Token for setting ACS Control GPU 3 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu3state *string `json:"AcsControlGpu3state,omitempty"`
	// BIOS Token for setting ACS Control GPU 4 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu4state *string `json:"AcsControlGpu4state,omitempty"`
	// BIOS Token for setting ACS Control GPU 5 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu5state *string `json:"AcsControlGpu5state,omitempty"`
	// BIOS Token for setting ACS Control GPU 6 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu6state *string `json:"AcsControlGpu6state,omitempty"`
	// BIOS Token for setting ACS Control GPU 7 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu7state *string `json:"AcsControlGpu7state,omitempty"`
	// BIOS Token for setting ACS Control GPU 8 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlGpu8state *string `json:"AcsControlGpu8state,omitempty"`
	// BIOS Token for setting ACS Control Slot 11 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlSlot11state *string `json:"AcsControlSlot11state,omitempty"`
	// BIOS Token for setting ACS Control Slot 12 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlSlot12state *string `json:"AcsControlSlot12state,omitempty"`
	// BIOS Token for setting ACS Control Slot 13 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlSlot13state *string `json:"AcsControlSlot13state,omitempty"`
	// BIOS Token for setting ACS Control Slot 14 configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AcsControlSlot14state *string `json:"AcsControlSlot14state,omitempty"`
	// BIOS Token for setting Adjacent Cache Line Prefetcher configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AdjacentCacheLinePrefetch *string `json:"AdjacentCacheLinePrefetch,omitempty"`
	// BIOS Token for setting Enhanced Memory Test configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring AdvancedMemTest token. * `disabled` - Value - disabled for configuring AdvancedMemTest token. * `enabled` - Value - enabled for configuring AdvancedMemTest token.
	AdvancedMemTest *string `json:"AdvancedMemTest,omitempty"`
	// BIOS Token for setting All USB Devices configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AllUsbDevices *string `json:"AllUsbDevices,omitempty"`
	// BIOS Token for setting Altitude configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `300-m` - Value - 300-m for configuring Altitude token. * `900-m` - Value - 900-m for configuring Altitude token. * `1500-m` - Value - 1500-m for configuring Altitude token. * `3000-m` - Value - 3000-m for configuring Altitude token. * `auto` - Value - auto for configuring Altitude token.
	Altitude *string `json:"Altitude,omitempty"`
	// BIOS Token for setting ASPM Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring AspmSupport token. * `Disabled` - Value - Disabled for configuring AspmSupport token. * `Force L0s` - Value - Force L0s for configuring AspmSupport token. * `L1 Only` - Value - L1 Only for configuring AspmSupport token.
	AspmSupport *string `json:"AspmSupport,omitempty"`
	// BIOS Token for setting Assert NMI on PERR configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AssertNmiOnPerr *string `json:"AssertNmiOnPerr,omitempty"`
	// BIOS Token for setting Assert NMI on SERR configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AssertNmiOnSerr *string `json:"AssertNmiOnSerr,omitempty"`
	// BIOS Token for setting Autonomous Core C State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AutoCcState *string `json:"AutoCcState,omitempty"`
	// BIOS Token for setting CPU Autonomous C State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	AutonumousCstateEnable *string `json:"AutonumousCstateEnable,omitempty"`
	// BIOS Token for setting Baud Rate configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `9600` - Value - 9600 for configuring BaudRate token. * `19200` - Value - 19200 for configuring BaudRate token. * `38400` - Value - 38400 for configuring BaudRate token. * `57600` - Value - 57600 for configuring BaudRate token. * `115200` - Value - 115200 for configuring BaudRate token.
	BaudRate *string `json:"BaudRate,omitempty"`
	// BIOS Token for setting BME DMA Mitigation configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	BmeDmaMitigation *string `json:"BmeDmaMitigation,omitempty"`
	// BIOS Token for setting Number of Retries configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `5` - Value - 5 for configuring BootOptionNumRetry token. * `13` - Value - 13 for configuring BootOptionNumRetry token. * `Infinite` - Value - Infinite for configuring BootOptionNumRetry token.
	BootOptionNumRetry *string `json:"BootOptionNumRetry,omitempty"`
	// BIOS Token for setting Cool Down Time  (sec) configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `15` - Value - 15 for configuring BootOptionReCoolDown token. * `45` - Value - 45 for configuring BootOptionReCoolDown token. * `90` - Value - 90 for configuring BootOptionReCoolDown token.
	BootOptionReCoolDown *string `json:"BootOptionReCoolDown,omitempty"`
	// BIOS Token for setting Boot Option Retry configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	BootOptionRetry *string `json:"BootOptionRetry,omitempty"`
	// BIOS Token for setting Boot Performance Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Max Efficient` - Value - Max Efficient for configuring BootPerformanceMode token. * `Max Performance` - Value - Max Performance for configuring BootPerformanceMode token. * `Set by Intel NM` - Value - Set by Intel NM for configuring BootPerformanceMode token.
	BootPerformanceMode *string `json:"BootPerformanceMode,omitempty"`
	// BIOS Token for setting Burst and Postponed Refresh configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	BurstAndPostponedRefresh *string `json:"BurstAndPostponedRefresh,omitempty"`
	// BIOS Token for setting APBDIS configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `0` - Value - 0 for configuring CbsCmnApbdis token. * `1` - Value - 1 for configuring CbsCmnApbdis token. * `Auto` - Value - Auto for configuring CbsCmnApbdis token.
	CbsCmnApbdis *string `json:"CbsCmnApbdis,omitempty"`
	// BIOS Token for setting Core Performance Boost configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuCpb token. * `disabled` - Value - disabled for configuring CbsCmnCpuCpb token.
	CbsCmnCpuCpb *string `json:"CbsCmnCpuCpb,omitempty"`
	// BIOS Token for setting Downcore Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuGenDowncoreCtrl token. * `FOUR (2 + 2)` - Value - FOUR (2 + 2) for configuring CbsCmnCpuGenDowncoreCtrl token. * `FOUR (4 + 0)` - Value - FOUR (4 + 0) for configuring CbsCmnCpuGenDowncoreCtrl token. * `SIX (3 + 3)` - Value - SIX (3 + 3) for configuring CbsCmnCpuGenDowncoreCtrl token. * `THREE (3 + 0)` - Value - THREE (3 + 0) for configuring CbsCmnCpuGenDowncoreCtrl token. * `TWO (1 + 1)` - Value - TWO (1 + 1) for configuring CbsCmnCpuGenDowncoreCtrl token. * `TWO (2 + 0)` - Value - TWO (2 + 0) for configuring CbsCmnCpuGenDowncoreCtrl token.
	CbsCmnCpuGenDowncoreCtrl *string `json:"CbsCmnCpuGenDowncoreCtrl,omitempty"`
	// BIOS Token for setting Global C State Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuGlobalCstateCtrl token. * `disabled` - Value - disabled for configuring CbsCmnCpuGlobalCstateCtrl token. * `enabled` - Value - enabled for configuring CbsCmnCpuGlobalCstateCtrl token.
	CbsCmnCpuGlobalCstateCtrl *string `json:"CbsCmnCpuGlobalCstateCtrl,omitempty"`
	// BIOS Token for setting L1 Stream HW Prefetcher configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuL1streamHwPrefetcher token. * `disabled` - Value - disabled for configuring CbsCmnCpuL1streamHwPrefetcher token. * `enabled` - Value - enabled for configuring CbsCmnCpuL1streamHwPrefetcher token.
	CbsCmnCpuL1streamHwPrefetcher *string `json:"CbsCmnCpuL1streamHwPrefetcher,omitempty"`
	// BIOS Token for setting L2 Stream HW Prefetcher configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuL2streamHwPrefetcher token. * `disabled` - Value - disabled for configuring CbsCmnCpuL2streamHwPrefetcher token. * `enabled` - Value - enabled for configuring CbsCmnCpuL2streamHwPrefetcher token.
	CbsCmnCpuL2streamHwPrefetcher *string `json:"CbsCmnCpuL2streamHwPrefetcher,omitempty"`
	// BIOS Token for setting CPU SMEE configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuSmee token. * `disabled` - Value - disabled for configuring CbsCmnCpuSmee token. * `enabled` - Value - enabled for configuring CbsCmnCpuSmee token.
	CbsCmnCpuSmee *string `json:"CbsCmnCpuSmee,omitempty"`
	// BIOS Token for setting Streaming Stores Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnCpuStreamingStoresCtrl token. * `disabled` - Value - disabled for configuring CbsCmnCpuStreamingStoresCtrl token. * `enabled` - Value - enabled for configuring CbsCmnCpuStreamingStoresCtrl token.
	CbsCmnCpuStreamingStoresCtrl *string `json:"CbsCmnCpuStreamingStoresCtrl,omitempty"`
	// BIOS Token for setting Determinism Slider configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnDeterminismSlider token. * `Performance` - Value - Performance for configuring CbsCmnDeterminismSlider token. * `Power` - Value - Power for configuring CbsCmnDeterminismSlider token.
	CbsCmnDeterminismSlider *string `json:"CbsCmnDeterminismSlider,omitempty"`
	// BIOS Token for setting Efficiency Mode Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnEfficiencyModeEn token. * `Enabled` - Value - Enabled for configuring CbsCmnEfficiencyModeEn token.
	CbsCmnEfficiencyModeEn *string `json:"CbsCmnEfficiencyModeEn,omitempty"`
	// BIOS Token for setting Fixed SOC P-State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnFixedSocPstate token. * `P0` - Value - P0 for configuring CbsCmnFixedSocPstate token. * `P1` - Value - P1 for configuring CbsCmnFixedSocPstate token. * `P2` - Value - P2 for configuring CbsCmnFixedSocPstate token. * `P3` - Value - P3 for configuring CbsCmnFixedSocPstate token.
	CbsCmnFixedSocPstate *string `json:"CbsCmnFixedSocPstate,omitempty"`
	// BIOS Token for setting IOMMU configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnGnbNbIommu token. * `disabled` - Value - disabled for configuring CbsCmnGnbNbIommu token. * `enabled` - Value - enabled for configuring CbsCmnGnbNbIommu token.
	CbsCmnGnbNbIommu *string `json:"CbsCmnGnbNbIommu,omitempty"`
	// BIOS Token for setting DF C-States configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnGnbSmuDfCstates token. * `disabled` - Value - disabled for configuring CbsCmnGnbSmuDfCstates token. * `enabled` - Value - enabled for configuring CbsCmnGnbSmuDfCstates token.
	CbsCmnGnbSmuDfCstates *string `json:"CbsCmnGnbSmuDfCstates,omitempty"`
	// BIOS Token for setting CPPC configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnGnbSmucppc token. * `disabled` - Value - disabled for configuring CbsCmnGnbSmucppc token. * `enabled` - Value - enabled for configuring CbsCmnGnbSmucppc token.
	CbsCmnGnbSmucppc *string `json:"CbsCmnGnbSmucppc,omitempty"`
	// BIOS Token for setting Bank Group Swap configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnMemCtrlBankGroupSwapDdr4 token. * `disabled` - Value - disabled for configuring CbsCmnMemCtrlBankGroupSwapDdr4 token. * `enabled` - Value - enabled for configuring CbsCmnMemCtrlBankGroupSwapDdr4 token.
	CbsCmnMemCtrlBankGroupSwapDdr4 *string `json:"CbsCmnMemCtrlBankGroupSwapDdr4,omitempty"`
	// BIOS Token for setting Chipset Interleave configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmnMemMapBankInterleaveDdr4 token. * `disabled` - Value - disabled for configuring CbsCmnMemMapBankInterleaveDdr4 token.
	CbsCmnMemMapBankInterleaveDdr4 *string `json:"CbsCmnMemMapBankInterleaveDdr4,omitempty"`
	// BIOS Token for setting cTDP Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCmncTdpCtl token. * `Manual` - Value - Manual for configuring CbsCmncTdpCtl token.
	CbsCmncTdpCtl *string `json:"CbsCmncTdpCtl,omitempty"`
	// BIOS Token for setting CCD Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `2 CCDs` - Value - 2 CCDs for configuring CbsCpuCcdCtrlSsp token. * `3 CCDs` - Value - 3 CCDs for configuring CbsCpuCcdCtrlSsp token. * `4 CCDs` - Value - 4 CCDs for configuring CbsCpuCcdCtrlSsp token. * `6 CCDs` - Value - 6 CCDs for configuring CbsCpuCcdCtrlSsp token. * `Auto` - Value - Auto for configuring CbsCpuCcdCtrlSsp token.
	CbsCpuCcdCtrlSsp *string `json:"CbsCpuCcdCtrlSsp,omitempty"`
	// BIOS Token for setting CPU Downcore control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCpuCoreCtrl token. * `FIVE (5 + 0)` - Value - FIVE (5 + 0) for configuring CbsCpuCoreCtrl token. * `FOUR (4 + 0)` - Value - FOUR (4 + 0) for configuring CbsCpuCoreCtrl token. * `ONE (1 + 0)` - Value - ONE (1 + 0) for configuring CbsCpuCoreCtrl token. * `SEVEN (7 + 0)` - Value - SEVEN (7 + 0) for configuring CbsCpuCoreCtrl token. * `SIX (6 + 0)` - Value - SIX (6 + 0) for configuring CbsCpuCoreCtrl token. * `THREE (3 + 0)` - Value - THREE (3 + 0) for configuring CbsCpuCoreCtrl token. * `TWO (2 + 0)` - Value - TWO (2 + 0) for configuring CbsCpuCoreCtrl token.
	CbsCpuCoreCtrl *string `json:"CbsCpuCoreCtrl,omitempty"`
	// BIOS Token for setting CPU SMT Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsCpuSmtCtrl token. * `disabled` - Value - disabled for configuring CbsCpuSmtCtrl token. * `enabled` - Value - enabled for configuring CbsCpuSmtCtrl token.
	CbsCpuSmtCtrl *string `json:"CbsCpuSmtCtrl,omitempty"`
	// BIOS Token for setting SNP Memory Coverage configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsDbgCpuSnpMemCover token. * `Custom` - Value - Custom for configuring CbsDbgCpuSnpMemCover token. * `disabled` - Value - disabled for configuring CbsDbgCpuSnpMemCover token. * `enabled` - Value - enabled for configuring CbsDbgCpuSnpMemCover token.
	CbsDbgCpuSnpMemCover *string `json:"CbsDbgCpuSnpMemCover,omitempty"`
	// BIOS Token for setting SNP Memory Size to Cover in MiB configuration (0 - 1048576 MiB).
	CbsDbgCpuSnpMemSizeCover *string `json:"CbsDbgCpuSnpMemSizeCover,omitempty"`
	// BIOS Token for setting ACPI SRAT L3 Cache As NUMA Domain configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsDfCmnAcpiSratL3numa token. * `disabled` - Value - disabled for configuring CbsDfCmnAcpiSratL3numa token. * `enabled` - Value - enabled for configuring CbsDfCmnAcpiSratL3numa token.
	CbsDfCmnAcpiSratL3numa *string `json:"CbsDfCmnAcpiSratL3numa,omitempty"`
	// BIOS Token for setting NUMA Nodes per Socket configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsDfCmnDramNps token. * `NPS0` - Value - NPS0 for configuring CbsDfCmnDramNps token. * `NPS1` - Value - NPS1 for configuring CbsDfCmnDramNps token. * `NPS2` - Value - NPS2 for configuring CbsDfCmnDramNps token. * `NPS4` - Value - NPS4 for configuring CbsDfCmnDramNps token.
	CbsDfCmnDramNps *string `json:"CbsDfCmnDramNps,omitempty"`
	// BIOS Token for setting AMD Memory Interleaving configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CbsDfCmnMemIntlv token. * `Channel` - Value - Channel for configuring CbsDfCmnMemIntlv token. * `Die` - Value - Die for configuring CbsDfCmnMemIntlv token. * `None` - Value - None for configuring CbsDfCmnMemIntlv token. * `Socket` - Value - Socket for configuring CbsDfCmnMemIntlv token.
	CbsDfCmnMemIntlv *string `json:"CbsDfCmnMemIntlv,omitempty"`
	// BIOS Token for setting AMD Memory Interleaving Size configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `256 Bytes` - Value - 256 Bytes for configuring CbsDfCmnMemIntlvSize token. * `512 Bytes` - Value - 512 Bytes for configuring CbsDfCmnMemIntlvSize token. * `1 KB` - Value - 1 KiB for configuring CbsDfCmnMemIntlvSize token. * `2 KB` - Value - 2 KiB for configuring CbsDfCmnMemIntlvSize token. * `4 KB` - Value - 4 KiB for configuring CbsDfCmnMemIntlvSize token. * `Auto` - Value - Auto for configuring CbsDfCmnMemIntlvSize token.
	CbsDfCmnMemIntlvSize *string `json:"CbsDfCmnMemIntlvSize,omitempty"`
	// BIOS Token for setting SEV-SNP Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CbsSevSnpSupport *string `json:"CbsSevSnpSupport,omitempty"`
	// BIOS Token for setting Consistent Device Naming configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CdnEnable *string `json:"CdnEnable,omitempty"`
	// BIOS Token for setting CDN Support for LOM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring CdnSupport token. * `enabled` - Value - enabled for configuring CdnSupport token. * `LOMs Only` - Value - LOMs Only for configuring CdnSupport token.
	CdnSupport *string `json:"CdnSupport,omitempty"`
	// BIOS Token for setting Channel Interleaving configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1-way` - Value - 1-way for configuring ChannelInterLeave token. * `2-way` - Value - 2-way for configuring ChannelInterLeave token. * `3-way` - Value - 3-way for configuring ChannelInterLeave token. * `4-way` - Value - 4-way for configuring ChannelInterLeave token. * `auto` - Value - auto for configuring ChannelInterLeave token.
	ChannelInterLeave *string `json:"ChannelInterLeave,omitempty"`
	// BIOS Token for setting Adaptive Memory Training configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CiscoAdaptiveMemTraining *string `json:"CiscoAdaptiveMemTraining,omitempty"`
	// BIOS Token for setting BIOS Techlog Level configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Maximum` - Value - Maximum for configuring CiscoDebugLevel token. * `Minimum` - Value - Minimum for configuring CiscoDebugLevel token. * `Normal` - Value - Normal for configuring CiscoDebugLevel token.
	CiscoDebugLevel *string `json:"CiscoDebugLevel,omitempty"`
	// BIOS Token for setting OptionROM Launch Optimization configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CiscoOpromLaunchOptimization *string `json:"CiscoOpromLaunchOptimization,omitempty"`
	// BIOS Token for setting Cisco xGMI Max Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CiscoXgmiMaxSpeed *string `json:"CiscoXgmiMaxSpeed,omitempty"`
	// BIOS Token for setting CKE Low Policy configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `auto` - Value - auto for configuring CkeLowPolicy token. * `disabled` - Value - disabled for configuring CkeLowPolicy token. * `fast` - Value - fast for configuring CkeLowPolicy token. * `slow` - Value - slow for configuring CkeLowPolicy token.
	CkeLowPolicy *string `json:"CkeLowPolicy,omitempty"`
	// BIOS Token for setting Closed Loop Thermal Throttling configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ClosedLoopThermThrotl *string `json:"ClosedLoopThermThrotl,omitempty"`
	// BIOS Token for setting Processor CMCI configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CmciEnable *string `json:"CmciEnable,omitempty"`
	// BIOS Token for setting Config TDP configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ConfigTdp *string `json:"ConfigTdp,omitempty"`
	// BIOS Token for setting Configurable TDP Level configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Level 1` - Value - Level 1 for configuring ConfigTdpLevel token. * `Level 2` - Value - Level 2 for configuring ConfigTdpLevel token. * `Normal` - Value - Normal for configuring ConfigTdpLevel token.
	ConfigTdpLevel *string `json:"ConfigTdpLevel,omitempty"`
	// BIOS Token for setting Console Redirection configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `com-0` - Value - com-0 for configuring ConsoleRedirection token. * `com-1` - Value - com-1 for configuring ConsoleRedirection token. * `disabled` - Value - disabled for configuring ConsoleRedirection token. * `enabled` - Value - enabled for configuring ConsoleRedirection token. * `serial-port-a` - Value - serial-port-a for configuring ConsoleRedirection token.
	ConsoleRedirection *string `json:"ConsoleRedirection,omitempty"`
	// BIOS Token for setting Core Multi Processing configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1` - Value - 1 for configuring CoreMultiProcessing token. * `2` - Value - 2 for configuring CoreMultiProcessing token. * `3` - Value - 3 for configuring CoreMultiProcessing token. * `4` - Value - 4 for configuring CoreMultiProcessing token. * `5` - Value - 5 for configuring CoreMultiProcessing token. * `6` - Value - 6 for configuring CoreMultiProcessing token. * `7` - Value - 7 for configuring CoreMultiProcessing token. * `8` - Value - 8 for configuring CoreMultiProcessing token. * `9` - Value - 9 for configuring CoreMultiProcessing token. * `10` - Value - 10 for configuring CoreMultiProcessing token. * `11` - Value - 11 for configuring CoreMultiProcessing token. * `12` - Value - 12 for configuring CoreMultiProcessing token. * `13` - Value - 13 for configuring CoreMultiProcessing token. * `14` - Value - 14 for configuring CoreMultiProcessing token. * `15` - Value - 15 for configuring CoreMultiProcessing token. * `16` - Value - 16 for configuring CoreMultiProcessing token. * `17` - Value - 17 for configuring CoreMultiProcessing token. * `18` - Value - 18 for configuring CoreMultiProcessing token. * `19` - Value - 19 for configuring CoreMultiProcessing token. * `20` - Value - 20 for configuring CoreMultiProcessing token. * `21` - Value - 21 for configuring CoreMultiProcessing token. * `22` - Value - 22 for configuring CoreMultiProcessing token. * `23` - Value - 23 for configuring CoreMultiProcessing token. * `24` - Value - 24 for configuring CoreMultiProcessing token. * `25` - Value - 25 for configuring CoreMultiProcessing token. * `26` - Value - 26 for configuring CoreMultiProcessing token. * `27` - Value - 27 for configuring CoreMultiProcessing token. * `28` - Value - 28 for configuring CoreMultiProcessing token. * `29` - Value - 29 for configuring CoreMultiProcessing token. * `30` - Value - 30 for configuring CoreMultiProcessing token. * `31` - Value - 31 for configuring CoreMultiProcessing token. * `32` - Value - 32 for configuring CoreMultiProcessing token. * `33` - Value - 33 for configuring CoreMultiProcessing token. * `34` - Value - 34 for configuring CoreMultiProcessing token. * `35` - Value - 35 for configuring CoreMultiProcessing token. * `36` - Value - 36 for configuring CoreMultiProcessing token. * `37` - Value - 37 for configuring CoreMultiProcessing token. * `38` - Value - 38 for configuring CoreMultiProcessing token. * `39` - Value - 39 for configuring CoreMultiProcessing token. * `40` - Value - 40 for configuring CoreMultiProcessing token. * `41` - Value - 41 for configuring CoreMultiProcessing token. * `42` - Value - 42 for configuring CoreMultiProcessing token. * `43` - Value - 43 for configuring CoreMultiProcessing token. * `44` - Value - 44 for configuring CoreMultiProcessing token. * `45` - Value - 45 for configuring CoreMultiProcessing token. * `46` - Value - 46 for configuring CoreMultiProcessing token. * `47` - Value - 47 for configuring CoreMultiProcessing token. * `48` - Value - 48 for configuring CoreMultiProcessing token. * `all` - Value - all for configuring CoreMultiProcessing token.
	CoreMultiProcessing *string `json:"CoreMultiProcessing,omitempty"`
	// BIOS Token for setting Energy Performance configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `balanced-energy` - Value - balanced-energy for configuring CpuEnergyPerformance token. * `balanced-performance` - Value - balanced-performance for configuring CpuEnergyPerformance token. * `balanced-power` - Value - balanced-power for configuring CpuEnergyPerformance token. * `energy-efficient` - Value - energy-efficient for configuring CpuEnergyPerformance token. * `performance` - Value - performance for configuring CpuEnergyPerformance token. * `power` - Value - power for configuring CpuEnergyPerformance token.
	CpuEnergyPerformance *string `json:"CpuEnergyPerformance,omitempty"`
	// BIOS Token for setting Frequency Floor Override configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	CpuFrequencyFloor *string `json:"CpuFrequencyFloor,omitempty"`
	// BIOS Token for setting CPU Performance configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `custom` - Value - custom for configuring CpuPerformance token. * `enterprise` - Value - enterprise for configuring CpuPerformance token. * `high-throughput` - Value - high-throughput for configuring CpuPerformance token. * `hpc` - Value - hpc for configuring CpuPerformance token.
	CpuPerformance *string `json:"CpuPerformance,omitempty"`
	// BIOS Token for setting Power Technology configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `custom` - Value - custom for configuring CpuPowerManagement token. * `disabled` - Value - disabled for configuring CpuPowerManagement token. * `energy-efficient` - Value - energy-efficient for configuring CpuPowerManagement token. * `performance` - Value - performance for configuring CpuPowerManagement token.
	CpuPowerManagement *string `json:"CpuPowerManagement,omitempty"`
	// BIOS Token for setting CR QoS configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Disabled` - Value - Disabled for configuring CrQos token. * `Mode 0 - Disable the PMem QoS Feature` - Value - Mode 0 - Disable the PMem QoS Feature for configuring CrQos token. * `Mode 1 - M2M QoS Enable and CHA QoS Disable` - Value - Mode 1 - M2M QoS Enable and CHA QoS Disable for configuring CrQos token. * `Mode 2 - M2M QoS Enable and CHA QoS Enable` - Value - Mode 2 - M2M QoS Enable and CHA QoS Enable for configuring CrQos token. * `Recipe 1` - Value - Recipe 1 for configuring CrQos token. * `Recipe 2` - Value - Recipe 2 for configuring CrQos token. * `Recipe 3` - Value - Recipe 3 for configuring CrQos token.
	CrQos *string `json:"CrQos,omitempty"`
	// BIOS Token for setting CR FastGo Config configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring CrfastgoConfig token. * `Default` - Value - Default for configuring CrfastgoConfig token. * `Disable optimization` - Value - Disable optimization for configuring CrfastgoConfig token. * `Enable optimization` - Value - Enable optimization for configuring CrfastgoConfig token. * `Option 1` - Value - Option 1 for configuring CrfastgoConfig token. * `Option 2` - Value - Option 2 for configuring CrfastgoConfig token. * `Option 3` - Value - Option 3 for configuring CrfastgoConfig token. * `Option 4` - Value - Option 4 for configuring CrfastgoConfig token. * `Option 5` - Value - Option 5 for configuring CrfastgoConfig token.
	CrfastgoConfig *string `json:"CrfastgoConfig,omitempty"`
	// BIOS Token for setting DCPMM Firmware Downgrade configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	DcpmmFirmwareDowngrade *string `json:"DcpmmFirmwareDowngrade,omitempty"`
	// BIOS Token for setting Demand Scrub configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	DemandScrub *string `json:"DemandScrub,omitempty"`
	// BIOS Token for setting Direct Cache Access Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `auto` - Value - auto for configuring DirectCacheAccess token. * `disabled` - Value - disabled for configuring DirectCacheAccess token. * `enabled` - Value - enabled for configuring DirectCacheAccess token.
	DirectCacheAccess *string `json:"DirectCacheAccess,omitempty"`
	// BIOS Token for setting DRAM Clock Throttling configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring DramClockThrottling token. * `Balanced` - Value - Balanced for configuring DramClockThrottling token. * `Energy Efficient` - Value - Energy Efficient for configuring DramClockThrottling token. * `Performance` - Value - Performance for configuring DramClockThrottling token.
	DramClockThrottling *string `json:"DramClockThrottling,omitempty"`
	// BIOS Token for setting DRAM Refresh Rate configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1x` - Value - 1x for configuring DramRefreshRate token. * `2x` - Value - 2x for configuring DramRefreshRate token. * `3x` - Value - 3x for configuring DramRefreshRate token. * `4x` - Value - 4x for configuring DramRefreshRate token. * `Auto` - Value - Auto for configuring DramRefreshRate token.
	DramRefreshRate *string `json:"DramRefreshRate,omitempty"`
	// BIOS Token for setting DRAM SW Thermal Throttling configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	DramSwThermalThrottling *string `json:"DramSwThermalThrottling,omitempty"`
	// BIOS Token for setting eADR Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring EadrSupport token. * `disabled` - Value - disabled for configuring EadrSupport token. * `enabled` - Value - enabled for configuring EadrSupport token.
	EadrSupport *string `json:"EadrSupport,omitempty"`
	// BIOS Token for setting IIO eDPC Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Disabled` - Value - Disabled for configuring EdpcEn token. * `On Fatal Error` - Value - On Fatal Error for configuring EdpcEn token. * `On Fatal and Non-Fatal Errors` - Value - On Fatal and Non-Fatal Errors for configuring EdpcEn token.
	EdpcEn *string `json:"EdpcEn,omitempty"`
	// BIOS Token for setting External SSC Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnableClockSpreadSpec *string `json:"EnableClockSpreadSpec,omitempty"`
	// BIOS Token for setting Multikey Total Memory Encryption  (MK-TME) configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnableMktme *string `json:"EnableMktme,omitempty"`
	// BIOS Token for setting Software Guard Extensions  (SGX) configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnableSgx *string `json:"EnableSgx,omitempty"`
	// BIOS Token for setting Total Memory Encryption  (TME) configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnableTme *string `json:"EnableTme,omitempty"`
	// BIOS Token for setting Energy Efficient Turbo configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnergyEfficientTurbo *string `json:"EnergyEfficientTurbo,omitempty"`
	// BIOS Token for setting Energy Performance Tuning configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `BIOS` - Value - BIOS for configuring EngPerfTuning token. * `OS` - Value - OS for configuring EngPerfTuning token.
	EngPerfTuning *string `json:"EngPerfTuning,omitempty"`
	// BIOS Token for setting Enhanced Intel Speedstep (R) Technology configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EnhancedIntelSpeedStepTech *string `json:"EnhancedIntelSpeedStepTech,omitempty"`
	// BIOS Token for setting Select Owner EPOCH Input Type configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Change to New Random Owner EPOCHs` - Value - Change to New Random Owner EPOCHs for configuring EpochUpdate token. * `Manual User Defined Owner EPOCHs` - Value - Manual User Defined Owner EPOCHs for configuring EpochUpdate token. * `SGX Owner EPOCH activated` - Value - SGX Owner EPOCH activated for configuring EpochUpdate token.
	EpochUpdate *string `json:"EpochUpdate,omitempty"`
	// BIOS Token for setting Processor EPP Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	EppEnable *string `json:"EppEnable,omitempty"`
	// BIOS Token for setting EPP Profile configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Balanced Performance` - Value - Balanced Performance for configuring EppProfile token. * `Balanced Power` - Value - Balanced Power for configuring EppProfile token. * `Performance` - Value - Performance for configuring EppProfile token. * `Power` - Value - Power for configuring EppProfile token.
	EppProfile *string `json:"EppProfile,omitempty"`
	// BIOS Token for setting Execute Disable Bit configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ExecuteDisableBit *string `json:"ExecuteDisableBit,omitempty"`
	// BIOS Token for setting Local X2 Apic configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring ExtendedApic token. * `enabled` - Value - enabled for configuring ExtendedApic token. * `X2APIC` - Value - X2APIC for configuring ExtendedApic token. * `XAPIC` - Value - XAPIC for configuring ExtendedApic token.
	ExtendedApic *string `json:"ExtendedApic,omitempty"`
	// BIOS Token for setting Flow Control configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `none` - Value - none for configuring FlowControl token. * `rts-cts` - Value - rts-cts for configuring FlowControl token.
	FlowControl *string `json:"FlowControl,omitempty"`
	// BIOS Token for setting FRB-2 Timer configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Frb2enable *string `json:"Frb2enable,omitempty"`
	// BIOS Token for setting Hardware Prefetcher configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	HardwarePrefetch *string `json:"HardwarePrefetch,omitempty"`
	// BIOS Token for setting CPU Hardware Power Management configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Disabled` - Value - Disabled for configuring HwpmEnable token. * `HWPM Native Mode` - Value - HWPM Native Mode for configuring HwpmEnable token. * `HWPM OOB Mode` - Value - HWPM OOB Mode for configuring HwpmEnable token. * `NATIVE MODE` - Value - NATIVE MODE for configuring HwpmEnable token. * `Native Mode with no Legacy` - Value - Native Mode with no Legacy for configuring HwpmEnable token. * `OOB MODE` - Value - OOB MODE for configuring HwpmEnable token.
	HwpmEnable *string `json:"HwpmEnable,omitempty"`
	// BIOS Token for setting IMC Interleaving configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1-way Interleave` - Value - 1-way Interleave for configuring ImcInterleave token. * `2-way Interleave` - Value - 2-way Interleave for configuring ImcInterleave token. * `Auto` - Value - Auto for configuring ImcInterleave token.
	ImcInterleave *string `json:"ImcInterleave,omitempty"`
	// BIOS Token for setting Intel Dynamic Speed Select configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelDynamicSpeedSelect *string `json:"IntelDynamicSpeedSelect,omitempty"`
	// BIOS Token for setting Intel HyperThreading Tech configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelHyperThreadingTech *string `json:"IntelHyperThreadingTech,omitempty"`
	// BIOS Token for setting Intel Speed Select configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Base` - Value - Base for configuring IntelSpeedSelect token. * `Config 1` - Value - Config 1 for configuring IntelSpeedSelect token. * `Config 2` - Value - Config 2 for configuring IntelSpeedSelect token. * `Config 3` - Value - Config 3 for configuring IntelSpeedSelect token. * `Config 4` - Value - Config 4 for configuring IntelSpeedSelect token.
	IntelSpeedSelect *string `json:"IntelSpeedSelect,omitempty"`
	// BIOS Token for setting Intel Turbo Boost Tech configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelTurboBoostTech *string `json:"IntelTurboBoostTech,omitempty"`
	// BIOS Token for setting Intel (R) VT configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVirtualizationTechnology *string `json:"IntelVirtualizationTechnology,omitempty"`
	// BIOS Token for setting Intel VT for Directed IO configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVtForDirectedIo *string `json:"IntelVtForDirectedIo,omitempty"`
	// BIOS Token for setting Intel (R) VT-d Coherency Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVtdCoherencySupport *string `json:"IntelVtdCoherencySupport,omitempty"`
	// BIOS Token for setting Intel (R) VT-d Interrupt Remapping configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVtdInterruptRemapping *string `json:"IntelVtdInterruptRemapping,omitempty"`
	// BIOS Token for setting Intel (R) VT-d PassThrough DMA Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVtdPassThroughDmaSupport *string `json:"IntelVtdPassThroughDmaSupport,omitempty"`
	// BIOS Token for setting Intel VTD ATS Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IntelVtdatsSupport *string `json:"IntelVtdatsSupport,omitempty"`
	// BIOS Token for setting IIO Error Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `No` - Value - No for configuring IohErrorEnable token. * `Yes` - Value - Yes for configuring IohErrorEnable token.
	IohErrorEnable *string `json:"IohErrorEnable,omitempty"`
	// BIOS Token for setting IOH Resource Allocation configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `IOH0 24k IOH1 40k` - Value - IOH0 24k IOH1 40k for configuring IohResource token. * `IOH0 32k IOH1 32k` - Value - IOH0 32k IOH1 32k for configuring IohResource token. * `IOH0 40k IOH1 24k` - Value - IOH0 40k IOH1 24k for configuring IohResource token. * `IOH0 48k IOH1 16k` - Value - IOH0 48k IOH1 16k for configuring IohResource token. * `IOH0 56k IOH1 8k` - Value - IOH0 56k IOH1 8k for configuring IohResource token.
	IohResource *string `json:"IohResource,omitempty"`
	// BIOS Token for setting DCU IP Prefetcher configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	IpPrefetch *string `json:"IpPrefetch,omitempty"`
	// BIOS Token for setting IPV4 HTTP Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Ipv4http *string `json:"Ipv4http,omitempty"`
	// BIOS Token for setting IPv4 PXE Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Ipv4pxe *string `json:"Ipv4pxe,omitempty"`
	// BIOS Token for setting IPV6 HTTP Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Ipv6http *string `json:"Ipv6http,omitempty"`
	// BIOS Token for setting IPV6 PXE Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Ipv6pxe *string `json:"Ipv6pxe,omitempty"`
	// BIOS Token for setting KTI Prefetch configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring KtiPrefetch token. * `disabled` - Value - disabled for configuring KtiPrefetch token. * `enabled` - Value - enabled for configuring KtiPrefetch token.
	KtiPrefetch *string `json:"KtiPrefetch,omitempty"`
	// BIOS Token for setting Legacy OS Redirection configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	LegacyOsRedirection *string `json:"LegacyOsRedirection,omitempty"`
	// BIOS Token for setting Legacy USB Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `auto` - Value - auto for configuring LegacyUsbSupport token. * `disabled` - Value - disabled for configuring LegacyUsbSupport token. * `enabled` - Value - enabled for configuring LegacyUsbSupport token.
	LegacyUsbSupport *string `json:"LegacyUsbSupport,omitempty"`
	// BIOS Token for setting LLC Prefetch configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	LlcPrefetch *string `json:"LlcPrefetch,omitempty"`
	// BIOS Token for setting LOM Port 0 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring LomPort0state token. * `enabled` - Value - enabled for configuring LomPort0state token. * `Legacy Only` - Value - Legacy Only for configuring LomPort0state token. * `UEFI Only` - Value - UEFI Only for configuring LomPort0state token.
	LomPort0state *string `json:"LomPort0state,omitempty"`
	// BIOS Token for setting LOM Port 1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring LomPort1state token. * `enabled` - Value - enabled for configuring LomPort1state token. * `Legacy Only` - Value - Legacy Only for configuring LomPort1state token. * `UEFI Only` - Value - UEFI Only for configuring LomPort1state token.
	LomPort1state *string `json:"LomPort1state,omitempty"`
	// BIOS Token for setting LOM Port 2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring LomPort2state token. * `enabled` - Value - enabled for configuring LomPort2state token. * `Legacy Only` - Value - Legacy Only for configuring LomPort2state token. * `UEFI Only` - Value - UEFI Only for configuring LomPort2state token.
	LomPort2state *string `json:"LomPort2state,omitempty"`
	// BIOS Token for setting LOM Port 3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring LomPort3state token. * `enabled` - Value - enabled for configuring LomPort3state token. * `Legacy Only` - Value - Legacy Only for configuring LomPort3state token. * `UEFI Only` - Value - UEFI Only for configuring LomPort3state token.
	LomPort3state *string `json:"LomPort3state,omitempty"`
	// BIOS Token for setting All Onboard LOM Ports configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	LomPortsAllState *string `json:"LomPortsAllState,omitempty"`
	// BIOS Token for setting Low Voltage DDR Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `auto` - Value - auto for configuring LvDdrMode token. * `performance-mode` - Value - performance-mode for configuring LvDdrMode token. * `power-saving-mode` - Value - power-saving-mode for configuring LvDdrMode token.
	LvDdrMode *string `json:"LvDdrMode,omitempty"`
	// BIOS Token for setting Make Device Non Bootable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	MakeDeviceNonBootable *string `json:"MakeDeviceNonBootable,omitempty"`
	// BIOS Token for setting Memory Bandwidth Boost configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	MemoryBandwidthBoost *string `json:"MemoryBandwidthBoost,omitempty"`
	// BIOS Token for setting Intel Memory Interleaving configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1 Way Node Interleave` - Value - 1 Way Node Interleave for configuring MemoryInterLeave token. * `2 Way Node Interleave` - Value - 2 Way Node Interleave for configuring MemoryInterLeave token. * `4 Way Node Interleave` - Value - 4 Way Node Interleave for configuring MemoryInterLeave token. * `8 Way Node Interleave` - Value - 8 Way Node Interleave for configuring MemoryInterLeave token. * `disabled` - Value - disabled for configuring MemoryInterLeave token. * `enabled` - Value - enabled for configuring MemoryInterLeave token.
	MemoryInterLeave *string `json:"MemoryInterLeave,omitempty"`
	// BIOS Token for setting Memory Mapped IO above 4GiB configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	MemoryMappedIoAbove4gb *string `json:"MemoryMappedIoAbove4gb,omitempty"`
	// BIOS Token for setting Memory Refresh Rate configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1x Refresh` - Value - 1x Refresh for configuring MemoryRefreshRate token. * `2x Refresh` - Value - 2x Refresh for configuring MemoryRefreshRate token.
	MemoryRefreshRate *string `json:"MemoryRefreshRate,omitempty"`
	// BIOS Token for setting Memory Size Limit in GiB configuration (0 - 65535 GiB).
	MemorySizeLimit *string `json:"MemorySizeLimit,omitempty"`
	// BIOS Token for setting Memory Thermal Throttling Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `CLTT with PECI` - Value - CLTT with PECI for configuring MemoryThermalThrottling token. * `Disabled` - Value - Disabled for configuring MemoryThermalThrottling token.
	MemoryThermalThrottling *string `json:"MemoryThermalThrottling,omitempty"`
	// BIOS Token for setting Mirroring Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `inter-socket` - Value - inter-socket for configuring MirroringMode token. * `intra-socket` - Value - intra-socket for configuring MirroringMode token.
	MirroringMode *string `json:"MirroringMode,omitempty"`
	// BIOS Token for setting MMCFG BASE configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1 GB` - Value - 1 GiB for configuring MmcfgBase token. * `2 GB` - Value - 2 GiB for configuring MmcfgBase token. * `2.5 GB` - Value - 2.5 GiB for configuring MmcfgBase token. * `3 GB` - Value - 3 GiB for configuring MmcfgBase token. * `Auto` - Value - Auto for configuring MmcfgBase token.
	MmcfgBase *string `json:"MmcfgBase,omitempty"`
	// BIOS Token for setting Network Stack configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	NetworkStack *string `json:"NetworkStack,omitempty"`
	// BIOS Token for setting NUMA Optimized configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	NumaOptimized *string `json:"NumaOptimized,omitempty"`
	// BIOS Token for setting NVM Performance Setting configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `BW Optimized` - Value - BW Optimized for configuring NvmdimmPerformConfig token. * `Balanced Profile` - Value - Balanced Profile for configuring NvmdimmPerformConfig token. * `Latency Optimized` - Value - Latency Optimized for configuring NvmdimmPerformConfig token.
	NvmdimmPerformConfig *string `json:"NvmdimmPerformConfig,omitempty"`
	// BIOS Token for setting Onboard 10Gbit LOM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Onboard10gbitLom *string `json:"Onboard10gbitLom,omitempty"`
	// BIOS Token for setting Onboard Gbit LOM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	OnboardGbitLom *string `json:"OnboardGbitLom,omitempty"`
	// BIOS Token for setting Onboard SCU Storage Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	OnboardScuStorageSupport *string `json:"OnboardScuStorageSupport,omitempty"`
	// BIOS Token for setting Onboard SCU Storage SW Stack configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Intel RSTe` - Value - Intel RSTe for configuring OnboardScuStorageSwStack token. * `LSI SW RAID` - Value - LSI SW RAID for configuring OnboardScuStorageSwStack token.
	OnboardScuStorageSwStack *string `json:"OnboardScuStorageSwStack,omitempty"`
	// BIOS Token for setting Operation Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Test Only` - Value - Test Only for configuring OperationMode token. * `Test and Repair` - Value - Test and Repair for configuring OperationMode token.
	OperationMode *string `json:"OperationMode,omitempty"`
	// BIOS Token for setting OS Boot Watchdog Timer configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	OsBootWatchdogTimer *string `json:"OsBootWatchdogTimer,omitempty"`
	// BIOS Token for setting OS Boot Watchdog Timer Policy configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `do-nothing` - Value - do-nothing for configuring OsBootWatchdogTimerPolicy token. * `power-off` - Value - power-off for configuring OsBootWatchdogTimerPolicy token. * `reset` - Value - reset for configuring OsBootWatchdogTimerPolicy token.
	OsBootWatchdogTimerPolicy *string `json:"OsBootWatchdogTimerPolicy,omitempty"`
	// BIOS Token for setting OS Boot Watchdog Timer Timeout configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `5-minutes` - Value - 5-minutes for configuring OsBootWatchdogTimerTimeout token. * `10-minutes` - Value - 10-minutes for configuring OsBootWatchdogTimerTimeout token. * `15-minutes` - Value - 15-minutes for configuring OsBootWatchdogTimerTimeout token. * `20-minutes` - Value - 20-minutes for configuring OsBootWatchdogTimerTimeout token.
	OsBootWatchdogTimerTimeout *string `json:"OsBootWatchdogTimerTimeout,omitempty"`
	// BIOS Token for setting Out-of-Band Mgmt Port configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	OutOfBandMgmtPort *string `json:"OutOfBandMgmtPort,omitempty"`
	// BIOS Token for setting Package C State Limit configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PackageCstateLimit token. * `C0 C1 State` - Value - C0 C1 State for configuring PackageCstateLimit token. * `C0/C1` - Value - C0/C1 for configuring PackageCstateLimit token. * `C2` - Value - C2 for configuring PackageCstateLimit token. * `C6 Non Retention` - Value - C6 Non Retention for configuring PackageCstateLimit token. * `C6 Retention` - Value - C6 Retention for configuring PackageCstateLimit token. * `No Limit` - Value - No Limit for configuring PackageCstateLimit token.
	PackageCstateLimit *string `json:"PackageCstateLimit,omitempty"`
	// BIOS Token for setting Panic and High Watermark configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `High` - Value - High for configuring PanicHighWatermark token. * `Low` - Value - Low for configuring PanicHighWatermark token.
	PanicHighWatermark *string `json:"PanicHighWatermark,omitempty"`
	// BIOS Token for setting Partial Cache Line Sparing configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PartialCacheLineSparing *string `json:"PartialCacheLineSparing,omitempty"`
	// BIOS Token for setting Partial Memory Mirror Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring PartialMirrorModeConfig token. * `Percentage` - Value - Percentage for configuring PartialMirrorModeConfig token. * `Value in GB` - Value - Value in GiB for configuring PartialMirrorModeConfig token.
	PartialMirrorModeConfig *string `json:"PartialMirrorModeConfig,omitempty"`
	// BIOS Token for setting Partial Mirror Percentage configuration (0.00 - 50.00 Percentage).
	PartialMirrorPercent *string `json:"PartialMirrorPercent,omitempty"`
	// BIOS Token for setting Partial Mirror1 Size in GiB configuration (0 - 65535 GiB).
	PartialMirrorValue1 *string `json:"PartialMirrorValue1,omitempty"`
	// BIOS Token for setting Partial Mirror2 Size in GiB configuration (0 - 65535 GiB).
	PartialMirrorValue2 *string `json:"PartialMirrorValue2,omitempty"`
	// BIOS Token for setting Partial Mirror3 Size in GiB configuration (0 - 65535 GiB).
	PartialMirrorValue3 *string `json:"PartialMirrorValue3,omitempty"`
	// BIOS Token for setting Partial Mirror4 Size in GiB configuration (0 - 65535 GiB).
	PartialMirrorValue4 *string `json:"PartialMirrorValue4,omitempty"`
	// BIOS Token for setting Patrol Scrub configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring PatrolScrub token. * `Enable at End of POST` - Value - Enable at End of POST for configuring PatrolScrub token. * `enabled` - Value - enabled for configuring PatrolScrub token.
	PatrolScrub *string `json:"PatrolScrub,omitempty"`
	// BIOS Token for setting Patrol Scrub Interval configuration (5 - 23 Hour).
	PatrolScrubDuration *string `json:"PatrolScrubDuration,omitempty"`
	// BIOS Token for setting PCIe RAS Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcIeRasSupport *string `json:"PcIeRasSupport,omitempty"`
	// BIOS Token for setting NVMe SSD Hot-Plug Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcIeSsdHotPlugSupport *string `json:"PcIeSsdHotPlugSupport,omitempty"`
	// BIOS Token for setting xHCI Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PchUsb30mode *string `json:"PchUsb30mode,omitempty"`
	// BIOS Token for setting All PCIe Slots OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring PciOptionRoMs token. * `enabled` - Value - enabled for configuring PciOptionRoMs token. * `Legacy Only` - Value - Legacy Only for configuring PciOptionRoMs token. * `UEFI Only` - Value - UEFI Only for configuring PciOptionRoMs token.
	PciOptionRoMs *string `json:"PciOptionRoMs,omitempty"`
	// BIOS Token for setting PCI ROM CLP configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PciRomClp *string `json:"PciRomClp,omitempty"`
	// BIOS Token for setting PCIe ARI Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieAriSupport token. * `disabled` - Value - disabled for configuring PcieAriSupport token. * `enabled` - Value - enabled for configuring PcieAriSupport token.
	PcieAriSupport *string `json:"PcieAriSupport,omitempty"`
	// BIOS Token for setting PCIe PLL SSC configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PciePllSsc token. * `Disabled` - Value - Disabled for configuring PciePllSsc token. * `ZeroPointFive` - Value - ZeroPointFive for configuring PciePllSsc token.
	PciePllSsc *string `json:"PciePllSsc,omitempty"`
	// BIOS Token for setting MRAID1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotMraid1linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotMraid1linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotMraid1linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotMraid1linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotMraid1linkSpeed token. * `GEN4` - Value - GEN4 for configuring PcieSlotMraid1linkSpeed token.
	PcieSlotMraid1linkSpeed *string `json:"PcieSlotMraid1linkSpeed,omitempty"`
	// BIOS Token for setting MRAID1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotMraid1optionRom *string `json:"PcieSlotMraid1optionRom,omitempty"`
	// BIOS Token for setting MRAID2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotMraid2linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotMraid2linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotMraid2linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotMraid2linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotMraid2linkSpeed token. * `GEN4` - Value - GEN4 for configuring PcieSlotMraid2linkSpeed token.
	PcieSlotMraid2linkSpeed *string `json:"PcieSlotMraid2linkSpeed,omitempty"`
	// BIOS Token for setting MRAID2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotMraid2optionRom *string `json:"PcieSlotMraid2optionRom,omitempty"`
	// BIOS Token for setting PCIe Slot MSTOR Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotMstorraidLinkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotMstorraidLinkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotMstorraidLinkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotMstorraidLinkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotMstorraidLinkSpeed token. * `GEN4` - Value - GEN4 for configuring PcieSlotMstorraidLinkSpeed token.
	PcieSlotMstorraidLinkSpeed *string `json:"PcieSlotMstorraidLinkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot MSTOR RAID OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotMstorraidOptionRom *string `json:"PcieSlotMstorraidOptionRom,omitempty"`
	// BIOS Token for setting NVME 1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme1linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme1linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme1linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme1linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme1linkSpeed token.
	PcieSlotNvme1linkSpeed *string `json:"PcieSlotNvme1linkSpeed,omitempty"`
	// BIOS Token for setting NVME 1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme1optionRom *string `json:"PcieSlotNvme1optionRom,omitempty"`
	// BIOS Token for setting NVME 2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme2linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme2linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme2linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme2linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme2linkSpeed token.
	PcieSlotNvme2linkSpeed *string `json:"PcieSlotNvme2linkSpeed,omitempty"`
	// BIOS Token for setting NVME 2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme2optionRom *string `json:"PcieSlotNvme2optionRom,omitempty"`
	// BIOS Token for setting NVME 3 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme3linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme3linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme3linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme3linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme3linkSpeed token.
	PcieSlotNvme3linkSpeed *string `json:"PcieSlotNvme3linkSpeed,omitempty"`
	// BIOS Token for setting NVME 3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme3optionRom *string `json:"PcieSlotNvme3optionRom,omitempty"`
	// BIOS Token for setting NVME 4 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme4linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme4linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme4linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme4linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme4linkSpeed token.
	PcieSlotNvme4linkSpeed *string `json:"PcieSlotNvme4linkSpeed,omitempty"`
	// BIOS Token for setting NVME 4 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme4optionRom *string `json:"PcieSlotNvme4optionRom,omitempty"`
	// BIOS Token for setting NVME 5 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme5linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme5linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme5linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme5linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme5linkSpeed token.
	PcieSlotNvme5linkSpeed *string `json:"PcieSlotNvme5linkSpeed,omitempty"`
	// BIOS Token for setting NVME 5 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme5optionRom *string `json:"PcieSlotNvme5optionRom,omitempty"`
	// BIOS Token for setting NVME 6 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring PcieSlotNvme6linkSpeed token. * `Disabled` - Value - Disabled for configuring PcieSlotNvme6linkSpeed token. * `GEN1` - Value - GEN1 for configuring PcieSlotNvme6linkSpeed token. * `GEN2` - Value - GEN2 for configuring PcieSlotNvme6linkSpeed token. * `GEN3` - Value - GEN3 for configuring PcieSlotNvme6linkSpeed token.
	PcieSlotNvme6linkSpeed *string `json:"PcieSlotNvme6linkSpeed,omitempty"`
	// BIOS Token for setting NVME 6 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PcieSlotNvme6optionRom *string `json:"PcieSlotNvme6optionRom,omitempty"`
	// BIOS Token for setting Power ON Password configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PopSupport *string `json:"PopSupport,omitempty"`
	// BIOS Token for setting POST Error Pause configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	PostErrorPause *string `json:"PostErrorPause,omitempty"`
	// BIOS Token for setting Post Package Repair configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Disabled` - Value - Disabled for configuring PostPackageRepair token. * `Hard PPR` - Value - Hard PPR for configuring PostPackageRepair token.
	PostPackageRepair *string `json:"PostPackageRepair,omitempty"`
	// BIOS Token for setting Processor C1E configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ProcessorC1e *string `json:"ProcessorC1e,omitempty"`
	// BIOS Token for setting Processor C3 Report configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ProcessorC3report *string `json:"ProcessorC3report,omitempty"`
	// BIOS Token for setting Processor C6 Report configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ProcessorC6report *string `json:"ProcessorC6report,omitempty"`
	// BIOS Token for setting CPU C State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	ProcessorCstate *string `json:"ProcessorCstate,omitempty"`
	// BIOS Token for setting P-SATA Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `AHCI` - Value - AHCI for configuring Psata token. * `Disabled` - Value - Disabled for configuring Psata token. * `LSI SW RAID` - Value - LSI SW RAID for configuring Psata token.
	Psata *string `json:"Psata,omitempty"`
	// BIOS Token for setting P-STATE Coordination configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `HW ALL` - Value - HW ALL for configuring PstateCoordType token. * `SW ALL` - Value - SW ALL for configuring PstateCoordType token. * `SW ANY` - Value - SW ANY for configuring PstateCoordType token.
	PstateCoordType *string `json:"PstateCoordType,omitempty"`
	// BIOS Token for setting Putty KeyPad configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `ESCN` - Value - ESCN for configuring PuttyKeyPad token. * `LINUX` - Value - LINUX for configuring PuttyKeyPad token. * `SCO` - Value - SCO for configuring PuttyKeyPad token. * `VT100` - Value - VT100 for configuring PuttyKeyPad token. * `VT400` - Value - VT400 for configuring PuttyKeyPad token. * `XTERMR6` - Value - XTERMR6 for configuring PuttyKeyPad token.
	PuttyKeyPad *string `json:"PuttyKeyPad,omitempty"`
	// BIOS Token for setting Power Performance Tuning configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `bios` - Value - BIOS for configuring PwrPerfTuning token. * `os` - Value - os for configuring PwrPerfTuning token. * `peci` - Value - peci for configuring PwrPerfTuning token.
	PwrPerfTuning *string `json:"PwrPerfTuning,omitempty"`
	// BIOS Token for setting QPI Link Frequency Select configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `6.4-gt/s` - Value - 6.4-gt/s for configuring QpiLinkFrequency token. * `7.2-gt/s` - Value - 7.2-gt/s for configuring QpiLinkFrequency token. * `8.0-gt/s` - Value - 8.0-gt/s for configuring QpiLinkFrequency token. * `9.6-gt/s` - Value - 9.6-gt/s for configuring QpiLinkFrequency token. * `auto` - Value - auto for configuring QpiLinkFrequency token.
	QpiLinkFrequency *string `json:"QpiLinkFrequency,omitempty"`
	// BIOS Token for setting UPI Link Frequency Select configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `10.4GT/s` - Value - 10.4GT/s for configuring QpiLinkSpeed token. * `11.2GT/s` - Value - 11.2GT/s for configuring QpiLinkSpeed token. * `9.6GT/s` - Value - 9.6GT/s for configuring QpiLinkSpeed token. * `Auto` - Value - Auto for configuring QpiLinkSpeed token.
	QpiLinkSpeed *string `json:"QpiLinkSpeed,omitempty"`
	// BIOS Token for setting QPI Snoop Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `auto` - Value - auto for configuring QpiSnoopMode token. * `cluster-on-die` - Value - cluster-on-die for configuring QpiSnoopMode token. * `early-snoop` - Value - early-snoop for configuring QpiSnoopMode token. * `home-directory-snoop` - Value - home-directory-snoop for configuring QpiSnoopMode token. * `home-directory-snoop-with-osb` - Value - home-directory-snoop-with-osb for configuring QpiSnoopMode token. * `home-snoop` - Value - home-snoop for configuring QpiSnoopMode token.
	QpiSnoopMode *string `json:"QpiSnoopMode,omitempty"`
	// BIOS Token for setting Rank Interleaving configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1-way` - Value - 1-way for configuring RankInterLeave token. * `2-way` - Value - 2-way for configuring RankInterLeave token. * `4-way` - Value - 4-way for configuring RankInterLeave token. * `8-way` - Value - 8-way for configuring RankInterLeave token. * `auto` - Value - auto for configuring RankInterLeave token.
	RankInterLeave *string `json:"RankInterLeave,omitempty"`
	// BIOS Token for setting Redirection After BIOS POST configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Always Enable` - Value - Always Enable for configuring RedirectionAfterPost token. * `Bootloader` - Value - Bootloader for configuring RedirectionAfterPost token.
	RedirectionAfterPost *string `json:"RedirectionAfterPost,omitempty"`
	// BIOS Token for setting SATA Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `AHCI` - Value - AHCI for configuring SataModeSelect token. * `Disabled` - Value - Disabled for configuring SataModeSelect token. * `LSI SW RAID` - Value - LSI SW RAID for configuring SataModeSelect token.
	SataModeSelect *string `json:"SataModeSelect,omitempty"`
	// BIOS Token for setting Memory RAS Configuration configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `adddc-sparing` - Value - adddc-sparing for configuring SelectMemoryRasConfiguration token. * `lockstep` - Value - lockstep for configuring SelectMemoryRasConfiguration token. * `maximum-performance` - Value - maximum-performance for configuring SelectMemoryRasConfiguration token. * `mirror-mode-1lm` - Value - mirror-mode-1lm for configuring SelectMemoryRasConfiguration token. * `mirroring` - Value - mirroring for configuring SelectMemoryRasConfiguration token. * `partial-mirror-mode-1lm` - Value - partial-mirror-mode-1lm for configuring SelectMemoryRasConfiguration token. * `sparing` - Value - sparing for configuring SelectMemoryRasConfiguration token.
	SelectMemoryRasConfiguration *string `json:"SelectMemoryRasConfiguration,omitempty"`
	// BIOS Token for setting PPR Type configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SelectPprType token. * `Hard PPR` - Value - Hard PPR for configuring SelectPprType token. * `Soft PPR` - Value - Soft PPR for configuring SelectPprType token.
	SelectPprType *string `json:"SelectPprType,omitempty"`
	// BIOS Token for setting Serial A Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SerialPortAenable *string `json:"SerialPortAenable,omitempty"`
	// BIOS Token for setting Secured Encrypted Virtualization configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `253 ASIDs` - Value - 253 ASIDs for configuring Sev token. * `509 ASIDs` - Value - 509 ASIDs for configuring Sev token. * `Auto` - Value - Auto for configuring Sev token.
	Sev *string `json:"Sev,omitempty"`
	// BIOS Token for setting SGX Auto MP Registration Agent configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SgxAutoRegistrationAgent *string `json:"SgxAutoRegistrationAgent,omitempty"`
	// BIOS Token for setting SGX Epoch 0 configuration (0 - ffffffffffffffff Hash byte 7-0).
	SgxEpoch0 *string `json:"SgxEpoch0,omitempty"`
	// BIOS Token for setting SGX Epoch 1 configuration (0 - ffffffffffffffff Hash byte 7-0).
	SgxEpoch1 *string `json:"SgxEpoch1,omitempty"`
	// BIOS Token for setting SGX Factory Reset configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SgxFactoryReset *string `json:"SgxFactoryReset,omitempty"`
	// BIOS Token for setting SGX PubKey Hash0 configuration (0 - ffffffffffffffff Hash byte 7-0).
	SgxLePubKeyHash0 *string `json:"SgxLePubKeyHash0,omitempty"`
	// BIOS Token for setting SGX PubKey Hash1 configuration (0 - ffffffffffffffff Hash byte 15-8).
	SgxLePubKeyHash1 *string `json:"SgxLePubKeyHash1,omitempty"`
	// BIOS Token for setting SGX PubKey Hash2 configuration (0 - ffffffffffffffff Hash byte 23-16).
	SgxLePubKeyHash2 *string `json:"SgxLePubKeyHash2,omitempty"`
	// BIOS Token for setting SGX PubKey Hash3 configuration (0 - ffffffffffffffff Hash byte 31-24).
	SgxLePubKeyHash3 *string `json:"SgxLePubKeyHash3,omitempty"`
	// BIOS Token for setting SGX Write Enable configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SgxLeWr *string `json:"SgxLeWr,omitempty"`
	// BIOS Token for setting SGX Package Information In-Band Access configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SgxPackageInfoInBandAccess *string `json:"SgxPackageInfoInBandAccess,omitempty"`
	// BIOS Token for setting SGX QoS configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SgxQos *string `json:"SgxQos,omitempty"`
	// BIOS Token for setting Single PCTL configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `No` - Value - No for configuring SinglePctlEnable token. * `Yes` - Value - Yes for configuring SinglePctlEnable token.
	SinglePctlEnable *string `json:"SinglePctlEnable,omitempty"`
	// BIOS Token for setting PCIe Slot:10 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot10linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot10linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot10linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot10linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot10linkSpeed token.
	Slot10linkSpeed *string `json:"Slot10linkSpeed,omitempty"`
	// BIOS Token for setting Slot 10 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot10state token. * `enabled` - Value - enabled for configuring Slot10state token. * `Legacy Only` - Value - Legacy Only for configuring Slot10state token. * `UEFI Only` - Value - UEFI Only for configuring Slot10state token.
	Slot10state *string `json:"Slot10state,omitempty"`
	// BIOS Token for setting PCIe Slot:11 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot11linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot11linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot11linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot11linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot11linkSpeed token.
	Slot11linkSpeed *string `json:"Slot11linkSpeed,omitempty"`
	// BIOS Token for setting Slot 11 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Slot11state *string `json:"Slot11state,omitempty"`
	// BIOS Token for setting PCIe Slot:12 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot12linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot12linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot12linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot12linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot12linkSpeed token.
	Slot12linkSpeed *string `json:"Slot12linkSpeed,omitempty"`
	// BIOS Token for setting Slot 12 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Slot12state *string `json:"Slot12state,omitempty"`
	// BIOS Token for setting Slot 13 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Slot13state *string `json:"Slot13state,omitempty"`
	// BIOS Token for setting Slot 14 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Slot14state *string `json:"Slot14state,omitempty"`
	// BIOS Token for setting PCIe Slot: 1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot1linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot1linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot1linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot1linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot1linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot1linkSpeed token.
	Slot1linkSpeed *string `json:"Slot1linkSpeed,omitempty"`
	// BIOS Token for setting Slot 1 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot1state token. * `enabled` - Value - enabled for configuring Slot1state token. * `Legacy Only` - Value - Legacy Only for configuring Slot1state token. * `UEFI Only` - Value - UEFI Only for configuring Slot1state token.
	Slot1state *string `json:"Slot1state,omitempty"`
	// BIOS Token for setting PCIe Slot: 2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot2linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot2linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot2linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot2linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot2linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot2linkSpeed token.
	Slot2linkSpeed *string `json:"Slot2linkSpeed,omitempty"`
	// BIOS Token for setting Slot 2 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot2state token. * `enabled` - Value - enabled for configuring Slot2state token. * `Legacy Only` - Value - Legacy Only for configuring Slot2state token. * `UEFI Only` - Value - UEFI Only for configuring Slot2state token.
	Slot2state *string `json:"Slot2state,omitempty"`
	// BIOS Token for setting PCIe Slot: 3 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot3linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot3linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot3linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot3linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot3linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot3linkSpeed token.
	Slot3linkSpeed *string `json:"Slot3linkSpeed,omitempty"`
	// BIOS Token for setting Slot 3 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot3state token. * `enabled` - Value - enabled for configuring Slot3state token. * `Legacy Only` - Value - Legacy Only for configuring Slot3state token. * `UEFI Only` - Value - UEFI Only for configuring Slot3state token.
	Slot3state *string `json:"Slot3state,omitempty"`
	// BIOS Token for setting PCIe Slot: 4 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot4linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot4linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot4linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot4linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot4linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot4linkSpeed token.
	Slot4linkSpeed *string `json:"Slot4linkSpeed,omitempty"`
	// BIOS Token for setting Slot 4 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot4state token. * `enabled` - Value - enabled for configuring Slot4state token. * `Legacy Only` - Value - Legacy Only for configuring Slot4state token. * `UEFI Only` - Value - UEFI Only for configuring Slot4state token.
	Slot4state *string `json:"Slot4state,omitempty"`
	// BIOS Token for setting PCIe Slot: 5 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot5linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot5linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot5linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot5linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot5linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot5linkSpeed token.
	Slot5linkSpeed *string `json:"Slot5linkSpeed,omitempty"`
	// BIOS Token for setting Slot 5 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot5state token. * `enabled` - Value - enabled for configuring Slot5state token. * `Legacy Only` - Value - Legacy Only for configuring Slot5state token. * `UEFI Only` - Value - UEFI Only for configuring Slot5state token.
	Slot5state *string `json:"Slot5state,omitempty"`
	// BIOS Token for setting PCIe Slot: 6 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot6linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot6linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot6linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot6linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot6linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot6linkSpeed token.
	Slot6linkSpeed *string `json:"Slot6linkSpeed,omitempty"`
	// BIOS Token for setting Slot 6 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot6state token. * `enabled` - Value - enabled for configuring Slot6state token. * `Legacy Only` - Value - Legacy Only for configuring Slot6state token. * `UEFI Only` - Value - UEFI Only for configuring Slot6state token.
	Slot6state *string `json:"Slot6state,omitempty"`
	// BIOS Token for setting PCIe Slot: 7 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot7linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot7linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot7linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot7linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot7linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot7linkSpeed token.
	Slot7linkSpeed *string `json:"Slot7linkSpeed,omitempty"`
	// BIOS Token for setting Slot 7 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot7state token. * `enabled` - Value - enabled for configuring Slot7state token. * `Legacy Only` - Value - Legacy Only for configuring Slot7state token. * `UEFI Only` - Value - UEFI Only for configuring Slot7state token.
	Slot7state *string `json:"Slot7state,omitempty"`
	// BIOS Token for setting PCIe Slot: 8 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot8linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot8linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot8linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot8linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot8linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot8linkSpeed token.
	Slot8linkSpeed *string `json:"Slot8linkSpeed,omitempty"`
	// BIOS Token for setting Slot 8 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot8state token. * `enabled` - Value - enabled for configuring Slot8state token. * `Legacy Only` - Value - Legacy Only for configuring Slot8state token. * `UEFI Only` - Value - UEFI Only for configuring Slot8state token.
	Slot8state *string `json:"Slot8state,omitempty"`
	// BIOS Token for setting PCIe Slot: 9 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Slot9linkSpeed token. * `Disabled` - Value - Disabled for configuring Slot9linkSpeed token. * `GEN1` - Value - GEN1 for configuring Slot9linkSpeed token. * `GEN2` - Value - GEN2 for configuring Slot9linkSpeed token. * `GEN3` - Value - GEN3 for configuring Slot9linkSpeed token. * `GEN4` - Value - GEN4 for configuring Slot9linkSpeed token.
	Slot9linkSpeed *string `json:"Slot9linkSpeed,omitempty"`
	// BIOS Token for setting Slot 9 State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring Slot9state token. * `enabled` - Value - enabled for configuring Slot9state token. * `Legacy Only` - Value - Legacy Only for configuring Slot9state token. * `UEFI Only` - Value - UEFI Only for configuring Slot9state token.
	Slot9state *string `json:"Slot9state,omitempty"`
	// BIOS Token for setting PCIe Slot:FLOM Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFlomLinkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFlomLinkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFlomLinkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFlomLinkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFlomLinkSpeed token.
	SlotFlomLinkSpeed *string `json:"SlotFlomLinkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 10 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme10linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme10linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme10linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme10linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme10linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme10linkSpeed token.
	SlotFrontNvme10linkSpeed *string `json:"SlotFrontNvme10linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 10 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme10optionRom *string `json:"SlotFrontNvme10optionRom,omitempty"`
	// BIOS Token for setting Front NVME 11 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme11linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme11linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme11linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme11linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme11linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme11linkSpeed token.
	SlotFrontNvme11linkSpeed *string `json:"SlotFrontNvme11linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 11 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme11optionRom *string `json:"SlotFrontNvme11optionRom,omitempty"`
	// BIOS Token for setting Front NVME 12 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme12linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme12linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme12linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme12linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme12linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme12linkSpeed token.
	SlotFrontNvme12linkSpeed *string `json:"SlotFrontNvme12linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 12 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme12optionRom *string `json:"SlotFrontNvme12optionRom,omitempty"`
	// BIOS Token for setting Front NVME 13 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme13optionRom *string `json:"SlotFrontNvme13optionRom,omitempty"`
	// BIOS Token for setting Front NVME 14 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme14optionRom *string `json:"SlotFrontNvme14optionRom,omitempty"`
	// BIOS Token for setting Front NVME 15 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme15optionRom *string `json:"SlotFrontNvme15optionRom,omitempty"`
	// BIOS Token for setting Front NVME 16 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme16optionRom *string `json:"SlotFrontNvme16optionRom,omitempty"`
	// BIOS Token for setting Front NVME 17 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme17optionRom *string `json:"SlotFrontNvme17optionRom,omitempty"`
	// BIOS Token for setting Front NVME 18 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme18optionRom *string `json:"SlotFrontNvme18optionRom,omitempty"`
	// BIOS Token for setting Front NVME 19 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme19optionRom *string `json:"SlotFrontNvme19optionRom,omitempty"`
	// BIOS Token for setting PCIe Slot:Front NVME 1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme1linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme1linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme1linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme1linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme1linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme1linkSpeed token.
	SlotFrontNvme1linkSpeed *string `json:"SlotFrontNvme1linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme1optionRom *string `json:"SlotFrontNvme1optionRom,omitempty"`
	// BIOS Token for setting Front NVME 20 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme20optionRom *string `json:"SlotFrontNvme20optionRom,omitempty"`
	// BIOS Token for setting Front NVME 21 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme21optionRom *string `json:"SlotFrontNvme21optionRom,omitempty"`
	// BIOS Token for setting Front NVME 22 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme22optionRom *string `json:"SlotFrontNvme22optionRom,omitempty"`
	// BIOS Token for setting Front NVME 23 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme23optionRom *string `json:"SlotFrontNvme23optionRom,omitempty"`
	// BIOS Token for setting Front NVME 24 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme24optionRom *string `json:"SlotFrontNvme24optionRom,omitempty"`
	// BIOS Token for setting PCIe Slot:Front NVME 2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme2linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme2linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme2linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme2linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme2linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme2linkSpeed token.
	SlotFrontNvme2linkSpeed *string `json:"SlotFrontNvme2linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme2optionRom *string `json:"SlotFrontNvme2optionRom,omitempty"`
	// BIOS Token for setting Front NVME 3 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme3linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme3linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme3linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme3linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme3linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme3linkSpeed token.
	SlotFrontNvme3linkSpeed *string `json:"SlotFrontNvme3linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme3optionRom *string `json:"SlotFrontNvme3optionRom,omitempty"`
	// BIOS Token for setting Front NVME 4 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme4linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme4linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme4linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme4linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme4linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme4linkSpeed token.
	SlotFrontNvme4linkSpeed *string `json:"SlotFrontNvme4linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 4 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme4optionRom *string `json:"SlotFrontNvme4optionRom,omitempty"`
	// BIOS Token for setting Front NVME 5 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme5linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme5linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme5linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme5linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme5linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme5linkSpeed token.
	SlotFrontNvme5linkSpeed *string `json:"SlotFrontNvme5linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 5 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme5optionRom *string `json:"SlotFrontNvme5optionRom,omitempty"`
	// BIOS Token for setting Front NVME 6 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme6linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme6linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme6linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme6linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme6linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme6linkSpeed token.
	SlotFrontNvme6linkSpeed *string `json:"SlotFrontNvme6linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 6 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme6optionRom *string `json:"SlotFrontNvme6optionRom,omitempty"`
	// BIOS Token for setting Front NVME 7 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme7linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme7linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme7linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme7linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme7linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme7linkSpeed token.
	SlotFrontNvme7linkSpeed *string `json:"SlotFrontNvme7linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 7 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme7optionRom *string `json:"SlotFrontNvme7optionRom,omitempty"`
	// BIOS Token for setting Front NVME 8 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme8linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme8linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme8linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme8linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme8linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme8linkSpeed token.
	SlotFrontNvme8linkSpeed *string `json:"SlotFrontNvme8linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 8 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme8optionRom *string `json:"SlotFrontNvme8optionRom,omitempty"`
	// BIOS Token for setting Front NVME 9 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontNvme9linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontNvme9linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontNvme9linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontNvme9linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontNvme9linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotFrontNvme9linkSpeed token.
	SlotFrontNvme9linkSpeed *string `json:"SlotFrontNvme9linkSpeed,omitempty"`
	// BIOS Token for setting Front NVME 9 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotFrontNvme9optionRom *string `json:"SlotFrontNvme9optionRom,omitempty"`
	// BIOS Token for setting PCIe Slot:Front1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontSlot5linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontSlot5linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontSlot5linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontSlot5linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontSlot5linkSpeed token.
	SlotFrontSlot5linkSpeed *string `json:"SlotFrontSlot5linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Front2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotFrontSlot6linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotFrontSlot6linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotFrontSlot6linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotFrontSlot6linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotFrontSlot6linkSpeed token.
	SlotFrontSlot6linkSpeed *string `json:"SlotFrontSlot6linkSpeed,omitempty"`
	// BIOS Token for setting GPU 1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu1state *string `json:"SlotGpu1state,omitempty"`
	// BIOS Token for setting GPU 2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu2state *string `json:"SlotGpu2state,omitempty"`
	// BIOS Token for setting GPU 3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu3state *string `json:"SlotGpu3state,omitempty"`
	// BIOS Token for setting GPU 4 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu4state *string `json:"SlotGpu4state,omitempty"`
	// BIOS Token for setting GPU 5 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu5state *string `json:"SlotGpu5state,omitempty"`
	// BIOS Token for setting GPU 6 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu6state *string `json:"SlotGpu6state,omitempty"`
	// BIOS Token for setting GPU 7 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu7state *string `json:"SlotGpu7state,omitempty"`
	// BIOS Token for setting GPU 8 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotGpu8state *string `json:"SlotGpu8state,omitempty"`
	// BIOS Token for setting PCIe Slot:HBA Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotHbaLinkSpeed token. * `Disabled` - Value - Disabled for configuring SlotHbaLinkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotHbaLinkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotHbaLinkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotHbaLinkSpeed token.
	SlotHbaLinkSpeed *string `json:"SlotHbaLinkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:HBA OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotHbaState token. * `enabled` - Value - enabled for configuring SlotHbaState token. * `Legacy Only` - Value - Legacy Only for configuring SlotHbaState token. * `UEFI Only` - Value - UEFI Only for configuring SlotHbaState token.
	SlotHbaState *string `json:"SlotHbaState,omitempty"`
	// BIOS Token for setting PCIe LOM:1 Link configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotLom1link *string `json:"SlotLom1link,omitempty"`
	// BIOS Token for setting PCIe LOM:2 Link configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotLom2link *string `json:"SlotLom2link,omitempty"`
	// BIOS Token for setting Slot Mezz State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotMezzState token. * `enabled` - Value - enabled for configuring SlotMezzState token. * `Legacy Only` - Value - Legacy Only for configuring SlotMezzState token. * `UEFI Only` - Value - UEFI Only for configuring SlotMezzState token.
	SlotMezzState *string `json:"SlotMezzState,omitempty"`
	// BIOS Token for setting PCIe Slot:MLOM Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotMlomLinkSpeed token. * `Disabled` - Value - Disabled for configuring SlotMlomLinkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotMlomLinkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotMlomLinkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotMlomLinkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotMlomLinkSpeed token.
	SlotMlomLinkSpeed *string `json:"SlotMlomLinkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot MLOM OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotMlomState token. * `enabled` - Value - enabled for configuring SlotMlomState token. * `Legacy Only` - Value - Legacy Only for configuring SlotMlomState token. * `UEFI Only` - Value - UEFI Only for configuring SlotMlomState token.
	SlotMlomState *string `json:"SlotMlomState,omitempty"`
	// BIOS Token for setting MRAID Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotMraidLinkSpeed token. * `Disabled` - Value - Disabled for configuring SlotMraidLinkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotMraidLinkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotMraidLinkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotMraidLinkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotMraidLinkSpeed token.
	SlotMraidLinkSpeed *string `json:"SlotMraidLinkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot MRAID OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotMraidState *string `json:"SlotMraidState,omitempty"`
	// BIOS Token for setting PCIe Slot N10 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN10state *string `json:"SlotN10state,omitempty"`
	// BIOS Token for setting PCIe Slot N11 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN11state *string `json:"SlotN11state,omitempty"`
	// BIOS Token for setting PCIe Slot N12 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN12state *string `json:"SlotN12state,omitempty"`
	// BIOS Token for setting PCIe Slot N13 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN13state *string `json:"SlotN13state,omitempty"`
	// BIOS Token for setting PCIe Slot N14 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN14state *string `json:"SlotN14state,omitempty"`
	// BIOS Token for setting PCIe Slot N15 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN15state *string `json:"SlotN15state,omitempty"`
	// BIOS Token for setting PCIe Slot N16 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN16state *string `json:"SlotN16state,omitempty"`
	// BIOS Token for setting PCIe Slot N17 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN17state *string `json:"SlotN17state,omitempty"`
	// BIOS Token for setting PCIe Slot N18 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN18state *string `json:"SlotN18state,omitempty"`
	// BIOS Token for setting PCIe Slot N19 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN19state *string `json:"SlotN19state,omitempty"`
	// BIOS Token for setting PCIe Slot N1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotN1state token. * `enabled` - Value - enabled for configuring SlotN1state token. * `Legacy Only` - Value - Legacy Only for configuring SlotN1state token. * `UEFI Only` - Value - UEFI Only for configuring SlotN1state token.
	SlotN1state *string `json:"SlotN1state,omitempty"`
	// BIOS Token for setting PCIe Slot N20 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN20state *string `json:"SlotN20state,omitempty"`
	// BIOS Token for setting PCIe Slot N21 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN21state *string `json:"SlotN21state,omitempty"`
	// BIOS Token for setting PCIe Slot N22 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN22state *string `json:"SlotN22state,omitempty"`
	// BIOS Token for setting PCIe Slot N23 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN23state *string `json:"SlotN23state,omitempty"`
	// BIOS Token for setting PCIe Slot N24 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN24state *string `json:"SlotN24state,omitempty"`
	// BIOS Token for setting PCIe Slot N2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotN2state token. * `enabled` - Value - enabled for configuring SlotN2state token. * `Legacy Only` - Value - Legacy Only for configuring SlotN2state token. * `UEFI Only` - Value - UEFI Only for configuring SlotN2state token.
	SlotN2state *string `json:"SlotN2state,omitempty"`
	// BIOS Token for setting PCIe Slot N3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN3state *string `json:"SlotN3state,omitempty"`
	// BIOS Token for setting PCIe Slot N4 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN4state *string `json:"SlotN4state,omitempty"`
	// BIOS Token for setting PCIe Slot N5 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN5state *string `json:"SlotN5state,omitempty"`
	// BIOS Token for setting PCIe Slot N6 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN6state *string `json:"SlotN6state,omitempty"`
	// BIOS Token for setting PCIe Slot N7 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN7state *string `json:"SlotN7state,omitempty"`
	// BIOS Token for setting PCIe Slot N8 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN8state *string `json:"SlotN8state,omitempty"`
	// BIOS Token for setting PCIe Slot N9 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotN9state *string `json:"SlotN9state,omitempty"`
	// BIOS Token for setting RAID Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRaidLinkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRaidLinkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRaidLinkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRaidLinkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRaidLinkSpeed token.
	SlotRaidLinkSpeed *string `json:"SlotRaidLinkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot RAID OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRaidState *string `json:"SlotRaidState,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRearNvme1linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRearNvme1linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRearNvme1linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRearNvme1linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRearNvme1linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotRearNvme1linkSpeed token.
	SlotRearNvme1linkSpeed *string `json:"SlotRearNvme1linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 1 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme1state *string `json:"SlotRearNvme1state,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRearNvme2linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRearNvme2linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRearNvme2linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRearNvme2linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRearNvme2linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotRearNvme2linkSpeed token.
	SlotRearNvme2linkSpeed *string `json:"SlotRearNvme2linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 2 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme2state *string `json:"SlotRearNvme2state,omitempty"`
	// BIOS Token for setting Rear NVME 3 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRearNvme3linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRearNvme3linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRearNvme3linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRearNvme3linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRearNvme3linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotRearNvme3linkSpeed token.
	SlotRearNvme3linkSpeed *string `json:"SlotRearNvme3linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 3 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme3state *string `json:"SlotRearNvme3state,omitempty"`
	// BIOS Token for setting Rear NVME 4 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRearNvme4linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRearNvme4linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRearNvme4linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRearNvme4linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRearNvme4linkSpeed token. * `GEN4` - Value - GEN4 for configuring SlotRearNvme4linkSpeed token.
	SlotRearNvme4linkSpeed *string `json:"SlotRearNvme4linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 4 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme4state *string `json:"SlotRearNvme4state,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 5 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme5state *string `json:"SlotRearNvme5state,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 6 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme6state *string `json:"SlotRearNvme6state,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 7 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme7state *string `json:"SlotRearNvme7state,omitempty"`
	// BIOS Token for setting PCIe Slot:Rear NVME 8 OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SlotRearNvme8state *string `json:"SlotRearNvme8state,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser1linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser1linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser1linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser1linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser1linkSpeed token.
	SlotRiser1linkSpeed *string `json:"SlotRiser1linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser1 Slot1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser1slot1linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser1slot1linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser1slot1linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser1slot1linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser1slot1linkSpeed token.
	SlotRiser1slot1linkSpeed *string `json:"SlotRiser1slot1linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser1 Slot2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser1slot2linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser1slot2linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser1slot2linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser1slot2linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser1slot2linkSpeed token.
	SlotRiser1slot2linkSpeed *string `json:"SlotRiser1slot2linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser1 Slot3 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser1slot3linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser1slot3linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser1slot3linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser1slot3linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser1slot3linkSpeed token.
	SlotRiser1slot3linkSpeed *string `json:"SlotRiser1slot3linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser2linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser2linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser2linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser2linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser2linkSpeed token.
	SlotRiser2linkSpeed *string `json:"SlotRiser2linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser2 Slot4 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser2slot4linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser2slot4linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser2slot4linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser2slot4linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser2slot4linkSpeed token.
	SlotRiser2slot4linkSpeed *string `json:"SlotRiser2slot4linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser2 Slot5 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser2slot5linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser2slot5linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser2slot5linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser2slot5linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser2slot5linkSpeed token.
	SlotRiser2slot5linkSpeed *string `json:"SlotRiser2slot5linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:Riser2 Slot6 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotRiser2slot6linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotRiser2slot6linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotRiser2slot6linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotRiser2slot6linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotRiser2slot6linkSpeed token.
	SlotRiser2slot6linkSpeed *string `json:"SlotRiser2slot6linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:SAS OptionROM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `disabled` - Value - disabled for configuring SlotSasState token. * `enabled` - Value - enabled for configuring SlotSasState token. * `Legacy Only` - Value - Legacy Only for configuring SlotSasState token. * `UEFI Only` - Value - UEFI Only for configuring SlotSasState token.
	SlotSasState *string `json:"SlotSasState,omitempty"`
	// BIOS Token for setting PCIe Slot:FrontSSD1 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotSsdSlot1linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotSsdSlot1linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotSsdSlot1linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotSsdSlot1linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotSsdSlot1linkSpeed token.
	SlotSsdSlot1linkSpeed *string `json:"SlotSsdSlot1linkSpeed,omitempty"`
	// BIOS Token for setting PCIe Slot:FrontSSD2 Link Speed configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SlotSsdSlot2linkSpeed token. * `Disabled` - Value - Disabled for configuring SlotSsdSlot2linkSpeed token. * `GEN1` - Value - GEN1 for configuring SlotSsdSlot2linkSpeed token. * `GEN2` - Value - GEN2 for configuring SlotSsdSlot2linkSpeed token. * `GEN3` - Value - GEN3 for configuring SlotSsdSlot2linkSpeed token.
	SlotSsdSlot2linkSpeed *string `json:"SlotSsdSlot2linkSpeed,omitempty"`
	// BIOS Token for setting SMEE configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	Smee *string `json:"Smee,omitempty"`
	// BIOS Token for setting SMT Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring SmtMode token. * `Off` - Value - Off for configuring SmtMode token.
	SmtMode *string `json:"SmtMode,omitempty"`
	// BIOS Token for setting Sub Numa Clustering configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Snc token. * `disabled` - Value - disabled for configuring Snc token. * `enabled` - Value - enabled for configuring Snc token.
	Snc *string `json:"Snc,omitempty"`
	// BIOS Token for setting Snoopy Mode for 2LM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SnoopyModeFor2lm *string `json:"SnoopyModeFor2lm,omitempty"`
	// BIOS Token for setting Snoopy Mode for AD configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SnoopyModeForAd *string `json:"SnoopyModeForAd,omitempty"`
	// BIOS Token for setting Sparing Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `dimm-sparing` - Value - dimm-sparing for configuring SparingMode token. * `rank-sparing` - Value - rank-sparing for configuring SparingMode token.
	SparingMode *string `json:"SparingMode,omitempty"`
	// BIOS Token for setting SR-IOV Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SrIov *string `json:"SrIov,omitempty"`
	// BIOS Token for setting DCU Streamer Prefetch configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	StreamerPrefetch *string `json:"StreamerPrefetch,omitempty"`
	// BIOS Token for setting SVM Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	SvmMode *string `json:"SvmMode,omitempty"`
	// BIOS Token for setting Terminal Type configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `pc-ansi` - Value - pc-ansi for configuring TerminalType token. * `vt100` - Value - vt100 for configuring TerminalType token. * `vt100-plus` - Value - vt100-plus for configuring TerminalType token. * `vt-utf8` - Value - vt-utf8 for configuring TerminalType token.
	TerminalType *string `json:"TerminalType,omitempty"`
	// BIOS Token for setting Trusted Platform Module State configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	TpmControl *string `json:"TpmControl,omitempty"`
	// BIOS Token for setting TPM Pending Operation configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `None` - Value - None for configuring TpmPendingOperation token. * `TpmClear` - Value - TpmClear for configuring TpmPendingOperation token.
	TpmPendingOperation *string `json:"TpmPendingOperation,omitempty"`
	// BIOS Token for setting TPM Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	TpmSupport *string `json:"TpmSupport,omitempty"`
	// BIOS Token for setting Transparent Secure Memory Encryption configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring Tsme token. * `disabled` - Value - disabled for configuring Tsme token. * `enabled` - Value - enabled for configuring Tsme token.
	Tsme *string `json:"Tsme,omitempty"`
	// BIOS Token for setting Intel Trusted Execution Technology Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	TxtSupport *string `json:"TxtSupport,omitempty"`
	// BIOS Token for setting Boot Order Rules configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Loose` - Value - Loose for configuring UcsmBootOrderRule token. * `Strict` - Value - Strict for configuring UcsmBootOrderRule token.
	UcsmBootOrderRule *string `json:"UcsmBootOrderRule,omitempty"`
	// BIOS Token for setting Uncore Frequency Scaling configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UfsDisable *string `json:"UfsDisable,omitempty"`
	// BIOS Token for setting UMA Based Clustering configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Disable (All2All)` - Value - Disable (All2All) for configuring UmaBasedClustering token. * `Hemisphere (2-clusters)` - Value - Hemisphere (2-clusters) for configuring UmaBasedClustering token.
	UmaBasedClustering *string `json:"UmaBasedClustering,omitempty"`
	// BIOS Token for setting Port 60/64 Emulation configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbEmul6064 *string `json:"UsbEmul6064,omitempty"`
	// BIOS Token for setting USB Port Front configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortFront *string `json:"UsbPortFront,omitempty"`
	// BIOS Token for setting USB Port Internal configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortInternal *string `json:"UsbPortInternal,omitempty"`
	// BIOS Token for setting USB Port KVM configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortKvm *string `json:"UsbPortKvm,omitempty"`
	// BIOS Token for setting USB Port Rear configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortRear *string `json:"UsbPortRear,omitempty"`
	// BIOS Token for setting USB Port SD Card configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortSdCard *string `json:"UsbPortSdCard,omitempty"`
	// BIOS Token for setting USB Port VMedia configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbPortVmedia *string `json:"UsbPortVmedia,omitempty"`
	// BIOS Token for setting XHCI Legacy Support configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	UsbXhciSupport *string `json:"UsbXhciSupport,omitempty"`
	// BIOS Token for setting VGA Priority configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Offboard` - Value - Offboard for configuring VgaPriority token. * `Onboard` - Value - Onboard for configuring VgaPriority token. * `Onboard VGA Disabled` - Value - Onboard VGA Disabled for configuring VgaPriority token.
	VgaPriority *string `json:"VgaPriority,omitempty"`
	// BIOS Token for setting VMD Enablement configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `enabled` - Enables the BIOS setting. * `disabled` - Disables the BIOS setting.
	VmdEnable *string `json:"VmdEnable,omitempty"`
	// BIOS Token for setting Volatile Memory Mode configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `1LM` - Value - 1LM for configuring VolMemoryMode token. * `2LM` - Value - 2LM for configuring VolMemoryMode token.
	VolMemoryMode *string `json:"VolMemoryMode,omitempty"`
	// BIOS Token for setting Workload Configuration configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Balanced` - Value - Balanced for configuring WorkLoadConfig token. * `I/O Sensitive` - Value - I/O Sensitive for configuring WorkLoadConfig token. * `NUMA` - Value - NUMA for configuring WorkLoadConfig token. * `UMA` - Value - UMA for configuring WorkLoadConfig token.
	WorkLoadConfig *string `json:"WorkLoadConfig,omitempty"`
	// BIOS Token for setting XPT Prefetch configuration. * `platform-default` - Default value used by the platform for the BIOS setting. * `Auto` - Value - Auto for configuring XptPrefetch token. * `disabled` - Value - disabled for configuring XptPrefetch token. * `enabled` - Value - enabled for configuring XptPrefetch token.
	XptPrefetch  *string                               `json:"XptPrefetch,omitempty"`
	Organization *OrganizationOrganizationRelationship `json:"Organization,omitempty"`
	// An array of relationships to policyAbstractConfigProfile resources.
	Profiles             []PolicyAbstractConfigProfileRelationship `json:"Profiles,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BiosPolicyAllOf BiosPolicyAllOf

// NewBiosPolicyAllOf instantiates a new BiosPolicyAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBiosPolicyAllOf(classId string, objectType string) *BiosPolicyAllOf {
	this := BiosPolicyAllOf{}
	this.ClassId = classId
	this.ObjectType = objectType
	var acsControlGpu1state string = "platform-default"
	this.AcsControlGpu1state = &acsControlGpu1state
	var acsControlGpu2state string = "platform-default"
	this.AcsControlGpu2state = &acsControlGpu2state
	var acsControlGpu3state string = "platform-default"
	this.AcsControlGpu3state = &acsControlGpu3state
	var acsControlGpu4state string = "platform-default"
	this.AcsControlGpu4state = &acsControlGpu4state
	var acsControlGpu5state string = "platform-default"
	this.AcsControlGpu5state = &acsControlGpu5state
	var acsControlGpu6state string = "platform-default"
	this.AcsControlGpu6state = &acsControlGpu6state
	var acsControlGpu7state string = "platform-default"
	this.AcsControlGpu7state = &acsControlGpu7state
	var acsControlGpu8state string = "platform-default"
	this.AcsControlGpu8state = &acsControlGpu8state
	var acsControlSlot11state string = "platform-default"
	this.AcsControlSlot11state = &acsControlSlot11state
	var acsControlSlot12state string = "platform-default"
	this.AcsControlSlot12state = &acsControlSlot12state
	var acsControlSlot13state string = "platform-default"
	this.AcsControlSlot13state = &acsControlSlot13state
	var acsControlSlot14state string = "platform-default"
	this.AcsControlSlot14state = &acsControlSlot14state
	var adjacentCacheLinePrefetch string = "platform-default"
	this.AdjacentCacheLinePrefetch = &adjacentCacheLinePrefetch
	var advancedMemTest string = "platform-default"
	this.AdvancedMemTest = &advancedMemTest
	var allUsbDevices string = "platform-default"
	this.AllUsbDevices = &allUsbDevices
	var altitude string = "platform-default"
	this.Altitude = &altitude
	var aspmSupport string = "platform-default"
	this.AspmSupport = &aspmSupport
	var assertNmiOnPerr string = "platform-default"
	this.AssertNmiOnPerr = &assertNmiOnPerr
	var assertNmiOnSerr string = "platform-default"
	this.AssertNmiOnSerr = &assertNmiOnSerr
	var autoCcState string = "platform-default"
	this.AutoCcState = &autoCcState
	var autonumousCstateEnable string = "platform-default"
	this.AutonumousCstateEnable = &autonumousCstateEnable
	var baudRate string = "platform-default"
	this.BaudRate = &baudRate
	var bmeDmaMitigation string = "platform-default"
	this.BmeDmaMitigation = &bmeDmaMitigation
	var bootOptionNumRetry string = "platform-default"
	this.BootOptionNumRetry = &bootOptionNumRetry
	var bootOptionReCoolDown string = "platform-default"
	this.BootOptionReCoolDown = &bootOptionReCoolDown
	var bootOptionRetry string = "platform-default"
	this.BootOptionRetry = &bootOptionRetry
	var bootPerformanceMode string = "platform-default"
	this.BootPerformanceMode = &bootPerformanceMode
	var burstAndPostponedRefresh string = "platform-default"
	this.BurstAndPostponedRefresh = &burstAndPostponedRefresh
	var cbsCmnApbdis string = "platform-default"
	this.CbsCmnApbdis = &cbsCmnApbdis
	var cbsCmnCpuCpb string = "platform-default"
	this.CbsCmnCpuCpb = &cbsCmnCpuCpb
	var cbsCmnCpuGenDowncoreCtrl string = "platform-default"
	this.CbsCmnCpuGenDowncoreCtrl = &cbsCmnCpuGenDowncoreCtrl
	var cbsCmnCpuGlobalCstateCtrl string = "platform-default"
	this.CbsCmnCpuGlobalCstateCtrl = &cbsCmnCpuGlobalCstateCtrl
	var cbsCmnCpuL1streamHwPrefetcher string = "platform-default"
	this.CbsCmnCpuL1streamHwPrefetcher = &cbsCmnCpuL1streamHwPrefetcher
	var cbsCmnCpuL2streamHwPrefetcher string = "platform-default"
	this.CbsCmnCpuL2streamHwPrefetcher = &cbsCmnCpuL2streamHwPrefetcher
	var cbsCmnCpuSmee string = "platform-default"
	this.CbsCmnCpuSmee = &cbsCmnCpuSmee
	var cbsCmnCpuStreamingStoresCtrl string = "platform-default"
	this.CbsCmnCpuStreamingStoresCtrl = &cbsCmnCpuStreamingStoresCtrl
	var cbsCmnDeterminismSlider string = "platform-default"
	this.CbsCmnDeterminismSlider = &cbsCmnDeterminismSlider
	var cbsCmnEfficiencyModeEn string = "platform-default"
	this.CbsCmnEfficiencyModeEn = &cbsCmnEfficiencyModeEn
	var cbsCmnFixedSocPstate string = "platform-default"
	this.CbsCmnFixedSocPstate = &cbsCmnFixedSocPstate
	var cbsCmnGnbNbIommu string = "platform-default"
	this.CbsCmnGnbNbIommu = &cbsCmnGnbNbIommu
	var cbsCmnGnbSmuDfCstates string = "platform-default"
	this.CbsCmnGnbSmuDfCstates = &cbsCmnGnbSmuDfCstates
	var cbsCmnGnbSmucppc string = "platform-default"
	this.CbsCmnGnbSmucppc = &cbsCmnGnbSmucppc
	var cbsCmnMemCtrlBankGroupSwapDdr4 string = "platform-default"
	this.CbsCmnMemCtrlBankGroupSwapDdr4 = &cbsCmnMemCtrlBankGroupSwapDdr4
	var cbsCmnMemMapBankInterleaveDdr4 string = "platform-default"
	this.CbsCmnMemMapBankInterleaveDdr4 = &cbsCmnMemMapBankInterleaveDdr4
	var cbsCmncTdpCtl string = "platform-default"
	this.CbsCmncTdpCtl = &cbsCmncTdpCtl
	var cbsCpuCcdCtrlSsp string = "platform-default"
	this.CbsCpuCcdCtrlSsp = &cbsCpuCcdCtrlSsp
	var cbsCpuCoreCtrl string = "platform-default"
	this.CbsCpuCoreCtrl = &cbsCpuCoreCtrl
	var cbsCpuSmtCtrl string = "platform-default"
	this.CbsCpuSmtCtrl = &cbsCpuSmtCtrl
	var cbsDbgCpuSnpMemCover string = "platform-default"
	this.CbsDbgCpuSnpMemCover = &cbsDbgCpuSnpMemCover
	var cbsDbgCpuSnpMemSizeCover string = "platform-default"
	this.CbsDbgCpuSnpMemSizeCover = &cbsDbgCpuSnpMemSizeCover
	var cbsDfCmnAcpiSratL3numa string = "platform-default"
	this.CbsDfCmnAcpiSratL3numa = &cbsDfCmnAcpiSratL3numa
	var cbsDfCmnDramNps string = "platform-default"
	this.CbsDfCmnDramNps = &cbsDfCmnDramNps
	var cbsDfCmnMemIntlv string = "platform-default"
	this.CbsDfCmnMemIntlv = &cbsDfCmnMemIntlv
	var cbsDfCmnMemIntlvSize string = "platform-default"
	this.CbsDfCmnMemIntlvSize = &cbsDfCmnMemIntlvSize
	var cbsSevSnpSupport string = "platform-default"
	this.CbsSevSnpSupport = &cbsSevSnpSupport
	var cdnEnable string = "platform-default"
	this.CdnEnable = &cdnEnable
	var cdnSupport string = "platform-default"
	this.CdnSupport = &cdnSupport
	var channelInterLeave string = "platform-default"
	this.ChannelInterLeave = &channelInterLeave
	var ciscoAdaptiveMemTraining string = "platform-default"
	this.CiscoAdaptiveMemTraining = &ciscoAdaptiveMemTraining
	var ciscoDebugLevel string = "platform-default"
	this.CiscoDebugLevel = &ciscoDebugLevel
	var ciscoOpromLaunchOptimization string = "platform-default"
	this.CiscoOpromLaunchOptimization = &ciscoOpromLaunchOptimization
	var ciscoXgmiMaxSpeed string = "platform-default"
	this.CiscoXgmiMaxSpeed = &ciscoXgmiMaxSpeed
	var ckeLowPolicy string = "platform-default"
	this.CkeLowPolicy = &ckeLowPolicy
	var closedLoopThermThrotl string = "platform-default"
	this.ClosedLoopThermThrotl = &closedLoopThermThrotl
	var cmciEnable string = "platform-default"
	this.CmciEnable = &cmciEnable
	var configTdp string = "platform-default"
	this.ConfigTdp = &configTdp
	var configTdpLevel string = "platform-default"
	this.ConfigTdpLevel = &configTdpLevel
	var consoleRedirection string = "platform-default"
	this.ConsoleRedirection = &consoleRedirection
	var coreMultiProcessing string = "platform-default"
	this.CoreMultiProcessing = &coreMultiProcessing
	var cpuEnergyPerformance string = "platform-default"
	this.CpuEnergyPerformance = &cpuEnergyPerformance
	var cpuFrequencyFloor string = "platform-default"
	this.CpuFrequencyFloor = &cpuFrequencyFloor
	var cpuPerformance string = "platform-default"
	this.CpuPerformance = &cpuPerformance
	var cpuPowerManagement string = "platform-default"
	this.CpuPowerManagement = &cpuPowerManagement
	var crQos string = "platform-default"
	this.CrQos = &crQos
	var crfastgoConfig string = "platform-default"
	this.CrfastgoConfig = &crfastgoConfig
	var dcpmmFirmwareDowngrade string = "platform-default"
	this.DcpmmFirmwareDowngrade = &dcpmmFirmwareDowngrade
	var demandScrub string = "platform-default"
	this.DemandScrub = &demandScrub
	var directCacheAccess string = "platform-default"
	this.DirectCacheAccess = &directCacheAccess
	var dramClockThrottling string = "platform-default"
	this.DramClockThrottling = &dramClockThrottling
	var dramRefreshRate string = "platform-default"
	this.DramRefreshRate = &dramRefreshRate
	var dramSwThermalThrottling string = "platform-default"
	this.DramSwThermalThrottling = &dramSwThermalThrottling
	var eadrSupport string = "platform-default"
	this.EadrSupport = &eadrSupport
	var edpcEn string = "platform-default"
	this.EdpcEn = &edpcEn
	var enableClockSpreadSpec string = "platform-default"
	this.EnableClockSpreadSpec = &enableClockSpreadSpec
	var enableMktme string = "platform-default"
	this.EnableMktme = &enableMktme
	var enableSgx string = "platform-default"
	this.EnableSgx = &enableSgx
	var enableTme string = "platform-default"
	this.EnableTme = &enableTme
	var energyEfficientTurbo string = "platform-default"
	this.EnergyEfficientTurbo = &energyEfficientTurbo
	var engPerfTuning string = "platform-default"
	this.EngPerfTuning = &engPerfTuning
	var enhancedIntelSpeedStepTech string = "platform-default"
	this.EnhancedIntelSpeedStepTech = &enhancedIntelSpeedStepTech
	var epochUpdate string = "platform-default"
	this.EpochUpdate = &epochUpdate
	var eppEnable string = "platform-default"
	this.EppEnable = &eppEnable
	var eppProfile string = "platform-default"
	this.EppProfile = &eppProfile
	var executeDisableBit string = "platform-default"
	this.ExecuteDisableBit = &executeDisableBit
	var extendedApic string = "platform-default"
	this.ExtendedApic = &extendedApic
	var flowControl string = "platform-default"
	this.FlowControl = &flowControl
	var frb2enable string = "platform-default"
	this.Frb2enable = &frb2enable
	var hardwarePrefetch string = "platform-default"
	this.HardwarePrefetch = &hardwarePrefetch
	var hwpmEnable string = "platform-default"
	this.HwpmEnable = &hwpmEnable
	var imcInterleave string = "platform-default"
	this.ImcInterleave = &imcInterleave
	var intelDynamicSpeedSelect string = "platform-default"
	this.IntelDynamicSpeedSelect = &intelDynamicSpeedSelect
	var intelHyperThreadingTech string = "platform-default"
	this.IntelHyperThreadingTech = &intelHyperThreadingTech
	var intelSpeedSelect string = "platform-default"
	this.IntelSpeedSelect = &intelSpeedSelect
	var intelTurboBoostTech string = "platform-default"
	this.IntelTurboBoostTech = &intelTurboBoostTech
	var intelVirtualizationTechnology string = "platform-default"
	this.IntelVirtualizationTechnology = &intelVirtualizationTechnology
	var intelVtForDirectedIo string = "platform-default"
	this.IntelVtForDirectedIo = &intelVtForDirectedIo
	var intelVtdCoherencySupport string = "platform-default"
	this.IntelVtdCoherencySupport = &intelVtdCoherencySupport
	var intelVtdInterruptRemapping string = "platform-default"
	this.IntelVtdInterruptRemapping = &intelVtdInterruptRemapping
	var intelVtdPassThroughDmaSupport string = "platform-default"
	this.IntelVtdPassThroughDmaSupport = &intelVtdPassThroughDmaSupport
	var intelVtdatsSupport string = "platform-default"
	this.IntelVtdatsSupport = &intelVtdatsSupport
	var iohErrorEnable string = "platform-default"
	this.IohErrorEnable = &iohErrorEnable
	var iohResource string = "platform-default"
	this.IohResource = &iohResource
	var ipPrefetch string = "platform-default"
	this.IpPrefetch = &ipPrefetch
	var ipv4http string = "platform-default"
	this.Ipv4http = &ipv4http
	var ipv4pxe string = "platform-default"
	this.Ipv4pxe = &ipv4pxe
	var ipv6http string = "platform-default"
	this.Ipv6http = &ipv6http
	var ipv6pxe string = "platform-default"
	this.Ipv6pxe = &ipv6pxe
	var ktiPrefetch string = "platform-default"
	this.KtiPrefetch = &ktiPrefetch
	var legacyOsRedirection string = "platform-default"
	this.LegacyOsRedirection = &legacyOsRedirection
	var legacyUsbSupport string = "platform-default"
	this.LegacyUsbSupport = &legacyUsbSupport
	var llcPrefetch string = "platform-default"
	this.LlcPrefetch = &llcPrefetch
	var lomPort0state string = "platform-default"
	this.LomPort0state = &lomPort0state
	var lomPort1state string = "platform-default"
	this.LomPort1state = &lomPort1state
	var lomPort2state string = "platform-default"
	this.LomPort2state = &lomPort2state
	var lomPort3state string = "platform-default"
	this.LomPort3state = &lomPort3state
	var lomPortsAllState string = "platform-default"
	this.LomPortsAllState = &lomPortsAllState
	var lvDdrMode string = "platform-default"
	this.LvDdrMode = &lvDdrMode
	var makeDeviceNonBootable string = "platform-default"
	this.MakeDeviceNonBootable = &makeDeviceNonBootable
	var memoryBandwidthBoost string = "platform-default"
	this.MemoryBandwidthBoost = &memoryBandwidthBoost
	var memoryInterLeave string = "platform-default"
	this.MemoryInterLeave = &memoryInterLeave
	var memoryMappedIoAbove4gb string = "platform-default"
	this.MemoryMappedIoAbove4gb = &memoryMappedIoAbove4gb
	var memoryRefreshRate string = "platform-default"
	this.MemoryRefreshRate = &memoryRefreshRate
	var memorySizeLimit string = "platform-default"
	this.MemorySizeLimit = &memorySizeLimit
	var memoryThermalThrottling string = "platform-default"
	this.MemoryThermalThrottling = &memoryThermalThrottling
	var mirroringMode string = "platform-default"
	this.MirroringMode = &mirroringMode
	var mmcfgBase string = "platform-default"
	this.MmcfgBase = &mmcfgBase
	var networkStack string = "platform-default"
	this.NetworkStack = &networkStack
	var numaOptimized string = "platform-default"
	this.NumaOptimized = &numaOptimized
	var nvmdimmPerformConfig string = "platform-default"
	this.NvmdimmPerformConfig = &nvmdimmPerformConfig
	var onboard10gbitLom string = "platform-default"
	this.Onboard10gbitLom = &onboard10gbitLom
	var onboardGbitLom string = "platform-default"
	this.OnboardGbitLom = &onboardGbitLom
	var onboardScuStorageSupport string = "platform-default"
	this.OnboardScuStorageSupport = &onboardScuStorageSupport
	var onboardScuStorageSwStack string = "platform-default"
	this.OnboardScuStorageSwStack = &onboardScuStorageSwStack
	var operationMode string = "platform-default"
	this.OperationMode = &operationMode
	var osBootWatchdogTimer string = "platform-default"
	this.OsBootWatchdogTimer = &osBootWatchdogTimer
	var osBootWatchdogTimerPolicy string = "platform-default"
	this.OsBootWatchdogTimerPolicy = &osBootWatchdogTimerPolicy
	var osBootWatchdogTimerTimeout string = "platform-default"
	this.OsBootWatchdogTimerTimeout = &osBootWatchdogTimerTimeout
	var outOfBandMgmtPort string = "platform-default"
	this.OutOfBandMgmtPort = &outOfBandMgmtPort
	var packageCstateLimit string = "platform-default"
	this.PackageCstateLimit = &packageCstateLimit
	var panicHighWatermark string = "platform-default"
	this.PanicHighWatermark = &panicHighWatermark
	var partialCacheLineSparing string = "platform-default"
	this.PartialCacheLineSparing = &partialCacheLineSparing
	var partialMirrorModeConfig string = "platform-default"
	this.PartialMirrorModeConfig = &partialMirrorModeConfig
	var partialMirrorPercent string = "platform-default"
	this.PartialMirrorPercent = &partialMirrorPercent
	var partialMirrorValue1 string = "platform-default"
	this.PartialMirrorValue1 = &partialMirrorValue1
	var partialMirrorValue2 string = "platform-default"
	this.PartialMirrorValue2 = &partialMirrorValue2
	var partialMirrorValue3 string = "platform-default"
	this.PartialMirrorValue3 = &partialMirrorValue3
	var partialMirrorValue4 string = "platform-default"
	this.PartialMirrorValue4 = &partialMirrorValue4
	var patrolScrub string = "platform-default"
	this.PatrolScrub = &patrolScrub
	var patrolScrubDuration string = "platform-default"
	this.PatrolScrubDuration = &patrolScrubDuration
	var pcIeRasSupport string = "platform-default"
	this.PcIeRasSupport = &pcIeRasSupport
	var pcIeSsdHotPlugSupport string = "platform-default"
	this.PcIeSsdHotPlugSupport = &pcIeSsdHotPlugSupport
	var pchUsb30mode string = "platform-default"
	this.PchUsb30mode = &pchUsb30mode
	var pciOptionRoMs string = "platform-default"
	this.PciOptionRoMs = &pciOptionRoMs
	var pciRomClp string = "platform-default"
	this.PciRomClp = &pciRomClp
	var pcieAriSupport string = "platform-default"
	this.PcieAriSupport = &pcieAriSupport
	var pciePllSsc string = "platform-default"
	this.PciePllSsc = &pciePllSsc
	var pcieSlotMraid1linkSpeed string = "platform-default"
	this.PcieSlotMraid1linkSpeed = &pcieSlotMraid1linkSpeed
	var pcieSlotMraid1optionRom string = "platform-default"
	this.PcieSlotMraid1optionRom = &pcieSlotMraid1optionRom
	var pcieSlotMraid2linkSpeed string = "platform-default"
	this.PcieSlotMraid2linkSpeed = &pcieSlotMraid2linkSpeed
	var pcieSlotMraid2optionRom string = "platform-default"
	this.PcieSlotMraid2optionRom = &pcieSlotMraid2optionRom
	var pcieSlotMstorraidLinkSpeed string = "platform-default"
	this.PcieSlotMstorraidLinkSpeed = &pcieSlotMstorraidLinkSpeed
	var pcieSlotMstorraidOptionRom string = "platform-default"
	this.PcieSlotMstorraidOptionRom = &pcieSlotMstorraidOptionRom
	var pcieSlotNvme1linkSpeed string = "platform-default"
	this.PcieSlotNvme1linkSpeed = &pcieSlotNvme1linkSpeed
	var pcieSlotNvme1optionRom string = "platform-default"
	this.PcieSlotNvme1optionRom = &pcieSlotNvme1optionRom
	var pcieSlotNvme2linkSpeed string = "platform-default"
	this.PcieSlotNvme2linkSpeed = &pcieSlotNvme2linkSpeed
	var pcieSlotNvme2optionRom string = "platform-default"
	this.PcieSlotNvme2optionRom = &pcieSlotNvme2optionRom
	var pcieSlotNvme3linkSpeed string = "platform-default"
	this.PcieSlotNvme3linkSpeed = &pcieSlotNvme3linkSpeed
	var pcieSlotNvme3optionRom string = "platform-default"
	this.PcieSlotNvme3optionRom = &pcieSlotNvme3optionRom
	var pcieSlotNvme4linkSpeed string = "platform-default"
	this.PcieSlotNvme4linkSpeed = &pcieSlotNvme4linkSpeed
	var pcieSlotNvme4optionRom string = "platform-default"
	this.PcieSlotNvme4optionRom = &pcieSlotNvme4optionRom
	var pcieSlotNvme5linkSpeed string = "platform-default"
	this.PcieSlotNvme5linkSpeed = &pcieSlotNvme5linkSpeed
	var pcieSlotNvme5optionRom string = "platform-default"
	this.PcieSlotNvme5optionRom = &pcieSlotNvme5optionRom
	var pcieSlotNvme6linkSpeed string = "platform-default"
	this.PcieSlotNvme6linkSpeed = &pcieSlotNvme6linkSpeed
	var pcieSlotNvme6optionRom string = "platform-default"
	this.PcieSlotNvme6optionRom = &pcieSlotNvme6optionRom
	var popSupport string = "platform-default"
	this.PopSupport = &popSupport
	var postErrorPause string = "platform-default"
	this.PostErrorPause = &postErrorPause
	var postPackageRepair string = "platform-default"
	this.PostPackageRepair = &postPackageRepair
	var processorC1e string = "platform-default"
	this.ProcessorC1e = &processorC1e
	var processorC3report string = "platform-default"
	this.ProcessorC3report = &processorC3report
	var processorC6report string = "platform-default"
	this.ProcessorC6report = &processorC6report
	var processorCstate string = "platform-default"
	this.ProcessorCstate = &processorCstate
	var psata string = "platform-default"
	this.Psata = &psata
	var pstateCoordType string = "platform-default"
	this.PstateCoordType = &pstateCoordType
	var puttyKeyPad string = "platform-default"
	this.PuttyKeyPad = &puttyKeyPad
	var pwrPerfTuning string = "platform-default"
	this.PwrPerfTuning = &pwrPerfTuning
	var qpiLinkFrequency string = "platform-default"
	this.QpiLinkFrequency = &qpiLinkFrequency
	var qpiLinkSpeed string = "platform-default"
	this.QpiLinkSpeed = &qpiLinkSpeed
	var qpiSnoopMode string = "platform-default"
	this.QpiSnoopMode = &qpiSnoopMode
	var rankInterLeave string = "platform-default"
	this.RankInterLeave = &rankInterLeave
	var redirectionAfterPost string = "platform-default"
	this.RedirectionAfterPost = &redirectionAfterPost
	var sataModeSelect string = "platform-default"
	this.SataModeSelect = &sataModeSelect
	var selectMemoryRasConfiguration string = "platform-default"
	this.SelectMemoryRasConfiguration = &selectMemoryRasConfiguration
	var selectPprType string = "platform-default"
	this.SelectPprType = &selectPprType
	var serialPortAenable string = "platform-default"
	this.SerialPortAenable = &serialPortAenable
	var sev string = "platform-default"
	this.Sev = &sev
	var sgxAutoRegistrationAgent string = "platform-default"
	this.SgxAutoRegistrationAgent = &sgxAutoRegistrationAgent
	var sgxEpoch0 string = "platform-default"
	this.SgxEpoch0 = &sgxEpoch0
	var sgxEpoch1 string = "platform-default"
	this.SgxEpoch1 = &sgxEpoch1
	var sgxFactoryReset string = "platform-default"
	this.SgxFactoryReset = &sgxFactoryReset
	var sgxLePubKeyHash0 string = "platform-default"
	this.SgxLePubKeyHash0 = &sgxLePubKeyHash0
	var sgxLePubKeyHash1 string = "platform-default"
	this.SgxLePubKeyHash1 = &sgxLePubKeyHash1
	var sgxLePubKeyHash2 string = "platform-default"
	this.SgxLePubKeyHash2 = &sgxLePubKeyHash2
	var sgxLePubKeyHash3 string = "platform-default"
	this.SgxLePubKeyHash3 = &sgxLePubKeyHash3
	var sgxLeWr string = "platform-default"
	this.SgxLeWr = &sgxLeWr
	var sgxPackageInfoInBandAccess string = "platform-default"
	this.SgxPackageInfoInBandAccess = &sgxPackageInfoInBandAccess
	var sgxQos string = "platform-default"
	this.SgxQos = &sgxQos
	var singlePctlEnable string = "platform-default"
	this.SinglePctlEnable = &singlePctlEnable
	var slot10linkSpeed string = "platform-default"
	this.Slot10linkSpeed = &slot10linkSpeed
	var slot10state string = "platform-default"
	this.Slot10state = &slot10state
	var slot11linkSpeed string = "platform-default"
	this.Slot11linkSpeed = &slot11linkSpeed
	var slot11state string = "platform-default"
	this.Slot11state = &slot11state
	var slot12linkSpeed string = "platform-default"
	this.Slot12linkSpeed = &slot12linkSpeed
	var slot12state string = "platform-default"
	this.Slot12state = &slot12state
	var slot13state string = "platform-default"
	this.Slot13state = &slot13state
	var slot14state string = "platform-default"
	this.Slot14state = &slot14state
	var slot1linkSpeed string = "platform-default"
	this.Slot1linkSpeed = &slot1linkSpeed
	var slot1state string = "platform-default"
	this.Slot1state = &slot1state
	var slot2linkSpeed string = "platform-default"
	this.Slot2linkSpeed = &slot2linkSpeed
	var slot2state string = "platform-default"
	this.Slot2state = &slot2state
	var slot3linkSpeed string = "platform-default"
	this.Slot3linkSpeed = &slot3linkSpeed
	var slot3state string = "platform-default"
	this.Slot3state = &slot3state
	var slot4linkSpeed string = "platform-default"
	this.Slot4linkSpeed = &slot4linkSpeed
	var slot4state string = "platform-default"
	this.Slot4state = &slot4state
	var slot5linkSpeed string = "platform-default"
	this.Slot5linkSpeed = &slot5linkSpeed
	var slot5state string = "platform-default"
	this.Slot5state = &slot5state
	var slot6linkSpeed string = "platform-default"
	this.Slot6linkSpeed = &slot6linkSpeed
	var slot6state string = "platform-default"
	this.Slot6state = &slot6state
	var slot7linkSpeed string = "platform-default"
	this.Slot7linkSpeed = &slot7linkSpeed
	var slot7state string = "platform-default"
	this.Slot7state = &slot7state
	var slot8linkSpeed string = "platform-default"
	this.Slot8linkSpeed = &slot8linkSpeed
	var slot8state string = "platform-default"
	this.Slot8state = &slot8state
	var slot9linkSpeed string = "platform-default"
	this.Slot9linkSpeed = &slot9linkSpeed
	var slot9state string = "platform-default"
	this.Slot9state = &slot9state
	var slotFlomLinkSpeed string = "platform-default"
	this.SlotFlomLinkSpeed = &slotFlomLinkSpeed
	var slotFrontNvme10linkSpeed string = "platform-default"
	this.SlotFrontNvme10linkSpeed = &slotFrontNvme10linkSpeed
	var slotFrontNvme10optionRom string = "platform-default"
	this.SlotFrontNvme10optionRom = &slotFrontNvme10optionRom
	var slotFrontNvme11linkSpeed string = "platform-default"
	this.SlotFrontNvme11linkSpeed = &slotFrontNvme11linkSpeed
	var slotFrontNvme11optionRom string = "platform-default"
	this.SlotFrontNvme11optionRom = &slotFrontNvme11optionRom
	var slotFrontNvme12linkSpeed string = "platform-default"
	this.SlotFrontNvme12linkSpeed = &slotFrontNvme12linkSpeed
	var slotFrontNvme12optionRom string = "platform-default"
	this.SlotFrontNvme12optionRom = &slotFrontNvme12optionRom
	var slotFrontNvme13optionRom string = "platform-default"
	this.SlotFrontNvme13optionRom = &slotFrontNvme13optionRom
	var slotFrontNvme14optionRom string = "platform-default"
	this.SlotFrontNvme14optionRom = &slotFrontNvme14optionRom
	var slotFrontNvme15optionRom string = "platform-default"
	this.SlotFrontNvme15optionRom = &slotFrontNvme15optionRom
	var slotFrontNvme16optionRom string = "platform-default"
	this.SlotFrontNvme16optionRom = &slotFrontNvme16optionRom
	var slotFrontNvme17optionRom string = "platform-default"
	this.SlotFrontNvme17optionRom = &slotFrontNvme17optionRom
	var slotFrontNvme18optionRom string = "platform-default"
	this.SlotFrontNvme18optionRom = &slotFrontNvme18optionRom
	var slotFrontNvme19optionRom string = "platform-default"
	this.SlotFrontNvme19optionRom = &slotFrontNvme19optionRom
	var slotFrontNvme1linkSpeed string = "platform-default"
	this.SlotFrontNvme1linkSpeed = &slotFrontNvme1linkSpeed
	var slotFrontNvme1optionRom string = "platform-default"
	this.SlotFrontNvme1optionRom = &slotFrontNvme1optionRom
	var slotFrontNvme20optionRom string = "platform-default"
	this.SlotFrontNvme20optionRom = &slotFrontNvme20optionRom
	var slotFrontNvme21optionRom string = "platform-default"
	this.SlotFrontNvme21optionRom = &slotFrontNvme21optionRom
	var slotFrontNvme22optionRom string = "platform-default"
	this.SlotFrontNvme22optionRom = &slotFrontNvme22optionRom
	var slotFrontNvme23optionRom string = "platform-default"
	this.SlotFrontNvme23optionRom = &slotFrontNvme23optionRom
	var slotFrontNvme24optionRom string = "platform-default"
	this.SlotFrontNvme24optionRom = &slotFrontNvme24optionRom
	var slotFrontNvme2linkSpeed string = "platform-default"
	this.SlotFrontNvme2linkSpeed = &slotFrontNvme2linkSpeed
	var slotFrontNvme2optionRom string = "platform-default"
	this.SlotFrontNvme2optionRom = &slotFrontNvme2optionRom
	var slotFrontNvme3linkSpeed string = "platform-default"
	this.SlotFrontNvme3linkSpeed = &slotFrontNvme3linkSpeed
	var slotFrontNvme3optionRom string = "platform-default"
	this.SlotFrontNvme3optionRom = &slotFrontNvme3optionRom
	var slotFrontNvme4linkSpeed string = "platform-default"
	this.SlotFrontNvme4linkSpeed = &slotFrontNvme4linkSpeed
	var slotFrontNvme4optionRom string = "platform-default"
	this.SlotFrontNvme4optionRom = &slotFrontNvme4optionRom
	var slotFrontNvme5linkSpeed string = "platform-default"
	this.SlotFrontNvme5linkSpeed = &slotFrontNvme5linkSpeed
	var slotFrontNvme5optionRom string = "platform-default"
	this.SlotFrontNvme5optionRom = &slotFrontNvme5optionRom
	var slotFrontNvme6linkSpeed string = "platform-default"
	this.SlotFrontNvme6linkSpeed = &slotFrontNvme6linkSpeed
	var slotFrontNvme6optionRom string = "platform-default"
	this.SlotFrontNvme6optionRom = &slotFrontNvme6optionRom
	var slotFrontNvme7linkSpeed string = "platform-default"
	this.SlotFrontNvme7linkSpeed = &slotFrontNvme7linkSpeed
	var slotFrontNvme7optionRom string = "platform-default"
	this.SlotFrontNvme7optionRom = &slotFrontNvme7optionRom
	var slotFrontNvme8linkSpeed string = "platform-default"
	this.SlotFrontNvme8linkSpeed = &slotFrontNvme8linkSpeed
	var slotFrontNvme8optionRom string = "platform-default"
	this.SlotFrontNvme8optionRom = &slotFrontNvme8optionRom
	var slotFrontNvme9linkSpeed string = "platform-default"
	this.SlotFrontNvme9linkSpeed = &slotFrontNvme9linkSpeed
	var slotFrontNvme9optionRom string = "platform-default"
	this.SlotFrontNvme9optionRom = &slotFrontNvme9optionRom
	var slotFrontSlot5linkSpeed string = "platform-default"
	this.SlotFrontSlot5linkSpeed = &slotFrontSlot5linkSpeed
	var slotFrontSlot6linkSpeed string = "platform-default"
	this.SlotFrontSlot6linkSpeed = &slotFrontSlot6linkSpeed
	var slotGpu1state string = "platform-default"
	this.SlotGpu1state = &slotGpu1state
	var slotGpu2state string = "platform-default"
	this.SlotGpu2state = &slotGpu2state
	var slotGpu3state string = "platform-default"
	this.SlotGpu3state = &slotGpu3state
	var slotGpu4state string = "platform-default"
	this.SlotGpu4state = &slotGpu4state
	var slotGpu5state string = "platform-default"
	this.SlotGpu5state = &slotGpu5state
	var slotGpu6state string = "platform-default"
	this.SlotGpu6state = &slotGpu6state
	var slotGpu7state string = "platform-default"
	this.SlotGpu7state = &slotGpu7state
	var slotGpu8state string = "platform-default"
	this.SlotGpu8state = &slotGpu8state
	var slotHbaLinkSpeed string = "platform-default"
	this.SlotHbaLinkSpeed = &slotHbaLinkSpeed
	var slotHbaState string = "platform-default"
	this.SlotHbaState = &slotHbaState
	var slotLom1link string = "platform-default"
	this.SlotLom1link = &slotLom1link
	var slotLom2link string = "platform-default"
	this.SlotLom2link = &slotLom2link
	var slotMezzState string = "platform-default"
	this.SlotMezzState = &slotMezzState
	var slotMlomLinkSpeed string = "platform-default"
	this.SlotMlomLinkSpeed = &slotMlomLinkSpeed
	var slotMlomState string = "platform-default"
	this.SlotMlomState = &slotMlomState
	var slotMraidLinkSpeed string = "platform-default"
	this.SlotMraidLinkSpeed = &slotMraidLinkSpeed
	var slotMraidState string = "platform-default"
	this.SlotMraidState = &slotMraidState
	var slotN10state string = "platform-default"
	this.SlotN10state = &slotN10state
	var slotN11state string = "platform-default"
	this.SlotN11state = &slotN11state
	var slotN12state string = "platform-default"
	this.SlotN12state = &slotN12state
	var slotN13state string = "platform-default"
	this.SlotN13state = &slotN13state
	var slotN14state string = "platform-default"
	this.SlotN14state = &slotN14state
	var slotN15state string = "platform-default"
	this.SlotN15state = &slotN15state
	var slotN16state string = "platform-default"
	this.SlotN16state = &slotN16state
	var slotN17state string = "platform-default"
	this.SlotN17state = &slotN17state
	var slotN18state string = "platform-default"
	this.SlotN18state = &slotN18state
	var slotN19state string = "platform-default"
	this.SlotN19state = &slotN19state
	var slotN1state string = "platform-default"
	this.SlotN1state = &slotN1state
	var slotN20state string = "platform-default"
	this.SlotN20state = &slotN20state
	var slotN21state string = "platform-default"
	this.SlotN21state = &slotN21state
	var slotN22state string = "platform-default"
	this.SlotN22state = &slotN22state
	var slotN23state string = "platform-default"
	this.SlotN23state = &slotN23state
	var slotN24state string = "platform-default"
	this.SlotN24state = &slotN24state
	var slotN2state string = "platform-default"
	this.SlotN2state = &slotN2state
	var slotN3state string = "platform-default"
	this.SlotN3state = &slotN3state
	var slotN4state string = "platform-default"
	this.SlotN4state = &slotN4state
	var slotN5state string = "platform-default"
	this.SlotN5state = &slotN5state
	var slotN6state string = "platform-default"
	this.SlotN6state = &slotN6state
	var slotN7state string = "platform-default"
	this.SlotN7state = &slotN7state
	var slotN8state string = "platform-default"
	this.SlotN8state = &slotN8state
	var slotN9state string = "platform-default"
	this.SlotN9state = &slotN9state
	var slotRaidLinkSpeed string = "platform-default"
	this.SlotRaidLinkSpeed = &slotRaidLinkSpeed
	var slotRaidState string = "platform-default"
	this.SlotRaidState = &slotRaidState
	var slotRearNvme1linkSpeed string = "platform-default"
	this.SlotRearNvme1linkSpeed = &slotRearNvme1linkSpeed
	var slotRearNvme1state string = "platform-default"
	this.SlotRearNvme1state = &slotRearNvme1state
	var slotRearNvme2linkSpeed string = "platform-default"
	this.SlotRearNvme2linkSpeed = &slotRearNvme2linkSpeed
	var slotRearNvme2state string = "platform-default"
	this.SlotRearNvme2state = &slotRearNvme2state
	var slotRearNvme3linkSpeed string = "platform-default"
	this.SlotRearNvme3linkSpeed = &slotRearNvme3linkSpeed
	var slotRearNvme3state string = "platform-default"
	this.SlotRearNvme3state = &slotRearNvme3state
	var slotRearNvme4linkSpeed string = "platform-default"
	this.SlotRearNvme4linkSpeed = &slotRearNvme4linkSpeed
	var slotRearNvme4state string = "platform-default"
	this.SlotRearNvme4state = &slotRearNvme4state
	var slotRearNvme5state string = "platform-default"
	this.SlotRearNvme5state = &slotRearNvme5state
	var slotRearNvme6state string = "platform-default"
	this.SlotRearNvme6state = &slotRearNvme6state
	var slotRearNvme7state string = "platform-default"
	this.SlotRearNvme7state = &slotRearNvme7state
	var slotRearNvme8state string = "platform-default"
	this.SlotRearNvme8state = &slotRearNvme8state
	var slotRiser1linkSpeed string = "platform-default"
	this.SlotRiser1linkSpeed = &slotRiser1linkSpeed
	var slotRiser1slot1linkSpeed string = "platform-default"
	this.SlotRiser1slot1linkSpeed = &slotRiser1slot1linkSpeed
	var slotRiser1slot2linkSpeed string = "platform-default"
	this.SlotRiser1slot2linkSpeed = &slotRiser1slot2linkSpeed
	var slotRiser1slot3linkSpeed string = "platform-default"
	this.SlotRiser1slot3linkSpeed = &slotRiser1slot3linkSpeed
	var slotRiser2linkSpeed string = "platform-default"
	this.SlotRiser2linkSpeed = &slotRiser2linkSpeed
	var slotRiser2slot4linkSpeed string = "platform-default"
	this.SlotRiser2slot4linkSpeed = &slotRiser2slot4linkSpeed
	var slotRiser2slot5linkSpeed string = "platform-default"
	this.SlotRiser2slot5linkSpeed = &slotRiser2slot5linkSpeed
	var slotRiser2slot6linkSpeed string = "platform-default"
	this.SlotRiser2slot6linkSpeed = &slotRiser2slot6linkSpeed
	var slotSasState string = "platform-default"
	this.SlotSasState = &slotSasState
	var slotSsdSlot1linkSpeed string = "platform-default"
	this.SlotSsdSlot1linkSpeed = &slotSsdSlot1linkSpeed
	var slotSsdSlot2linkSpeed string = "platform-default"
	this.SlotSsdSlot2linkSpeed = &slotSsdSlot2linkSpeed
	var smee string = "platform-default"
	this.Smee = &smee
	var smtMode string = "platform-default"
	this.SmtMode = &smtMode
	var snc string = "platform-default"
	this.Snc = &snc
	var snoopyModeFor2lm string = "platform-default"
	this.SnoopyModeFor2lm = &snoopyModeFor2lm
	var snoopyModeForAd string = "platform-default"
	this.SnoopyModeForAd = &snoopyModeForAd
	var sparingMode string = "platform-default"
	this.SparingMode = &sparingMode
	var srIov string = "platform-default"
	this.SrIov = &srIov
	var streamerPrefetch string = "platform-default"
	this.StreamerPrefetch = &streamerPrefetch
	var svmMode string = "platform-default"
	this.SvmMode = &svmMode
	var terminalType string = "platform-default"
	this.TerminalType = &terminalType
	var tpmControl string = "platform-default"
	this.TpmControl = &tpmControl
	var tpmPendingOperation string = "platform-default"
	this.TpmPendingOperation = &tpmPendingOperation
	var tpmSupport string = "platform-default"
	this.TpmSupport = &tpmSupport
	var tsme string = "platform-default"
	this.Tsme = &tsme
	var txtSupport string = "platform-default"
	this.TxtSupport = &txtSupport
	var ucsmBootOrderRule string = "platform-default"
	this.UcsmBootOrderRule = &ucsmBootOrderRule
	var ufsDisable string = "platform-default"
	this.UfsDisable = &ufsDisable
	var umaBasedClustering string = "platform-default"
	this.UmaBasedClustering = &umaBasedClustering
	var usbEmul6064 string = "platform-default"
	this.UsbEmul6064 = &usbEmul6064
	var usbPortFront string = "platform-default"
	this.UsbPortFront = &usbPortFront
	var usbPortInternal string = "platform-default"
	this.UsbPortInternal = &usbPortInternal
	var usbPortKvm string = "platform-default"
	this.UsbPortKvm = &usbPortKvm
	var usbPortRear string = "platform-default"
	this.UsbPortRear = &usbPortRear
	var usbPortSdCard string = "platform-default"
	this.UsbPortSdCard = &usbPortSdCard
	var usbPortVmedia string = "platform-default"
	this.UsbPortVmedia = &usbPortVmedia
	var usbXhciSupport string = "platform-default"
	this.UsbXhciSupport = &usbXhciSupport
	var vgaPriority string = "platform-default"
	this.VgaPriority = &vgaPriority
	var vmdEnable string = "platform-default"
	this.VmdEnable = &vmdEnable
	var volMemoryMode string = "platform-default"
	this.VolMemoryMode = &volMemoryMode
	var workLoadConfig string = "platform-default"
	this.WorkLoadConfig = &workLoadConfig
	var xptPrefetch string = "platform-default"
	this.XptPrefetch = &xptPrefetch
	return &this
}

// NewBiosPolicyAllOfWithDefaults instantiates a new BiosPolicyAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBiosPolicyAllOfWithDefaults() *BiosPolicyAllOf {
	this := BiosPolicyAllOf{}
	var classId string = "bios.Policy"
	this.ClassId = classId
	var objectType string = "bios.Policy"
	this.ObjectType = objectType
	var acsControlGpu1state string = "platform-default"
	this.AcsControlGpu1state = &acsControlGpu1state
	var acsControlGpu2state string = "platform-default"
	this.AcsControlGpu2state = &acsControlGpu2state
	var acsControlGpu3state string = "platform-default"
	this.AcsControlGpu3state = &acsControlGpu3state
	var acsControlGpu4state string = "platform-default"
	this.AcsControlGpu4state = &acsControlGpu4state
	var acsControlGpu5state string = "platform-default"
	this.AcsControlGpu5state = &acsControlGpu5state
	var acsControlGpu6state string = "platform-default"
	this.AcsControlGpu6state = &acsControlGpu6state
	var acsControlGpu7state string = "platform-default"
	this.AcsControlGpu7state = &acsControlGpu7state
	var acsControlGpu8state string = "platform-default"
	this.AcsControlGpu8state = &acsControlGpu8state
	var acsControlSlot11state string = "platform-default"
	this.AcsControlSlot11state = &acsControlSlot11state
	var acsControlSlot12state string = "platform-default"
	this.AcsControlSlot12state = &acsControlSlot12state
	var acsControlSlot13state string = "platform-default"
	this.AcsControlSlot13state = &acsControlSlot13state
	var acsControlSlot14state string = "platform-default"
	this.AcsControlSlot14state = &acsControlSlot14state
	var adjacentCacheLinePrefetch string = "platform-default"
	this.AdjacentCacheLinePrefetch = &adjacentCacheLinePrefetch
	var advancedMemTest string = "platform-default"
	this.AdvancedMemTest = &advancedMemTest
	var allUsbDevices string = "platform-default"
	this.AllUsbDevices = &allUsbDevices
	var altitude string = "platform-default"
	this.Altitude = &altitude
	var aspmSupport string = "platform-default"
	this.AspmSupport = &aspmSupport
	var assertNmiOnPerr string = "platform-default"
	this.AssertNmiOnPerr = &assertNmiOnPerr
	var assertNmiOnSerr string = "platform-default"
	this.AssertNmiOnSerr = &assertNmiOnSerr
	var autoCcState string = "platform-default"
	this.AutoCcState = &autoCcState
	var autonumousCstateEnable string = "platform-default"
	this.AutonumousCstateEnable = &autonumousCstateEnable
	var baudRate string = "platform-default"
	this.BaudRate = &baudRate
	var bmeDmaMitigation string = "platform-default"
	this.BmeDmaMitigation = &bmeDmaMitigation
	var bootOptionNumRetry string = "platform-default"
	this.BootOptionNumRetry = &bootOptionNumRetry
	var bootOptionReCoolDown string = "platform-default"
	this.BootOptionReCoolDown = &bootOptionReCoolDown
	var bootOptionRetry string = "platform-default"
	this.BootOptionRetry = &bootOptionRetry
	var bootPerformanceMode string = "platform-default"
	this.BootPerformanceMode = &bootPerformanceMode
	var burstAndPostponedRefresh string = "platform-default"
	this.BurstAndPostponedRefresh = &burstAndPostponedRefresh
	var cbsCmnApbdis string = "platform-default"
	this.CbsCmnApbdis = &cbsCmnApbdis
	var cbsCmnCpuCpb string = "platform-default"
	this.CbsCmnCpuCpb = &cbsCmnCpuCpb
	var cbsCmnCpuGenDowncoreCtrl string = "platform-default"
	this.CbsCmnCpuGenDowncoreCtrl = &cbsCmnCpuGenDowncoreCtrl
	var cbsCmnCpuGlobalCstateCtrl string = "platform-default"
	this.CbsCmnCpuGlobalCstateCtrl = &cbsCmnCpuGlobalCstateCtrl
	var cbsCmnCpuL1streamHwPrefetcher string = "platform-default"
	this.CbsCmnCpuL1streamHwPrefetcher = &cbsCmnCpuL1streamHwPrefetcher
	var cbsCmnCpuL2streamHwPrefetcher string = "platform-default"
	this.CbsCmnCpuL2streamHwPrefetcher = &cbsCmnCpuL2streamHwPrefetcher
	var cbsCmnCpuSmee string = "platform-default"
	this.CbsCmnCpuSmee = &cbsCmnCpuSmee
	var cbsCmnCpuStreamingStoresCtrl string = "platform-default"
	this.CbsCmnCpuStreamingStoresCtrl = &cbsCmnCpuStreamingStoresCtrl
	var cbsCmnDeterminismSlider string = "platform-default"
	this.CbsCmnDeterminismSlider = &cbsCmnDeterminismSlider
	var cbsCmnEfficiencyModeEn string = "platform-default"
	this.CbsCmnEfficiencyModeEn = &cbsCmnEfficiencyModeEn
	var cbsCmnFixedSocPstate string = "platform-default"
	this.CbsCmnFixedSocPstate = &cbsCmnFixedSocPstate
	var cbsCmnGnbNbIommu string = "platform-default"
	this.CbsCmnGnbNbIommu = &cbsCmnGnbNbIommu
	var cbsCmnGnbSmuDfCstates string = "platform-default"
	this.CbsCmnGnbSmuDfCstates = &cbsCmnGnbSmuDfCstates
	var cbsCmnGnbSmucppc string = "platform-default"
	this.CbsCmnGnbSmucppc = &cbsCmnGnbSmucppc
	var cbsCmnMemCtrlBankGroupSwapDdr4 string = "platform-default"
	this.CbsCmnMemCtrlBankGroupSwapDdr4 = &cbsCmnMemCtrlBankGroupSwapDdr4
	var cbsCmnMemMapBankInterleaveDdr4 string = "platform-default"
	this.CbsCmnMemMapBankInterleaveDdr4 = &cbsCmnMemMapBankInterleaveDdr4
	var cbsCmncTdpCtl string = "platform-default"
	this.CbsCmncTdpCtl = &cbsCmncTdpCtl
	var cbsCpuCcdCtrlSsp string = "platform-default"
	this.CbsCpuCcdCtrlSsp = &cbsCpuCcdCtrlSsp
	var cbsCpuCoreCtrl string = "platform-default"
	this.CbsCpuCoreCtrl = &cbsCpuCoreCtrl
	var cbsCpuSmtCtrl string = "platform-default"
	this.CbsCpuSmtCtrl = &cbsCpuSmtCtrl
	var cbsDbgCpuSnpMemCover string = "platform-default"
	this.CbsDbgCpuSnpMemCover = &cbsDbgCpuSnpMemCover
	var cbsDbgCpuSnpMemSizeCover string = "platform-default"
	this.CbsDbgCpuSnpMemSizeCover = &cbsDbgCpuSnpMemSizeCover
	var cbsDfCmnAcpiSratL3numa string = "platform-default"
	this.CbsDfCmnAcpiSratL3numa = &cbsDfCmnAcpiSratL3numa
	var cbsDfCmnDramNps string = "platform-default"
	this.CbsDfCmnDramNps = &cbsDfCmnDramNps
	var cbsDfCmnMemIntlv string = "platform-default"
	this.CbsDfCmnMemIntlv = &cbsDfCmnMemIntlv
	var cbsDfCmnMemIntlvSize string = "platform-default"
	this.CbsDfCmnMemIntlvSize = &cbsDfCmnMemIntlvSize
	var cbsSevSnpSupport string = "platform-default"
	this.CbsSevSnpSupport = &cbsSevSnpSupport
	var cdnEnable string = "platform-default"
	this.CdnEnable = &cdnEnable
	var cdnSupport string = "platform-default"
	this.CdnSupport = &cdnSupport
	var channelInterLeave string = "platform-default"
	this.ChannelInterLeave = &channelInterLeave
	var ciscoAdaptiveMemTraining string = "platform-default"
	this.CiscoAdaptiveMemTraining = &ciscoAdaptiveMemTraining
	var ciscoDebugLevel string = "platform-default"
	this.CiscoDebugLevel = &ciscoDebugLevel
	var ciscoOpromLaunchOptimization string = "platform-default"
	this.CiscoOpromLaunchOptimization = &ciscoOpromLaunchOptimization
	var ciscoXgmiMaxSpeed string = "platform-default"
	this.CiscoXgmiMaxSpeed = &ciscoXgmiMaxSpeed
	var ckeLowPolicy string = "platform-default"
	this.CkeLowPolicy = &ckeLowPolicy
	var closedLoopThermThrotl string = "platform-default"
	this.ClosedLoopThermThrotl = &closedLoopThermThrotl
	var cmciEnable string = "platform-default"
	this.CmciEnable = &cmciEnable
	var configTdp string = "platform-default"
	this.ConfigTdp = &configTdp
	var configTdpLevel string = "platform-default"
	this.ConfigTdpLevel = &configTdpLevel
	var consoleRedirection string = "platform-default"
	this.ConsoleRedirection = &consoleRedirection
	var coreMultiProcessing string = "platform-default"
	this.CoreMultiProcessing = &coreMultiProcessing
	var cpuEnergyPerformance string = "platform-default"
	this.CpuEnergyPerformance = &cpuEnergyPerformance
	var cpuFrequencyFloor string = "platform-default"
	this.CpuFrequencyFloor = &cpuFrequencyFloor
	var cpuPerformance string = "platform-default"
	this.CpuPerformance = &cpuPerformance
	var cpuPowerManagement string = "platform-default"
	this.CpuPowerManagement = &cpuPowerManagement
	var crQos string = "platform-default"
	this.CrQos = &crQos
	var crfastgoConfig string = "platform-default"
	this.CrfastgoConfig = &crfastgoConfig
	var dcpmmFirmwareDowngrade string = "platform-default"
	this.DcpmmFirmwareDowngrade = &dcpmmFirmwareDowngrade
	var demandScrub string = "platform-default"
	this.DemandScrub = &demandScrub
	var directCacheAccess string = "platform-default"
	this.DirectCacheAccess = &directCacheAccess
	var dramClockThrottling string = "platform-default"
	this.DramClockThrottling = &dramClockThrottling
	var dramRefreshRate string = "platform-default"
	this.DramRefreshRate = &dramRefreshRate
	var dramSwThermalThrottling string = "platform-default"
	this.DramSwThermalThrottling = &dramSwThermalThrottling
	var eadrSupport string = "platform-default"
	this.EadrSupport = &eadrSupport
	var edpcEn string = "platform-default"
	this.EdpcEn = &edpcEn
	var enableClockSpreadSpec string = "platform-default"
	this.EnableClockSpreadSpec = &enableClockSpreadSpec
	var enableMktme string = "platform-default"
	this.EnableMktme = &enableMktme
	var enableSgx string = "platform-default"
	this.EnableSgx = &enableSgx
	var enableTme string = "platform-default"
	this.EnableTme = &enableTme
	var energyEfficientTurbo string = "platform-default"
	this.EnergyEfficientTurbo = &energyEfficientTurbo
	var engPerfTuning string = "platform-default"
	this.EngPerfTuning = &engPerfTuning
	var enhancedIntelSpeedStepTech string = "platform-default"
	this.EnhancedIntelSpeedStepTech = &enhancedIntelSpeedStepTech
	var epochUpdate string = "platform-default"
	this.EpochUpdate = &epochUpdate
	var eppEnable string = "platform-default"
	this.EppEnable = &eppEnable
	var eppProfile string = "platform-default"
	this.EppProfile = &eppProfile
	var executeDisableBit string = "platform-default"
	this.ExecuteDisableBit = &executeDisableBit
	var extendedApic string = "platform-default"
	this.ExtendedApic = &extendedApic
	var flowControl string = "platform-default"
	this.FlowControl = &flowControl
	var frb2enable string = "platform-default"
	this.Frb2enable = &frb2enable
	var hardwarePrefetch string = "platform-default"
	this.HardwarePrefetch = &hardwarePrefetch
	var hwpmEnable string = "platform-default"
	this.HwpmEnable = &hwpmEnable
	var imcInterleave string = "platform-default"
	this.ImcInterleave = &imcInterleave
	var intelDynamicSpeedSelect string = "platform-default"
	this.IntelDynamicSpeedSelect = &intelDynamicSpeedSelect
	var intelHyperThreadingTech string = "platform-default"
	this.IntelHyperThreadingTech = &intelHyperThreadingTech
	var intelSpeedSelect string = "platform-default"
	this.IntelSpeedSelect = &intelSpeedSelect
	var intelTurboBoostTech string = "platform-default"
	this.IntelTurboBoostTech = &intelTurboBoostTech
	var intelVirtualizationTechnology string = "platform-default"
	this.IntelVirtualizationTechnology = &intelVirtualizationTechnology
	var intelVtForDirectedIo string = "platform-default"
	this.IntelVtForDirectedIo = &intelVtForDirectedIo
	var intelVtdCoherencySupport string = "platform-default"
	this.IntelVtdCoherencySupport = &intelVtdCoherencySupport
	var intelVtdInterruptRemapping string = "platform-default"
	this.IntelVtdInterruptRemapping = &intelVtdInterruptRemapping
	var intelVtdPassThroughDmaSupport string = "platform-default"
	this.IntelVtdPassThroughDmaSupport = &intelVtdPassThroughDmaSupport
	var intelVtdatsSupport string = "platform-default"
	this.IntelVtdatsSupport = &intelVtdatsSupport
	var iohErrorEnable string = "platform-default"
	this.IohErrorEnable = &iohErrorEnable
	var iohResource string = "platform-default"
	this.IohResource = &iohResource
	var ipPrefetch string = "platform-default"
	this.IpPrefetch = &ipPrefetch
	var ipv4http string = "platform-default"
	this.Ipv4http = &ipv4http
	var ipv4pxe string = "platform-default"
	this.Ipv4pxe = &ipv4pxe
	var ipv6http string = "platform-default"
	this.Ipv6http = &ipv6http
	var ipv6pxe string = "platform-default"
	this.Ipv6pxe = &ipv6pxe
	var ktiPrefetch string = "platform-default"
	this.KtiPrefetch = &ktiPrefetch
	var legacyOsRedirection string = "platform-default"
	this.LegacyOsRedirection = &legacyOsRedirection
	var legacyUsbSupport string = "platform-default"
	this.LegacyUsbSupport = &legacyUsbSupport
	var llcPrefetch string = "platform-default"
	this.LlcPrefetch = &llcPrefetch
	var lomPort0state string = "platform-default"
	this.LomPort0state = &lomPort0state
	var lomPort1state string = "platform-default"
	this.LomPort1state = &lomPort1state
	var lomPort2state string = "platform-default"
	this.LomPort2state = &lomPort2state
	var lomPort3state string = "platform-default"
	this.LomPort3state = &lomPort3state
	var lomPortsAllState string = "platform-default"
	this.LomPortsAllState = &lomPortsAllState
	var lvDdrMode string = "platform-default"
	this.LvDdrMode = &lvDdrMode
	var makeDeviceNonBootable string = "platform-default"
	this.MakeDeviceNonBootable = &makeDeviceNonBootable
	var memoryBandwidthBoost string = "platform-default"
	this.MemoryBandwidthBoost = &memoryBandwidthBoost
	var memoryInterLeave string = "platform-default"
	this.MemoryInterLeave = &memoryInterLeave
	var memoryMappedIoAbove4gb string = "platform-default"
	this.MemoryMappedIoAbove4gb = &memoryMappedIoAbove4gb
	var memoryRefreshRate string = "platform-default"
	this.MemoryRefreshRate = &memoryRefreshRate
	var memorySizeLimit string = "platform-default"
	this.MemorySizeLimit = &memorySizeLimit
	var memoryThermalThrottling string = "platform-default"
	this.MemoryThermalThrottling = &memoryThermalThrottling
	var mirroringMode string = "platform-default"
	this.MirroringMode = &mirroringMode
	var mmcfgBase string = "platform-default"
	this.MmcfgBase = &mmcfgBase
	var networkStack string = "platform-default"
	this.NetworkStack = &networkStack
	var numaOptimized string = "platform-default"
	this.NumaOptimized = &numaOptimized
	var nvmdimmPerformConfig string = "platform-default"
	this.NvmdimmPerformConfig = &nvmdimmPerformConfig
	var onboard10gbitLom string = "platform-default"
	this.Onboard10gbitLom = &onboard10gbitLom
	var onboardGbitLom string = "platform-default"
	this.OnboardGbitLom = &onboardGbitLom
	var onboardScuStorageSupport string = "platform-default"
	this.OnboardScuStorageSupport = &onboardScuStorageSupport
	var onboardScuStorageSwStack string = "platform-default"
	this.OnboardScuStorageSwStack = &onboardScuStorageSwStack
	var operationMode string = "platform-default"
	this.OperationMode = &operationMode
	var osBootWatchdogTimer string = "platform-default"
	this.OsBootWatchdogTimer = &osBootWatchdogTimer
	var osBootWatchdogTimerPolicy string = "platform-default"
	this.OsBootWatchdogTimerPolicy = &osBootWatchdogTimerPolicy
	var osBootWatchdogTimerTimeout string = "platform-default"
	this.OsBootWatchdogTimerTimeout = &osBootWatchdogTimerTimeout
	var outOfBandMgmtPort string = "platform-default"
	this.OutOfBandMgmtPort = &outOfBandMgmtPort
	var packageCstateLimit string = "platform-default"
	this.PackageCstateLimit = &packageCstateLimit
	var panicHighWatermark string = "platform-default"
	this.PanicHighWatermark = &panicHighWatermark
	var partialCacheLineSparing string = "platform-default"
	this.PartialCacheLineSparing = &partialCacheLineSparing
	var partialMirrorModeConfig string = "platform-default"
	this.PartialMirrorModeConfig = &partialMirrorModeConfig
	var partialMirrorPercent string = "platform-default"
	this.PartialMirrorPercent = &partialMirrorPercent
	var partialMirrorValue1 string = "platform-default"
	this.PartialMirrorValue1 = &partialMirrorValue1
	var partialMirrorValue2 string = "platform-default"
	this.PartialMirrorValue2 = &partialMirrorValue2
	var partialMirrorValue3 string = "platform-default"
	this.PartialMirrorValue3 = &partialMirrorValue3
	var partialMirrorValue4 string = "platform-default"
	this.PartialMirrorValue4 = &partialMirrorValue4
	var patrolScrub string = "platform-default"
	this.PatrolScrub = &patrolScrub
	var patrolScrubDuration string = "platform-default"
	this.PatrolScrubDuration = &patrolScrubDuration
	var pcIeRasSupport string = "platform-default"
	this.PcIeRasSupport = &pcIeRasSupport
	var pcIeSsdHotPlugSupport string = "platform-default"
	this.PcIeSsdHotPlugSupport = &pcIeSsdHotPlugSupport
	var pchUsb30mode string = "platform-default"
	this.PchUsb30mode = &pchUsb30mode
	var pciOptionRoMs string = "platform-default"
	this.PciOptionRoMs = &pciOptionRoMs
	var pciRomClp string = "platform-default"
	this.PciRomClp = &pciRomClp
	var pcieAriSupport string = "platform-default"
	this.PcieAriSupport = &pcieAriSupport
	var pciePllSsc string = "platform-default"
	this.PciePllSsc = &pciePllSsc
	var pcieSlotMraid1linkSpeed string = "platform-default"
	this.PcieSlotMraid1linkSpeed = &pcieSlotMraid1linkSpeed
	var pcieSlotMraid1optionRom string = "platform-default"
	this.PcieSlotMraid1optionRom = &pcieSlotMraid1optionRom
	var pcieSlotMraid2linkSpeed string = "platform-default"
	this.PcieSlotMraid2linkSpeed = &pcieSlotMraid2linkSpeed
	var pcieSlotMraid2optionRom string = "platform-default"
	this.PcieSlotMraid2optionRom = &pcieSlotMraid2optionRom
	var pcieSlotMstorraidLinkSpeed string = "platform-default"
	this.PcieSlotMstorraidLinkSpeed = &pcieSlotMstorraidLinkSpeed
	var pcieSlotMstorraidOptionRom string = "platform-default"
	this.PcieSlotMstorraidOptionRom = &pcieSlotMstorraidOptionRom
	var pcieSlotNvme1linkSpeed string = "platform-default"
	this.PcieSlotNvme1linkSpeed = &pcieSlotNvme1linkSpeed
	var pcieSlotNvme1optionRom string = "platform-default"
	this.PcieSlotNvme1optionRom = &pcieSlotNvme1optionRom
	var pcieSlotNvme2linkSpeed string = "platform-default"
	this.PcieSlotNvme2linkSpeed = &pcieSlotNvme2linkSpeed
	var pcieSlotNvme2optionRom string = "platform-default"
	this.PcieSlotNvme2optionRom = &pcieSlotNvme2optionRom
	var pcieSlotNvme3linkSpeed string = "platform-default"
	this.PcieSlotNvme3linkSpeed = &pcieSlotNvme3linkSpeed
	var pcieSlotNvme3optionRom string = "platform-default"
	this.PcieSlotNvme3optionRom = &pcieSlotNvme3optionRom
	var pcieSlotNvme4linkSpeed string = "platform-default"
	this.PcieSlotNvme4linkSpeed = &pcieSlotNvme4linkSpeed
	var pcieSlotNvme4optionRom string = "platform-default"
	this.PcieSlotNvme4optionRom = &pcieSlotNvme4optionRom
	var pcieSlotNvme5linkSpeed string = "platform-default"
	this.PcieSlotNvme5linkSpeed = &pcieSlotNvme5linkSpeed
	var pcieSlotNvme5optionRom string = "platform-default"
	this.PcieSlotNvme5optionRom = &pcieSlotNvme5optionRom
	var pcieSlotNvme6linkSpeed string = "platform-default"
	this.PcieSlotNvme6linkSpeed = &pcieSlotNvme6linkSpeed
	var pcieSlotNvme6optionRom string = "platform-default"
	this.PcieSlotNvme6optionRom = &pcieSlotNvme6optionRom
	var popSupport string = "platform-default"
	this.PopSupport = &popSupport
	var postErrorPause string = "platform-default"
	this.PostErrorPause = &postErrorPause
	var postPackageRepair string = "platform-default"
	this.PostPackageRepair = &postPackageRepair
	var processorC1e string = "platform-default"
	this.ProcessorC1e = &processorC1e
	var processorC3report string = "platform-default"
	this.ProcessorC3report = &processorC3report
	var processorC6report string = "platform-default"
	this.ProcessorC6report = &processorC6report
	var processorCstate string = "platform-default"
	this.ProcessorCstate = &processorCstate
	var psata string = "platform-default"
	this.Psata = &psata
	var pstateCoordType string = "platform-default"
	this.PstateCoordType = &pstateCoordType
	var puttyKeyPad string = "platform-default"
	this.PuttyKeyPad = &puttyKeyPad
	var pwrPerfTuning string = "platform-default"
	this.PwrPerfTuning = &pwrPerfTuning
	var qpiLinkFrequency string = "platform-default"
	this.QpiLinkFrequency = &qpiLinkFrequency
	var qpiLinkSpeed string = "platform-default"
	this.QpiLinkSpeed = &qpiLinkSpeed
	var qpiSnoopMode string = "platform-default"
	this.QpiSnoopMode = &qpiSnoopMode
	var rankInterLeave string = "platform-default"
	this.RankInterLeave = &rankInterLeave
	var redirectionAfterPost string = "platform-default"
	this.RedirectionAfterPost = &redirectionAfterPost
	var sataModeSelect string = "platform-default"
	this.SataModeSelect = &sataModeSelect
	var selectMemoryRasConfiguration string = "platform-default"
	this.SelectMemoryRasConfiguration = &selectMemoryRasConfiguration
	var selectPprType string = "platform-default"
	this.SelectPprType = &selectPprType
	var serialPortAenable string = "platform-default"
	this.SerialPortAenable = &serialPortAenable
	var sev string = "platform-default"
	this.Sev = &sev
	var sgxAutoRegistrationAgent string = "platform-default"
	this.SgxAutoRegistrationAgent = &sgxAutoRegistrationAgent
	var sgxEpoch0 string = "platform-default"
	this.SgxEpoch0 = &sgxEpoch0
	var sgxEpoch1 string = "platform-default"
	this.SgxEpoch1 = &sgxEpoch1
	var sgxFactoryReset string = "platform-default"
	this.SgxFactoryReset = &sgxFactoryReset
	var sgxLePubKeyHash0 string = "platform-default"
	this.SgxLePubKeyHash0 = &sgxLePubKeyHash0
	var sgxLePubKeyHash1 string = "platform-default"
	this.SgxLePubKeyHash1 = &sgxLePubKeyHash1
	var sgxLePubKeyHash2 string = "platform-default"
	this.SgxLePubKeyHash2 = &sgxLePubKeyHash2
	var sgxLePubKeyHash3 string = "platform-default"
	this.SgxLePubKeyHash3 = &sgxLePubKeyHash3
	var sgxLeWr string = "platform-default"
	this.SgxLeWr = &sgxLeWr
	var sgxPackageInfoInBandAccess string = "platform-default"
	this.SgxPackageInfoInBandAccess = &sgxPackageInfoInBandAccess
	var sgxQos string = "platform-default"
	this.SgxQos = &sgxQos
	var singlePctlEnable string = "platform-default"
	this.SinglePctlEnable = &singlePctlEnable
	var slot10linkSpeed string = "platform-default"
	this.Slot10linkSpeed = &slot10linkSpeed
	var slot10state string = "platform-default"
	this.Slot10state = &slot10state
	var slot11linkSpeed string = "platform-default"
	this.Slot11linkSpeed = &slot11linkSpeed
	var slot11state string = "platform-default"
	this.Slot11state = &slot11state
	var slot12linkSpeed string = "platform-default"
	this.Slot12linkSpeed = &slot12linkSpeed
	var slot12state string = "platform-default"
	this.Slot12state = &slot12state
	var slot13state string = "platform-default"
	this.Slot13state = &slot13state
	var slot14state string = "platform-default"
	this.Slot14state = &slot14state
	var slot1linkSpeed string = "platform-default"
	this.Slot1linkSpeed = &slot1linkSpeed
	var slot1state string = "platform-default"
	this.Slot1state = &slot1state
	var slot2linkSpeed string = "platform-default"
	this.Slot2linkSpeed = &slot2linkSpeed
	var slot2state string = "platform-default"
	this.Slot2state = &slot2state
	var slot3linkSpeed string = "platform-default"
	this.Slot3linkSpeed = &slot3linkSpeed
	var slot3state string = "platform-default"
	this.Slot3state = &slot3state
	var slot4linkSpeed string = "platform-default"
	this.Slot4linkSpeed = &slot4linkSpeed
	var slot4state string = "platform-default"
	this.Slot4state = &slot4state
	var slot5linkSpeed string = "platform-default"
	this.Slot5linkSpeed = &slot5linkSpeed
	var slot5state string = "platform-default"
	this.Slot5state = &slot5state
	var slot6linkSpeed string = "platform-default"
	this.Slot6linkSpeed = &slot6linkSpeed
	var slot6state string = "platform-default"
	this.Slot6state = &slot6state
	var slot7linkSpeed string = "platform-default"
	this.Slot7linkSpeed = &slot7linkSpeed
	var slot7state string = "platform-default"
	this.Slot7state = &slot7state
	var slot8linkSpeed string = "platform-default"
	this.Slot8linkSpeed = &slot8linkSpeed
	var slot8state string = "platform-default"
	this.Slot8state = &slot8state
	var slot9linkSpeed string = "platform-default"
	this.Slot9linkSpeed = &slot9linkSpeed
	var slot9state string = "platform-default"
	this.Slot9state = &slot9state
	var slotFlomLinkSpeed string = "platform-default"
	this.SlotFlomLinkSpeed = &slotFlomLinkSpeed
	var slotFrontNvme10linkSpeed string = "platform-default"
	this.SlotFrontNvme10linkSpeed = &slotFrontNvme10linkSpeed
	var slotFrontNvme10optionRom string = "platform-default"
	this.SlotFrontNvme10optionRom = &slotFrontNvme10optionRom
	var slotFrontNvme11linkSpeed string = "platform-default"
	this.SlotFrontNvme11linkSpeed = &slotFrontNvme11linkSpeed
	var slotFrontNvme11optionRom string = "platform-default"
	this.SlotFrontNvme11optionRom = &slotFrontNvme11optionRom
	var slotFrontNvme12linkSpeed string = "platform-default"
	this.SlotFrontNvme12linkSpeed = &slotFrontNvme12linkSpeed
	var slotFrontNvme12optionRom string = "platform-default"
	this.SlotFrontNvme12optionRom = &slotFrontNvme12optionRom
	var slotFrontNvme13optionRom string = "platform-default"
	this.SlotFrontNvme13optionRom = &slotFrontNvme13optionRom
	var slotFrontNvme14optionRom string = "platform-default"
	this.SlotFrontNvme14optionRom = &slotFrontNvme14optionRom
	var slotFrontNvme15optionRom string = "platform-default"
	this.SlotFrontNvme15optionRom = &slotFrontNvme15optionRom
	var slotFrontNvme16optionRom string = "platform-default"
	this.SlotFrontNvme16optionRom = &slotFrontNvme16optionRom
	var slotFrontNvme17optionRom string = "platform-default"
	this.SlotFrontNvme17optionRom = &slotFrontNvme17optionRom
	var slotFrontNvme18optionRom string = "platform-default"
	this.SlotFrontNvme18optionRom = &slotFrontNvme18optionRom
	var slotFrontNvme19optionRom string = "platform-default"
	this.SlotFrontNvme19optionRom = &slotFrontNvme19optionRom
	var slotFrontNvme1linkSpeed string = "platform-default"
	this.SlotFrontNvme1linkSpeed = &slotFrontNvme1linkSpeed
	var slotFrontNvme1optionRom string = "platform-default"
	this.SlotFrontNvme1optionRom = &slotFrontNvme1optionRom
	var slotFrontNvme20optionRom string = "platform-default"
	this.SlotFrontNvme20optionRom = &slotFrontNvme20optionRom
	var slotFrontNvme21optionRom string = "platform-default"
	this.SlotFrontNvme21optionRom = &slotFrontNvme21optionRom
	var slotFrontNvme22optionRom string = "platform-default"
	this.SlotFrontNvme22optionRom = &slotFrontNvme22optionRom
	var slotFrontNvme23optionRom string = "platform-default"
	this.SlotFrontNvme23optionRom = &slotFrontNvme23optionRom
	var slotFrontNvme24optionRom string = "platform-default"
	this.SlotFrontNvme24optionRom = &slotFrontNvme24optionRom
	var slotFrontNvme2linkSpeed string = "platform-default"
	this.SlotFrontNvme2linkSpeed = &slotFrontNvme2linkSpeed
	var slotFrontNvme2optionRom string = "platform-default"
	this.SlotFrontNvme2optionRom = &slotFrontNvme2optionRom
	var slotFrontNvme3linkSpeed string = "platform-default"
	this.SlotFrontNvme3linkSpeed = &slotFrontNvme3linkSpeed
	var slotFrontNvme3optionRom string = "platform-default"
	this.SlotFrontNvme3optionRom = &slotFrontNvme3optionRom
	var slotFrontNvme4linkSpeed string = "platform-default"
	this.SlotFrontNvme4linkSpeed = &slotFrontNvme4linkSpeed
	var slotFrontNvme4optionRom string = "platform-default"
	this.SlotFrontNvme4optionRom = &slotFrontNvme4optionRom
	var slotFrontNvme5linkSpeed string = "platform-default"
	this.SlotFrontNvme5linkSpeed = &slotFrontNvme5linkSpeed
	var slotFrontNvme5optionRom string = "platform-default"
	this.SlotFrontNvme5optionRom = &slotFrontNvme5optionRom
	var slotFrontNvme6linkSpeed string = "platform-default"
	this.SlotFrontNvme6linkSpeed = &slotFrontNvme6linkSpeed
	var slotFrontNvme6optionRom string = "platform-default"
	this.SlotFrontNvme6optionRom = &slotFrontNvme6optionRom
	var slotFrontNvme7linkSpeed string = "platform-default"
	this.SlotFrontNvme7linkSpeed = &slotFrontNvme7linkSpeed
	var slotFrontNvme7optionRom string = "platform-default"
	this.SlotFrontNvme7optionRom = &slotFrontNvme7optionRom
	var slotFrontNvme8linkSpeed string = "platform-default"
	this.SlotFrontNvme8linkSpeed = &slotFrontNvme8linkSpeed
	var slotFrontNvme8optionRom string = "platform-default"
	this.SlotFrontNvme8optionRom = &slotFrontNvme8optionRom
	var slotFrontNvme9linkSpeed string = "platform-default"
	this.SlotFrontNvme9linkSpeed = &slotFrontNvme9linkSpeed
	var slotFrontNvme9optionRom string = "platform-default"
	this.SlotFrontNvme9optionRom = &slotFrontNvme9optionRom
	var slotFrontSlot5linkSpeed string = "platform-default"
	this.SlotFrontSlot5linkSpeed = &slotFrontSlot5linkSpeed
	var slotFrontSlot6linkSpeed string = "platform-default"
	this.SlotFrontSlot6linkSpeed = &slotFrontSlot6linkSpeed
	var slotGpu1state string = "platform-default"
	this.SlotGpu1state = &slotGpu1state
	var slotGpu2state string = "platform-default"
	this.SlotGpu2state = &slotGpu2state
	var slotGpu3state string = "platform-default"
	this.SlotGpu3state = &slotGpu3state
	var slotGpu4state string = "platform-default"
	this.SlotGpu4state = &slotGpu4state
	var slotGpu5state string = "platform-default"
	this.SlotGpu5state = &slotGpu5state
	var slotGpu6state string = "platform-default"
	this.SlotGpu6state = &slotGpu6state
	var slotGpu7state string = "platform-default"
	this.SlotGpu7state = &slotGpu7state
	var slotGpu8state string = "platform-default"
	this.SlotGpu8state = &slotGpu8state
	var slotHbaLinkSpeed string = "platform-default"
	this.SlotHbaLinkSpeed = &slotHbaLinkSpeed
	var slotHbaState string = "platform-default"
	this.SlotHbaState = &slotHbaState
	var slotLom1link string = "platform-default"
	this.SlotLom1link = &slotLom1link
	var slotLom2link string = "platform-default"
	this.SlotLom2link = &slotLom2link
	var slotMezzState string = "platform-default"
	this.SlotMezzState = &slotMezzState
	var slotMlomLinkSpeed string = "platform-default"
	this.SlotMlomLinkSpeed = &slotMlomLinkSpeed
	var slotMlomState string = "platform-default"
	this.SlotMlomState = &slotMlomState
	var slotMraidLinkSpeed string = "platform-default"
	this.SlotMraidLinkSpeed = &slotMraidLinkSpeed
	var slotMraidState string = "platform-default"
	this.SlotMraidState = &slotMraidState
	var slotN10state string = "platform-default"
	this.SlotN10state = &slotN10state
	var slotN11state string = "platform-default"
	this.SlotN11state = &slotN11state
	var slotN12state string = "platform-default"
	this.SlotN12state = &slotN12state
	var slotN13state string = "platform-default"
	this.SlotN13state = &slotN13state
	var slotN14state string = "platform-default"
	this.SlotN14state = &slotN14state
	var slotN15state string = "platform-default"
	this.SlotN15state = &slotN15state
	var slotN16state string = "platform-default"
	this.SlotN16state = &slotN16state
	var slotN17state string = "platform-default"
	this.SlotN17state = &slotN17state
	var slotN18state string = "platform-default"
	this.SlotN18state = &slotN18state
	var slotN19state string = "platform-default"
	this.SlotN19state = &slotN19state
	var slotN1state string = "platform-default"
	this.SlotN1state = &slotN1state
	var slotN20state string = "platform-default"
	this.SlotN20state = &slotN20state
	var slotN21state string = "platform-default"
	this.SlotN21state = &slotN21state
	var slotN22state string = "platform-default"
	this.SlotN22state = &slotN22state
	var slotN23state string = "platform-default"
	this.SlotN23state = &slotN23state
	var slotN24state string = "platform-default"
	this.SlotN24state = &slotN24state
	var slotN2state string = "platform-default"
	this.SlotN2state = &slotN2state
	var slotN3state string = "platform-default"
	this.SlotN3state = &slotN3state
	var slotN4state string = "platform-default"
	this.SlotN4state = &slotN4state
	var slotN5state string = "platform-default"
	this.SlotN5state = &slotN5state
	var slotN6state string = "platform-default"
	this.SlotN6state = &slotN6state
	var slotN7state string = "platform-default"
	this.SlotN7state = &slotN7state
	var slotN8state string = "platform-default"
	this.SlotN8state = &slotN8state
	var slotN9state string = "platform-default"
	this.SlotN9state = &slotN9state
	var slotRaidLinkSpeed string = "platform-default"
	this.SlotRaidLinkSpeed = &slotRaidLinkSpeed
	var slotRaidState string = "platform-default"
	this.SlotRaidState = &slotRaidState
	var slotRearNvme1linkSpeed string = "platform-default"
	this.SlotRearNvme1linkSpeed = &slotRearNvme1linkSpeed
	var slotRearNvme1state string = "platform-default"
	this.SlotRearNvme1state = &slotRearNvme1state
	var slotRearNvme2linkSpeed string = "platform-default"
	this.SlotRearNvme2linkSpeed = &slotRearNvme2linkSpeed
	var slotRearNvme2state string = "platform-default"
	this.SlotRearNvme2state = &slotRearNvme2state
	var slotRearNvme3linkSpeed string = "platform-default"
	this.SlotRearNvme3linkSpeed = &slotRearNvme3linkSpeed
	var slotRearNvme3state string = "platform-default"
	this.SlotRearNvme3state = &slotRearNvme3state
	var slotRearNvme4linkSpeed string = "platform-default"
	this.SlotRearNvme4linkSpeed = &slotRearNvme4linkSpeed
	var slotRearNvme4state string = "platform-default"
	this.SlotRearNvme4state = &slotRearNvme4state
	var slotRearNvme5state string = "platform-default"
	this.SlotRearNvme5state = &slotRearNvme5state
	var slotRearNvme6state string = "platform-default"
	this.SlotRearNvme6state = &slotRearNvme6state
	var slotRearNvme7state string = "platform-default"
	this.SlotRearNvme7state = &slotRearNvme7state
	var slotRearNvme8state string = "platform-default"
	this.SlotRearNvme8state = &slotRearNvme8state
	var slotRiser1linkSpeed string = "platform-default"
	this.SlotRiser1linkSpeed = &slotRiser1linkSpeed
	var slotRiser1slot1linkSpeed string = "platform-default"
	this.SlotRiser1slot1linkSpeed = &slotRiser1slot1linkSpeed
	var slotRiser1slot2linkSpeed string = "platform-default"
	this.SlotRiser1slot2linkSpeed = &slotRiser1slot2linkSpeed
	var slotRiser1slot3linkSpeed string = "platform-default"
	this.SlotRiser1slot3linkSpeed = &slotRiser1slot3linkSpeed
	var slotRiser2linkSpeed string = "platform-default"
	this.SlotRiser2linkSpeed = &slotRiser2linkSpeed
	var slotRiser2slot4linkSpeed string = "platform-default"
	this.SlotRiser2slot4linkSpeed = &slotRiser2slot4linkSpeed
	var slotRiser2slot5linkSpeed string = "platform-default"
	this.SlotRiser2slot5linkSpeed = &slotRiser2slot5linkSpeed
	var slotRiser2slot6linkSpeed string = "platform-default"
	this.SlotRiser2slot6linkSpeed = &slotRiser2slot6linkSpeed
	var slotSasState string = "platform-default"
	this.SlotSasState = &slotSasState
	var slotSsdSlot1linkSpeed string = "platform-default"
	this.SlotSsdSlot1linkSpeed = &slotSsdSlot1linkSpeed
	var slotSsdSlot2linkSpeed string = "platform-default"
	this.SlotSsdSlot2linkSpeed = &slotSsdSlot2linkSpeed
	var smee string = "platform-default"
	this.Smee = &smee
	var smtMode string = "platform-default"
	this.SmtMode = &smtMode
	var snc string = "platform-default"
	this.Snc = &snc
	var snoopyModeFor2lm string = "platform-default"
	this.SnoopyModeFor2lm = &snoopyModeFor2lm
	var snoopyModeForAd string = "platform-default"
	this.SnoopyModeForAd = &snoopyModeForAd
	var sparingMode string = "platform-default"
	this.SparingMode = &sparingMode
	var srIov string = "platform-default"
	this.SrIov = &srIov
	var streamerPrefetch string = "platform-default"
	this.StreamerPrefetch = &streamerPrefetch
	var svmMode string = "platform-default"
	this.SvmMode = &svmMode
	var terminalType string = "platform-default"
	this.TerminalType = &terminalType
	var tpmControl string = "platform-default"
	this.TpmControl = &tpmControl
	var tpmPendingOperation string = "platform-default"
	this.TpmPendingOperation = &tpmPendingOperation
	var tpmSupport string = "platform-default"
	this.TpmSupport = &tpmSupport
	var tsme string = "platform-default"
	this.Tsme = &tsme
	var txtSupport string = "platform-default"
	this.TxtSupport = &txtSupport
	var ucsmBootOrderRule string = "platform-default"
	this.UcsmBootOrderRule = &ucsmBootOrderRule
	var ufsDisable string = "platform-default"
	this.UfsDisable = &ufsDisable
	var umaBasedClustering string = "platform-default"
	this.UmaBasedClustering = &umaBasedClustering
	var usbEmul6064 string = "platform-default"
	this.UsbEmul6064 = &usbEmul6064
	var usbPortFront string = "platform-default"
	this.UsbPortFront = &usbPortFront
	var usbPortInternal string = "platform-default"
	this.UsbPortInternal = &usbPortInternal
	var usbPortKvm string = "platform-default"
	this.UsbPortKvm = &usbPortKvm
	var usbPortRear string = "platform-default"
	this.UsbPortRear = &usbPortRear
	var usbPortSdCard string = "platform-default"
	this.UsbPortSdCard = &usbPortSdCard
	var usbPortVmedia string = "platform-default"
	this.UsbPortVmedia = &usbPortVmedia
	var usbXhciSupport string = "platform-default"
	this.UsbXhciSupport = &usbXhciSupport
	var vgaPriority string = "platform-default"
	this.VgaPriority = &vgaPriority
	var vmdEnable string = "platform-default"
	this.VmdEnable = &vmdEnable
	var volMemoryMode string = "platform-default"
	this.VolMemoryMode = &volMemoryMode
	var workLoadConfig string = "platform-default"
	this.WorkLoadConfig = &workLoadConfig
	var xptPrefetch string = "platform-default"
	this.XptPrefetch = &xptPrefetch
	return &this
}

// GetClassId returns the ClassId field value
func (o *BiosPolicyAllOf) GetClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassId, true
}

// SetClassId sets field value
func (o *BiosPolicyAllOf) SetClassId(v string) {
	o.ClassId = v
}

// GetObjectType returns the ObjectType field value
func (o *BiosPolicyAllOf) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *BiosPolicyAllOf) SetObjectType(v string) {
	o.ObjectType = v
}

// GetAcsControlGpu1state returns the AcsControlGpu1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu1state() string {
	if o == nil || o.AcsControlGpu1state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu1state
}

// GetAcsControlGpu1stateOk returns a tuple with the AcsControlGpu1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu1stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu1state == nil {
		return nil, false
	}
	return o.AcsControlGpu1state, true
}

// HasAcsControlGpu1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu1state() bool {
	if o != nil && o.AcsControlGpu1state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu1state gets a reference to the given string and assigns it to the AcsControlGpu1state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu1state(v string) {
	o.AcsControlGpu1state = &v
}

// GetAcsControlGpu2state returns the AcsControlGpu2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu2state() string {
	if o == nil || o.AcsControlGpu2state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu2state
}

// GetAcsControlGpu2stateOk returns a tuple with the AcsControlGpu2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu2stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu2state == nil {
		return nil, false
	}
	return o.AcsControlGpu2state, true
}

// HasAcsControlGpu2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu2state() bool {
	if o != nil && o.AcsControlGpu2state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu2state gets a reference to the given string and assigns it to the AcsControlGpu2state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu2state(v string) {
	o.AcsControlGpu2state = &v
}

// GetAcsControlGpu3state returns the AcsControlGpu3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu3state() string {
	if o == nil || o.AcsControlGpu3state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu3state
}

// GetAcsControlGpu3stateOk returns a tuple with the AcsControlGpu3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu3stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu3state == nil {
		return nil, false
	}
	return o.AcsControlGpu3state, true
}

// HasAcsControlGpu3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu3state() bool {
	if o != nil && o.AcsControlGpu3state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu3state gets a reference to the given string and assigns it to the AcsControlGpu3state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu3state(v string) {
	o.AcsControlGpu3state = &v
}

// GetAcsControlGpu4state returns the AcsControlGpu4state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu4state() string {
	if o == nil || o.AcsControlGpu4state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu4state
}

// GetAcsControlGpu4stateOk returns a tuple with the AcsControlGpu4state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu4stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu4state == nil {
		return nil, false
	}
	return o.AcsControlGpu4state, true
}

// HasAcsControlGpu4state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu4state() bool {
	if o != nil && o.AcsControlGpu4state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu4state gets a reference to the given string and assigns it to the AcsControlGpu4state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu4state(v string) {
	o.AcsControlGpu4state = &v
}

// GetAcsControlGpu5state returns the AcsControlGpu5state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu5state() string {
	if o == nil || o.AcsControlGpu5state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu5state
}

// GetAcsControlGpu5stateOk returns a tuple with the AcsControlGpu5state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu5stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu5state == nil {
		return nil, false
	}
	return o.AcsControlGpu5state, true
}

// HasAcsControlGpu5state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu5state() bool {
	if o != nil && o.AcsControlGpu5state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu5state gets a reference to the given string and assigns it to the AcsControlGpu5state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu5state(v string) {
	o.AcsControlGpu5state = &v
}

// GetAcsControlGpu6state returns the AcsControlGpu6state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu6state() string {
	if o == nil || o.AcsControlGpu6state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu6state
}

// GetAcsControlGpu6stateOk returns a tuple with the AcsControlGpu6state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu6stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu6state == nil {
		return nil, false
	}
	return o.AcsControlGpu6state, true
}

// HasAcsControlGpu6state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu6state() bool {
	if o != nil && o.AcsControlGpu6state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu6state gets a reference to the given string and assigns it to the AcsControlGpu6state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu6state(v string) {
	o.AcsControlGpu6state = &v
}

// GetAcsControlGpu7state returns the AcsControlGpu7state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu7state() string {
	if o == nil || o.AcsControlGpu7state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu7state
}

// GetAcsControlGpu7stateOk returns a tuple with the AcsControlGpu7state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu7stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu7state == nil {
		return nil, false
	}
	return o.AcsControlGpu7state, true
}

// HasAcsControlGpu7state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu7state() bool {
	if o != nil && o.AcsControlGpu7state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu7state gets a reference to the given string and assigns it to the AcsControlGpu7state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu7state(v string) {
	o.AcsControlGpu7state = &v
}

// GetAcsControlGpu8state returns the AcsControlGpu8state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlGpu8state() string {
	if o == nil || o.AcsControlGpu8state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlGpu8state
}

// GetAcsControlGpu8stateOk returns a tuple with the AcsControlGpu8state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlGpu8stateOk() (*string, bool) {
	if o == nil || o.AcsControlGpu8state == nil {
		return nil, false
	}
	return o.AcsControlGpu8state, true
}

// HasAcsControlGpu8state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlGpu8state() bool {
	if o != nil && o.AcsControlGpu8state != nil {
		return true
	}

	return false
}

// SetAcsControlGpu8state gets a reference to the given string and assigns it to the AcsControlGpu8state field.
func (o *BiosPolicyAllOf) SetAcsControlGpu8state(v string) {
	o.AcsControlGpu8state = &v
}

// GetAcsControlSlot11state returns the AcsControlSlot11state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlSlot11state() string {
	if o == nil || o.AcsControlSlot11state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlSlot11state
}

// GetAcsControlSlot11stateOk returns a tuple with the AcsControlSlot11state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlSlot11stateOk() (*string, bool) {
	if o == nil || o.AcsControlSlot11state == nil {
		return nil, false
	}
	return o.AcsControlSlot11state, true
}

// HasAcsControlSlot11state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlSlot11state() bool {
	if o != nil && o.AcsControlSlot11state != nil {
		return true
	}

	return false
}

// SetAcsControlSlot11state gets a reference to the given string and assigns it to the AcsControlSlot11state field.
func (o *BiosPolicyAllOf) SetAcsControlSlot11state(v string) {
	o.AcsControlSlot11state = &v
}

// GetAcsControlSlot12state returns the AcsControlSlot12state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlSlot12state() string {
	if o == nil || o.AcsControlSlot12state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlSlot12state
}

// GetAcsControlSlot12stateOk returns a tuple with the AcsControlSlot12state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlSlot12stateOk() (*string, bool) {
	if o == nil || o.AcsControlSlot12state == nil {
		return nil, false
	}
	return o.AcsControlSlot12state, true
}

// HasAcsControlSlot12state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlSlot12state() bool {
	if o != nil && o.AcsControlSlot12state != nil {
		return true
	}

	return false
}

// SetAcsControlSlot12state gets a reference to the given string and assigns it to the AcsControlSlot12state field.
func (o *BiosPolicyAllOf) SetAcsControlSlot12state(v string) {
	o.AcsControlSlot12state = &v
}

// GetAcsControlSlot13state returns the AcsControlSlot13state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlSlot13state() string {
	if o == nil || o.AcsControlSlot13state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlSlot13state
}

// GetAcsControlSlot13stateOk returns a tuple with the AcsControlSlot13state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlSlot13stateOk() (*string, bool) {
	if o == nil || o.AcsControlSlot13state == nil {
		return nil, false
	}
	return o.AcsControlSlot13state, true
}

// HasAcsControlSlot13state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlSlot13state() bool {
	if o != nil && o.AcsControlSlot13state != nil {
		return true
	}

	return false
}

// SetAcsControlSlot13state gets a reference to the given string and assigns it to the AcsControlSlot13state field.
func (o *BiosPolicyAllOf) SetAcsControlSlot13state(v string) {
	o.AcsControlSlot13state = &v
}

// GetAcsControlSlot14state returns the AcsControlSlot14state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAcsControlSlot14state() string {
	if o == nil || o.AcsControlSlot14state == nil {
		var ret string
		return ret
	}
	return *o.AcsControlSlot14state
}

// GetAcsControlSlot14stateOk returns a tuple with the AcsControlSlot14state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAcsControlSlot14stateOk() (*string, bool) {
	if o == nil || o.AcsControlSlot14state == nil {
		return nil, false
	}
	return o.AcsControlSlot14state, true
}

// HasAcsControlSlot14state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAcsControlSlot14state() bool {
	if o != nil && o.AcsControlSlot14state != nil {
		return true
	}

	return false
}

// SetAcsControlSlot14state gets a reference to the given string and assigns it to the AcsControlSlot14state field.
func (o *BiosPolicyAllOf) SetAcsControlSlot14state(v string) {
	o.AcsControlSlot14state = &v
}

// GetAdjacentCacheLinePrefetch returns the AdjacentCacheLinePrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAdjacentCacheLinePrefetch() string {
	if o == nil || o.AdjacentCacheLinePrefetch == nil {
		var ret string
		return ret
	}
	return *o.AdjacentCacheLinePrefetch
}

// GetAdjacentCacheLinePrefetchOk returns a tuple with the AdjacentCacheLinePrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAdjacentCacheLinePrefetchOk() (*string, bool) {
	if o == nil || o.AdjacentCacheLinePrefetch == nil {
		return nil, false
	}
	return o.AdjacentCacheLinePrefetch, true
}

// HasAdjacentCacheLinePrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAdjacentCacheLinePrefetch() bool {
	if o != nil && o.AdjacentCacheLinePrefetch != nil {
		return true
	}

	return false
}

// SetAdjacentCacheLinePrefetch gets a reference to the given string and assigns it to the AdjacentCacheLinePrefetch field.
func (o *BiosPolicyAllOf) SetAdjacentCacheLinePrefetch(v string) {
	o.AdjacentCacheLinePrefetch = &v
}

// GetAdvancedMemTest returns the AdvancedMemTest field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAdvancedMemTest() string {
	if o == nil || o.AdvancedMemTest == nil {
		var ret string
		return ret
	}
	return *o.AdvancedMemTest
}

// GetAdvancedMemTestOk returns a tuple with the AdvancedMemTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAdvancedMemTestOk() (*string, bool) {
	if o == nil || o.AdvancedMemTest == nil {
		return nil, false
	}
	return o.AdvancedMemTest, true
}

// HasAdvancedMemTest returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAdvancedMemTest() bool {
	if o != nil && o.AdvancedMemTest != nil {
		return true
	}

	return false
}

// SetAdvancedMemTest gets a reference to the given string and assigns it to the AdvancedMemTest field.
func (o *BiosPolicyAllOf) SetAdvancedMemTest(v string) {
	o.AdvancedMemTest = &v
}

// GetAllUsbDevices returns the AllUsbDevices field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAllUsbDevices() string {
	if o == nil || o.AllUsbDevices == nil {
		var ret string
		return ret
	}
	return *o.AllUsbDevices
}

// GetAllUsbDevicesOk returns a tuple with the AllUsbDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAllUsbDevicesOk() (*string, bool) {
	if o == nil || o.AllUsbDevices == nil {
		return nil, false
	}
	return o.AllUsbDevices, true
}

// HasAllUsbDevices returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAllUsbDevices() bool {
	if o != nil && o.AllUsbDevices != nil {
		return true
	}

	return false
}

// SetAllUsbDevices gets a reference to the given string and assigns it to the AllUsbDevices field.
func (o *BiosPolicyAllOf) SetAllUsbDevices(v string) {
	o.AllUsbDevices = &v
}

// GetAltitude returns the Altitude field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAltitude() string {
	if o == nil || o.Altitude == nil {
		var ret string
		return ret
	}
	return *o.Altitude
}

// GetAltitudeOk returns a tuple with the Altitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAltitudeOk() (*string, bool) {
	if o == nil || o.Altitude == nil {
		return nil, false
	}
	return o.Altitude, true
}

// HasAltitude returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAltitude() bool {
	if o != nil && o.Altitude != nil {
		return true
	}

	return false
}

// SetAltitude gets a reference to the given string and assigns it to the Altitude field.
func (o *BiosPolicyAllOf) SetAltitude(v string) {
	o.Altitude = &v
}

// GetAspmSupport returns the AspmSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAspmSupport() string {
	if o == nil || o.AspmSupport == nil {
		var ret string
		return ret
	}
	return *o.AspmSupport
}

// GetAspmSupportOk returns a tuple with the AspmSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAspmSupportOk() (*string, bool) {
	if o == nil || o.AspmSupport == nil {
		return nil, false
	}
	return o.AspmSupport, true
}

// HasAspmSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAspmSupport() bool {
	if o != nil && o.AspmSupport != nil {
		return true
	}

	return false
}

// SetAspmSupport gets a reference to the given string and assigns it to the AspmSupport field.
func (o *BiosPolicyAllOf) SetAspmSupport(v string) {
	o.AspmSupport = &v
}

// GetAssertNmiOnPerr returns the AssertNmiOnPerr field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAssertNmiOnPerr() string {
	if o == nil || o.AssertNmiOnPerr == nil {
		var ret string
		return ret
	}
	return *o.AssertNmiOnPerr
}

// GetAssertNmiOnPerrOk returns a tuple with the AssertNmiOnPerr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAssertNmiOnPerrOk() (*string, bool) {
	if o == nil || o.AssertNmiOnPerr == nil {
		return nil, false
	}
	return o.AssertNmiOnPerr, true
}

// HasAssertNmiOnPerr returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAssertNmiOnPerr() bool {
	if o != nil && o.AssertNmiOnPerr != nil {
		return true
	}

	return false
}

// SetAssertNmiOnPerr gets a reference to the given string and assigns it to the AssertNmiOnPerr field.
func (o *BiosPolicyAllOf) SetAssertNmiOnPerr(v string) {
	o.AssertNmiOnPerr = &v
}

// GetAssertNmiOnSerr returns the AssertNmiOnSerr field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAssertNmiOnSerr() string {
	if o == nil || o.AssertNmiOnSerr == nil {
		var ret string
		return ret
	}
	return *o.AssertNmiOnSerr
}

// GetAssertNmiOnSerrOk returns a tuple with the AssertNmiOnSerr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAssertNmiOnSerrOk() (*string, bool) {
	if o == nil || o.AssertNmiOnSerr == nil {
		return nil, false
	}
	return o.AssertNmiOnSerr, true
}

// HasAssertNmiOnSerr returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAssertNmiOnSerr() bool {
	if o != nil && o.AssertNmiOnSerr != nil {
		return true
	}

	return false
}

// SetAssertNmiOnSerr gets a reference to the given string and assigns it to the AssertNmiOnSerr field.
func (o *BiosPolicyAllOf) SetAssertNmiOnSerr(v string) {
	o.AssertNmiOnSerr = &v
}

// GetAutoCcState returns the AutoCcState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAutoCcState() string {
	if o == nil || o.AutoCcState == nil {
		var ret string
		return ret
	}
	return *o.AutoCcState
}

// GetAutoCcStateOk returns a tuple with the AutoCcState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAutoCcStateOk() (*string, bool) {
	if o == nil || o.AutoCcState == nil {
		return nil, false
	}
	return o.AutoCcState, true
}

// HasAutoCcState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAutoCcState() bool {
	if o != nil && o.AutoCcState != nil {
		return true
	}

	return false
}

// SetAutoCcState gets a reference to the given string and assigns it to the AutoCcState field.
func (o *BiosPolicyAllOf) SetAutoCcState(v string) {
	o.AutoCcState = &v
}

// GetAutonumousCstateEnable returns the AutonumousCstateEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetAutonumousCstateEnable() string {
	if o == nil || o.AutonumousCstateEnable == nil {
		var ret string
		return ret
	}
	return *o.AutonumousCstateEnable
}

// GetAutonumousCstateEnableOk returns a tuple with the AutonumousCstateEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetAutonumousCstateEnableOk() (*string, bool) {
	if o == nil || o.AutonumousCstateEnable == nil {
		return nil, false
	}
	return o.AutonumousCstateEnable, true
}

// HasAutonumousCstateEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasAutonumousCstateEnable() bool {
	if o != nil && o.AutonumousCstateEnable != nil {
		return true
	}

	return false
}

// SetAutonumousCstateEnable gets a reference to the given string and assigns it to the AutonumousCstateEnable field.
func (o *BiosPolicyAllOf) SetAutonumousCstateEnable(v string) {
	o.AutonumousCstateEnable = &v
}

// GetBaudRate returns the BaudRate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBaudRate() string {
	if o == nil || o.BaudRate == nil {
		var ret string
		return ret
	}
	return *o.BaudRate
}

// GetBaudRateOk returns a tuple with the BaudRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBaudRateOk() (*string, bool) {
	if o == nil || o.BaudRate == nil {
		return nil, false
	}
	return o.BaudRate, true
}

// HasBaudRate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBaudRate() bool {
	if o != nil && o.BaudRate != nil {
		return true
	}

	return false
}

// SetBaudRate gets a reference to the given string and assigns it to the BaudRate field.
func (o *BiosPolicyAllOf) SetBaudRate(v string) {
	o.BaudRate = &v
}

// GetBmeDmaMitigation returns the BmeDmaMitigation field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBmeDmaMitigation() string {
	if o == nil || o.BmeDmaMitigation == nil {
		var ret string
		return ret
	}
	return *o.BmeDmaMitigation
}

// GetBmeDmaMitigationOk returns a tuple with the BmeDmaMitigation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBmeDmaMitigationOk() (*string, bool) {
	if o == nil || o.BmeDmaMitigation == nil {
		return nil, false
	}
	return o.BmeDmaMitigation, true
}

// HasBmeDmaMitigation returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBmeDmaMitigation() bool {
	if o != nil && o.BmeDmaMitigation != nil {
		return true
	}

	return false
}

// SetBmeDmaMitigation gets a reference to the given string and assigns it to the BmeDmaMitigation field.
func (o *BiosPolicyAllOf) SetBmeDmaMitigation(v string) {
	o.BmeDmaMitigation = &v
}

// GetBootOptionNumRetry returns the BootOptionNumRetry field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBootOptionNumRetry() string {
	if o == nil || o.BootOptionNumRetry == nil {
		var ret string
		return ret
	}
	return *o.BootOptionNumRetry
}

// GetBootOptionNumRetryOk returns a tuple with the BootOptionNumRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBootOptionNumRetryOk() (*string, bool) {
	if o == nil || o.BootOptionNumRetry == nil {
		return nil, false
	}
	return o.BootOptionNumRetry, true
}

// HasBootOptionNumRetry returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBootOptionNumRetry() bool {
	if o != nil && o.BootOptionNumRetry != nil {
		return true
	}

	return false
}

// SetBootOptionNumRetry gets a reference to the given string and assigns it to the BootOptionNumRetry field.
func (o *BiosPolicyAllOf) SetBootOptionNumRetry(v string) {
	o.BootOptionNumRetry = &v
}

// GetBootOptionReCoolDown returns the BootOptionReCoolDown field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBootOptionReCoolDown() string {
	if o == nil || o.BootOptionReCoolDown == nil {
		var ret string
		return ret
	}
	return *o.BootOptionReCoolDown
}

// GetBootOptionReCoolDownOk returns a tuple with the BootOptionReCoolDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBootOptionReCoolDownOk() (*string, bool) {
	if o == nil || o.BootOptionReCoolDown == nil {
		return nil, false
	}
	return o.BootOptionReCoolDown, true
}

// HasBootOptionReCoolDown returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBootOptionReCoolDown() bool {
	if o != nil && o.BootOptionReCoolDown != nil {
		return true
	}

	return false
}

// SetBootOptionReCoolDown gets a reference to the given string and assigns it to the BootOptionReCoolDown field.
func (o *BiosPolicyAllOf) SetBootOptionReCoolDown(v string) {
	o.BootOptionReCoolDown = &v
}

// GetBootOptionRetry returns the BootOptionRetry field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBootOptionRetry() string {
	if o == nil || o.BootOptionRetry == nil {
		var ret string
		return ret
	}
	return *o.BootOptionRetry
}

// GetBootOptionRetryOk returns a tuple with the BootOptionRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBootOptionRetryOk() (*string, bool) {
	if o == nil || o.BootOptionRetry == nil {
		return nil, false
	}
	return o.BootOptionRetry, true
}

// HasBootOptionRetry returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBootOptionRetry() bool {
	if o != nil && o.BootOptionRetry != nil {
		return true
	}

	return false
}

// SetBootOptionRetry gets a reference to the given string and assigns it to the BootOptionRetry field.
func (o *BiosPolicyAllOf) SetBootOptionRetry(v string) {
	o.BootOptionRetry = &v
}

// GetBootPerformanceMode returns the BootPerformanceMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBootPerformanceMode() string {
	if o == nil || o.BootPerformanceMode == nil {
		var ret string
		return ret
	}
	return *o.BootPerformanceMode
}

// GetBootPerformanceModeOk returns a tuple with the BootPerformanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBootPerformanceModeOk() (*string, bool) {
	if o == nil || o.BootPerformanceMode == nil {
		return nil, false
	}
	return o.BootPerformanceMode, true
}

// HasBootPerformanceMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBootPerformanceMode() bool {
	if o != nil && o.BootPerformanceMode != nil {
		return true
	}

	return false
}

// SetBootPerformanceMode gets a reference to the given string and assigns it to the BootPerformanceMode field.
func (o *BiosPolicyAllOf) SetBootPerformanceMode(v string) {
	o.BootPerformanceMode = &v
}

// GetBurstAndPostponedRefresh returns the BurstAndPostponedRefresh field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetBurstAndPostponedRefresh() string {
	if o == nil || o.BurstAndPostponedRefresh == nil {
		var ret string
		return ret
	}
	return *o.BurstAndPostponedRefresh
}

// GetBurstAndPostponedRefreshOk returns a tuple with the BurstAndPostponedRefresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetBurstAndPostponedRefreshOk() (*string, bool) {
	if o == nil || o.BurstAndPostponedRefresh == nil {
		return nil, false
	}
	return o.BurstAndPostponedRefresh, true
}

// HasBurstAndPostponedRefresh returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasBurstAndPostponedRefresh() bool {
	if o != nil && o.BurstAndPostponedRefresh != nil {
		return true
	}

	return false
}

// SetBurstAndPostponedRefresh gets a reference to the given string and assigns it to the BurstAndPostponedRefresh field.
func (o *BiosPolicyAllOf) SetBurstAndPostponedRefresh(v string) {
	o.BurstAndPostponedRefresh = &v
}

// GetCbsCmnApbdis returns the CbsCmnApbdis field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnApbdis() string {
	if o == nil || o.CbsCmnApbdis == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnApbdis
}

// GetCbsCmnApbdisOk returns a tuple with the CbsCmnApbdis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnApbdisOk() (*string, bool) {
	if o == nil || o.CbsCmnApbdis == nil {
		return nil, false
	}
	return o.CbsCmnApbdis, true
}

// HasCbsCmnApbdis returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnApbdis() bool {
	if o != nil && o.CbsCmnApbdis != nil {
		return true
	}

	return false
}

// SetCbsCmnApbdis gets a reference to the given string and assigns it to the CbsCmnApbdis field.
func (o *BiosPolicyAllOf) SetCbsCmnApbdis(v string) {
	o.CbsCmnApbdis = &v
}

// GetCbsCmnCpuCpb returns the CbsCmnCpuCpb field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuCpb() string {
	if o == nil || o.CbsCmnCpuCpb == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuCpb
}

// GetCbsCmnCpuCpbOk returns a tuple with the CbsCmnCpuCpb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuCpbOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuCpb == nil {
		return nil, false
	}
	return o.CbsCmnCpuCpb, true
}

// HasCbsCmnCpuCpb returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuCpb() bool {
	if o != nil && o.CbsCmnCpuCpb != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuCpb gets a reference to the given string and assigns it to the CbsCmnCpuCpb field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuCpb(v string) {
	o.CbsCmnCpuCpb = &v
}

// GetCbsCmnCpuGenDowncoreCtrl returns the CbsCmnCpuGenDowncoreCtrl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuGenDowncoreCtrl() string {
	if o == nil || o.CbsCmnCpuGenDowncoreCtrl == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuGenDowncoreCtrl
}

// GetCbsCmnCpuGenDowncoreCtrlOk returns a tuple with the CbsCmnCpuGenDowncoreCtrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuGenDowncoreCtrlOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuGenDowncoreCtrl == nil {
		return nil, false
	}
	return o.CbsCmnCpuGenDowncoreCtrl, true
}

// HasCbsCmnCpuGenDowncoreCtrl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuGenDowncoreCtrl() bool {
	if o != nil && o.CbsCmnCpuGenDowncoreCtrl != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuGenDowncoreCtrl gets a reference to the given string and assigns it to the CbsCmnCpuGenDowncoreCtrl field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuGenDowncoreCtrl(v string) {
	o.CbsCmnCpuGenDowncoreCtrl = &v
}

// GetCbsCmnCpuGlobalCstateCtrl returns the CbsCmnCpuGlobalCstateCtrl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuGlobalCstateCtrl() string {
	if o == nil || o.CbsCmnCpuGlobalCstateCtrl == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuGlobalCstateCtrl
}

// GetCbsCmnCpuGlobalCstateCtrlOk returns a tuple with the CbsCmnCpuGlobalCstateCtrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuGlobalCstateCtrlOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuGlobalCstateCtrl == nil {
		return nil, false
	}
	return o.CbsCmnCpuGlobalCstateCtrl, true
}

// HasCbsCmnCpuGlobalCstateCtrl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuGlobalCstateCtrl() bool {
	if o != nil && o.CbsCmnCpuGlobalCstateCtrl != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuGlobalCstateCtrl gets a reference to the given string and assigns it to the CbsCmnCpuGlobalCstateCtrl field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuGlobalCstateCtrl(v string) {
	o.CbsCmnCpuGlobalCstateCtrl = &v
}

// GetCbsCmnCpuL1streamHwPrefetcher returns the CbsCmnCpuL1streamHwPrefetcher field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuL1streamHwPrefetcher() string {
	if o == nil || o.CbsCmnCpuL1streamHwPrefetcher == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuL1streamHwPrefetcher
}

// GetCbsCmnCpuL1streamHwPrefetcherOk returns a tuple with the CbsCmnCpuL1streamHwPrefetcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuL1streamHwPrefetcherOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuL1streamHwPrefetcher == nil {
		return nil, false
	}
	return o.CbsCmnCpuL1streamHwPrefetcher, true
}

// HasCbsCmnCpuL1streamHwPrefetcher returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuL1streamHwPrefetcher() bool {
	if o != nil && o.CbsCmnCpuL1streamHwPrefetcher != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuL1streamHwPrefetcher gets a reference to the given string and assigns it to the CbsCmnCpuL1streamHwPrefetcher field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuL1streamHwPrefetcher(v string) {
	o.CbsCmnCpuL1streamHwPrefetcher = &v
}

// GetCbsCmnCpuL2streamHwPrefetcher returns the CbsCmnCpuL2streamHwPrefetcher field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuL2streamHwPrefetcher() string {
	if o == nil || o.CbsCmnCpuL2streamHwPrefetcher == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuL2streamHwPrefetcher
}

// GetCbsCmnCpuL2streamHwPrefetcherOk returns a tuple with the CbsCmnCpuL2streamHwPrefetcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuL2streamHwPrefetcherOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuL2streamHwPrefetcher == nil {
		return nil, false
	}
	return o.CbsCmnCpuL2streamHwPrefetcher, true
}

// HasCbsCmnCpuL2streamHwPrefetcher returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuL2streamHwPrefetcher() bool {
	if o != nil && o.CbsCmnCpuL2streamHwPrefetcher != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuL2streamHwPrefetcher gets a reference to the given string and assigns it to the CbsCmnCpuL2streamHwPrefetcher field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuL2streamHwPrefetcher(v string) {
	o.CbsCmnCpuL2streamHwPrefetcher = &v
}

// GetCbsCmnCpuSmee returns the CbsCmnCpuSmee field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuSmee() string {
	if o == nil || o.CbsCmnCpuSmee == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuSmee
}

// GetCbsCmnCpuSmeeOk returns a tuple with the CbsCmnCpuSmee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuSmeeOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuSmee == nil {
		return nil, false
	}
	return o.CbsCmnCpuSmee, true
}

// HasCbsCmnCpuSmee returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuSmee() bool {
	if o != nil && o.CbsCmnCpuSmee != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuSmee gets a reference to the given string and assigns it to the CbsCmnCpuSmee field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuSmee(v string) {
	o.CbsCmnCpuSmee = &v
}

// GetCbsCmnCpuStreamingStoresCtrl returns the CbsCmnCpuStreamingStoresCtrl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnCpuStreamingStoresCtrl() string {
	if o == nil || o.CbsCmnCpuStreamingStoresCtrl == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnCpuStreamingStoresCtrl
}

// GetCbsCmnCpuStreamingStoresCtrlOk returns a tuple with the CbsCmnCpuStreamingStoresCtrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnCpuStreamingStoresCtrlOk() (*string, bool) {
	if o == nil || o.CbsCmnCpuStreamingStoresCtrl == nil {
		return nil, false
	}
	return o.CbsCmnCpuStreamingStoresCtrl, true
}

// HasCbsCmnCpuStreamingStoresCtrl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnCpuStreamingStoresCtrl() bool {
	if o != nil && o.CbsCmnCpuStreamingStoresCtrl != nil {
		return true
	}

	return false
}

// SetCbsCmnCpuStreamingStoresCtrl gets a reference to the given string and assigns it to the CbsCmnCpuStreamingStoresCtrl field.
func (o *BiosPolicyAllOf) SetCbsCmnCpuStreamingStoresCtrl(v string) {
	o.CbsCmnCpuStreamingStoresCtrl = &v
}

// GetCbsCmnDeterminismSlider returns the CbsCmnDeterminismSlider field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnDeterminismSlider() string {
	if o == nil || o.CbsCmnDeterminismSlider == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnDeterminismSlider
}

// GetCbsCmnDeterminismSliderOk returns a tuple with the CbsCmnDeterminismSlider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnDeterminismSliderOk() (*string, bool) {
	if o == nil || o.CbsCmnDeterminismSlider == nil {
		return nil, false
	}
	return o.CbsCmnDeterminismSlider, true
}

// HasCbsCmnDeterminismSlider returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnDeterminismSlider() bool {
	if o != nil && o.CbsCmnDeterminismSlider != nil {
		return true
	}

	return false
}

// SetCbsCmnDeterminismSlider gets a reference to the given string and assigns it to the CbsCmnDeterminismSlider field.
func (o *BiosPolicyAllOf) SetCbsCmnDeterminismSlider(v string) {
	o.CbsCmnDeterminismSlider = &v
}

// GetCbsCmnEfficiencyModeEn returns the CbsCmnEfficiencyModeEn field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnEfficiencyModeEn() string {
	if o == nil || o.CbsCmnEfficiencyModeEn == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnEfficiencyModeEn
}

// GetCbsCmnEfficiencyModeEnOk returns a tuple with the CbsCmnEfficiencyModeEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnEfficiencyModeEnOk() (*string, bool) {
	if o == nil || o.CbsCmnEfficiencyModeEn == nil {
		return nil, false
	}
	return o.CbsCmnEfficiencyModeEn, true
}

// HasCbsCmnEfficiencyModeEn returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnEfficiencyModeEn() bool {
	if o != nil && o.CbsCmnEfficiencyModeEn != nil {
		return true
	}

	return false
}

// SetCbsCmnEfficiencyModeEn gets a reference to the given string and assigns it to the CbsCmnEfficiencyModeEn field.
func (o *BiosPolicyAllOf) SetCbsCmnEfficiencyModeEn(v string) {
	o.CbsCmnEfficiencyModeEn = &v
}

// GetCbsCmnFixedSocPstate returns the CbsCmnFixedSocPstate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnFixedSocPstate() string {
	if o == nil || o.CbsCmnFixedSocPstate == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnFixedSocPstate
}

// GetCbsCmnFixedSocPstateOk returns a tuple with the CbsCmnFixedSocPstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnFixedSocPstateOk() (*string, bool) {
	if o == nil || o.CbsCmnFixedSocPstate == nil {
		return nil, false
	}
	return o.CbsCmnFixedSocPstate, true
}

// HasCbsCmnFixedSocPstate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnFixedSocPstate() bool {
	if o != nil && o.CbsCmnFixedSocPstate != nil {
		return true
	}

	return false
}

// SetCbsCmnFixedSocPstate gets a reference to the given string and assigns it to the CbsCmnFixedSocPstate field.
func (o *BiosPolicyAllOf) SetCbsCmnFixedSocPstate(v string) {
	o.CbsCmnFixedSocPstate = &v
}

// GetCbsCmnGnbNbIommu returns the CbsCmnGnbNbIommu field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnGnbNbIommu() string {
	if o == nil || o.CbsCmnGnbNbIommu == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnGnbNbIommu
}

// GetCbsCmnGnbNbIommuOk returns a tuple with the CbsCmnGnbNbIommu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnGnbNbIommuOk() (*string, bool) {
	if o == nil || o.CbsCmnGnbNbIommu == nil {
		return nil, false
	}
	return o.CbsCmnGnbNbIommu, true
}

// HasCbsCmnGnbNbIommu returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnGnbNbIommu() bool {
	if o != nil && o.CbsCmnGnbNbIommu != nil {
		return true
	}

	return false
}

// SetCbsCmnGnbNbIommu gets a reference to the given string and assigns it to the CbsCmnGnbNbIommu field.
func (o *BiosPolicyAllOf) SetCbsCmnGnbNbIommu(v string) {
	o.CbsCmnGnbNbIommu = &v
}

// GetCbsCmnGnbSmuDfCstates returns the CbsCmnGnbSmuDfCstates field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnGnbSmuDfCstates() string {
	if o == nil || o.CbsCmnGnbSmuDfCstates == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnGnbSmuDfCstates
}

// GetCbsCmnGnbSmuDfCstatesOk returns a tuple with the CbsCmnGnbSmuDfCstates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnGnbSmuDfCstatesOk() (*string, bool) {
	if o == nil || o.CbsCmnGnbSmuDfCstates == nil {
		return nil, false
	}
	return o.CbsCmnGnbSmuDfCstates, true
}

// HasCbsCmnGnbSmuDfCstates returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnGnbSmuDfCstates() bool {
	if o != nil && o.CbsCmnGnbSmuDfCstates != nil {
		return true
	}

	return false
}

// SetCbsCmnGnbSmuDfCstates gets a reference to the given string and assigns it to the CbsCmnGnbSmuDfCstates field.
func (o *BiosPolicyAllOf) SetCbsCmnGnbSmuDfCstates(v string) {
	o.CbsCmnGnbSmuDfCstates = &v
}

// GetCbsCmnGnbSmucppc returns the CbsCmnGnbSmucppc field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnGnbSmucppc() string {
	if o == nil || o.CbsCmnGnbSmucppc == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnGnbSmucppc
}

// GetCbsCmnGnbSmucppcOk returns a tuple with the CbsCmnGnbSmucppc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnGnbSmucppcOk() (*string, bool) {
	if o == nil || o.CbsCmnGnbSmucppc == nil {
		return nil, false
	}
	return o.CbsCmnGnbSmucppc, true
}

// HasCbsCmnGnbSmucppc returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnGnbSmucppc() bool {
	if o != nil && o.CbsCmnGnbSmucppc != nil {
		return true
	}

	return false
}

// SetCbsCmnGnbSmucppc gets a reference to the given string and assigns it to the CbsCmnGnbSmucppc field.
func (o *BiosPolicyAllOf) SetCbsCmnGnbSmucppc(v string) {
	o.CbsCmnGnbSmucppc = &v
}

// GetCbsCmnMemCtrlBankGroupSwapDdr4 returns the CbsCmnMemCtrlBankGroupSwapDdr4 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnMemCtrlBankGroupSwapDdr4() string {
	if o == nil || o.CbsCmnMemCtrlBankGroupSwapDdr4 == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnMemCtrlBankGroupSwapDdr4
}

// GetCbsCmnMemCtrlBankGroupSwapDdr4Ok returns a tuple with the CbsCmnMemCtrlBankGroupSwapDdr4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnMemCtrlBankGroupSwapDdr4Ok() (*string, bool) {
	if o == nil || o.CbsCmnMemCtrlBankGroupSwapDdr4 == nil {
		return nil, false
	}
	return o.CbsCmnMemCtrlBankGroupSwapDdr4, true
}

// HasCbsCmnMemCtrlBankGroupSwapDdr4 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnMemCtrlBankGroupSwapDdr4() bool {
	if o != nil && o.CbsCmnMemCtrlBankGroupSwapDdr4 != nil {
		return true
	}

	return false
}

// SetCbsCmnMemCtrlBankGroupSwapDdr4 gets a reference to the given string and assigns it to the CbsCmnMemCtrlBankGroupSwapDdr4 field.
func (o *BiosPolicyAllOf) SetCbsCmnMemCtrlBankGroupSwapDdr4(v string) {
	o.CbsCmnMemCtrlBankGroupSwapDdr4 = &v
}

// GetCbsCmnMemMapBankInterleaveDdr4 returns the CbsCmnMemMapBankInterleaveDdr4 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmnMemMapBankInterleaveDdr4() string {
	if o == nil || o.CbsCmnMemMapBankInterleaveDdr4 == nil {
		var ret string
		return ret
	}
	return *o.CbsCmnMemMapBankInterleaveDdr4
}

// GetCbsCmnMemMapBankInterleaveDdr4Ok returns a tuple with the CbsCmnMemMapBankInterleaveDdr4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmnMemMapBankInterleaveDdr4Ok() (*string, bool) {
	if o == nil || o.CbsCmnMemMapBankInterleaveDdr4 == nil {
		return nil, false
	}
	return o.CbsCmnMemMapBankInterleaveDdr4, true
}

// HasCbsCmnMemMapBankInterleaveDdr4 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmnMemMapBankInterleaveDdr4() bool {
	if o != nil && o.CbsCmnMemMapBankInterleaveDdr4 != nil {
		return true
	}

	return false
}

// SetCbsCmnMemMapBankInterleaveDdr4 gets a reference to the given string and assigns it to the CbsCmnMemMapBankInterleaveDdr4 field.
func (o *BiosPolicyAllOf) SetCbsCmnMemMapBankInterleaveDdr4(v string) {
	o.CbsCmnMemMapBankInterleaveDdr4 = &v
}

// GetCbsCmncTdpCtl returns the CbsCmncTdpCtl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCmncTdpCtl() string {
	if o == nil || o.CbsCmncTdpCtl == nil {
		var ret string
		return ret
	}
	return *o.CbsCmncTdpCtl
}

// GetCbsCmncTdpCtlOk returns a tuple with the CbsCmncTdpCtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCmncTdpCtlOk() (*string, bool) {
	if o == nil || o.CbsCmncTdpCtl == nil {
		return nil, false
	}
	return o.CbsCmncTdpCtl, true
}

// HasCbsCmncTdpCtl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCmncTdpCtl() bool {
	if o != nil && o.CbsCmncTdpCtl != nil {
		return true
	}

	return false
}

// SetCbsCmncTdpCtl gets a reference to the given string and assigns it to the CbsCmncTdpCtl field.
func (o *BiosPolicyAllOf) SetCbsCmncTdpCtl(v string) {
	o.CbsCmncTdpCtl = &v
}

// GetCbsCpuCcdCtrlSsp returns the CbsCpuCcdCtrlSsp field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCpuCcdCtrlSsp() string {
	if o == nil || o.CbsCpuCcdCtrlSsp == nil {
		var ret string
		return ret
	}
	return *o.CbsCpuCcdCtrlSsp
}

// GetCbsCpuCcdCtrlSspOk returns a tuple with the CbsCpuCcdCtrlSsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCpuCcdCtrlSspOk() (*string, bool) {
	if o == nil || o.CbsCpuCcdCtrlSsp == nil {
		return nil, false
	}
	return o.CbsCpuCcdCtrlSsp, true
}

// HasCbsCpuCcdCtrlSsp returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCpuCcdCtrlSsp() bool {
	if o != nil && o.CbsCpuCcdCtrlSsp != nil {
		return true
	}

	return false
}

// SetCbsCpuCcdCtrlSsp gets a reference to the given string and assigns it to the CbsCpuCcdCtrlSsp field.
func (o *BiosPolicyAllOf) SetCbsCpuCcdCtrlSsp(v string) {
	o.CbsCpuCcdCtrlSsp = &v
}

// GetCbsCpuCoreCtrl returns the CbsCpuCoreCtrl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCpuCoreCtrl() string {
	if o == nil || o.CbsCpuCoreCtrl == nil {
		var ret string
		return ret
	}
	return *o.CbsCpuCoreCtrl
}

// GetCbsCpuCoreCtrlOk returns a tuple with the CbsCpuCoreCtrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCpuCoreCtrlOk() (*string, bool) {
	if o == nil || o.CbsCpuCoreCtrl == nil {
		return nil, false
	}
	return o.CbsCpuCoreCtrl, true
}

// HasCbsCpuCoreCtrl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCpuCoreCtrl() bool {
	if o != nil && o.CbsCpuCoreCtrl != nil {
		return true
	}

	return false
}

// SetCbsCpuCoreCtrl gets a reference to the given string and assigns it to the CbsCpuCoreCtrl field.
func (o *BiosPolicyAllOf) SetCbsCpuCoreCtrl(v string) {
	o.CbsCpuCoreCtrl = &v
}

// GetCbsCpuSmtCtrl returns the CbsCpuSmtCtrl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsCpuSmtCtrl() string {
	if o == nil || o.CbsCpuSmtCtrl == nil {
		var ret string
		return ret
	}
	return *o.CbsCpuSmtCtrl
}

// GetCbsCpuSmtCtrlOk returns a tuple with the CbsCpuSmtCtrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsCpuSmtCtrlOk() (*string, bool) {
	if o == nil || o.CbsCpuSmtCtrl == nil {
		return nil, false
	}
	return o.CbsCpuSmtCtrl, true
}

// HasCbsCpuSmtCtrl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsCpuSmtCtrl() bool {
	if o != nil && o.CbsCpuSmtCtrl != nil {
		return true
	}

	return false
}

// SetCbsCpuSmtCtrl gets a reference to the given string and assigns it to the CbsCpuSmtCtrl field.
func (o *BiosPolicyAllOf) SetCbsCpuSmtCtrl(v string) {
	o.CbsCpuSmtCtrl = &v
}

// GetCbsDbgCpuSnpMemCover returns the CbsDbgCpuSnpMemCover field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDbgCpuSnpMemCover() string {
	if o == nil || o.CbsDbgCpuSnpMemCover == nil {
		var ret string
		return ret
	}
	return *o.CbsDbgCpuSnpMemCover
}

// GetCbsDbgCpuSnpMemCoverOk returns a tuple with the CbsDbgCpuSnpMemCover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDbgCpuSnpMemCoverOk() (*string, bool) {
	if o == nil || o.CbsDbgCpuSnpMemCover == nil {
		return nil, false
	}
	return o.CbsDbgCpuSnpMemCover, true
}

// HasCbsDbgCpuSnpMemCover returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDbgCpuSnpMemCover() bool {
	if o != nil && o.CbsDbgCpuSnpMemCover != nil {
		return true
	}

	return false
}

// SetCbsDbgCpuSnpMemCover gets a reference to the given string and assigns it to the CbsDbgCpuSnpMemCover field.
func (o *BiosPolicyAllOf) SetCbsDbgCpuSnpMemCover(v string) {
	o.CbsDbgCpuSnpMemCover = &v
}

// GetCbsDbgCpuSnpMemSizeCover returns the CbsDbgCpuSnpMemSizeCover field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDbgCpuSnpMemSizeCover() string {
	if o == nil || o.CbsDbgCpuSnpMemSizeCover == nil {
		var ret string
		return ret
	}
	return *o.CbsDbgCpuSnpMemSizeCover
}

// GetCbsDbgCpuSnpMemSizeCoverOk returns a tuple with the CbsDbgCpuSnpMemSizeCover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDbgCpuSnpMemSizeCoverOk() (*string, bool) {
	if o == nil || o.CbsDbgCpuSnpMemSizeCover == nil {
		return nil, false
	}
	return o.CbsDbgCpuSnpMemSizeCover, true
}

// HasCbsDbgCpuSnpMemSizeCover returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDbgCpuSnpMemSizeCover() bool {
	if o != nil && o.CbsDbgCpuSnpMemSizeCover != nil {
		return true
	}

	return false
}

// SetCbsDbgCpuSnpMemSizeCover gets a reference to the given string and assigns it to the CbsDbgCpuSnpMemSizeCover field.
func (o *BiosPolicyAllOf) SetCbsDbgCpuSnpMemSizeCover(v string) {
	o.CbsDbgCpuSnpMemSizeCover = &v
}

// GetCbsDfCmnAcpiSratL3numa returns the CbsDfCmnAcpiSratL3numa field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDfCmnAcpiSratL3numa() string {
	if o == nil || o.CbsDfCmnAcpiSratL3numa == nil {
		var ret string
		return ret
	}
	return *o.CbsDfCmnAcpiSratL3numa
}

// GetCbsDfCmnAcpiSratL3numaOk returns a tuple with the CbsDfCmnAcpiSratL3numa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDfCmnAcpiSratL3numaOk() (*string, bool) {
	if o == nil || o.CbsDfCmnAcpiSratL3numa == nil {
		return nil, false
	}
	return o.CbsDfCmnAcpiSratL3numa, true
}

// HasCbsDfCmnAcpiSratL3numa returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDfCmnAcpiSratL3numa() bool {
	if o != nil && o.CbsDfCmnAcpiSratL3numa != nil {
		return true
	}

	return false
}

// SetCbsDfCmnAcpiSratL3numa gets a reference to the given string and assigns it to the CbsDfCmnAcpiSratL3numa field.
func (o *BiosPolicyAllOf) SetCbsDfCmnAcpiSratL3numa(v string) {
	o.CbsDfCmnAcpiSratL3numa = &v
}

// GetCbsDfCmnDramNps returns the CbsDfCmnDramNps field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDfCmnDramNps() string {
	if o == nil || o.CbsDfCmnDramNps == nil {
		var ret string
		return ret
	}
	return *o.CbsDfCmnDramNps
}

// GetCbsDfCmnDramNpsOk returns a tuple with the CbsDfCmnDramNps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDfCmnDramNpsOk() (*string, bool) {
	if o == nil || o.CbsDfCmnDramNps == nil {
		return nil, false
	}
	return o.CbsDfCmnDramNps, true
}

// HasCbsDfCmnDramNps returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDfCmnDramNps() bool {
	if o != nil && o.CbsDfCmnDramNps != nil {
		return true
	}

	return false
}

// SetCbsDfCmnDramNps gets a reference to the given string and assigns it to the CbsDfCmnDramNps field.
func (o *BiosPolicyAllOf) SetCbsDfCmnDramNps(v string) {
	o.CbsDfCmnDramNps = &v
}

// GetCbsDfCmnMemIntlv returns the CbsDfCmnMemIntlv field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDfCmnMemIntlv() string {
	if o == nil || o.CbsDfCmnMemIntlv == nil {
		var ret string
		return ret
	}
	return *o.CbsDfCmnMemIntlv
}

// GetCbsDfCmnMemIntlvOk returns a tuple with the CbsDfCmnMemIntlv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDfCmnMemIntlvOk() (*string, bool) {
	if o == nil || o.CbsDfCmnMemIntlv == nil {
		return nil, false
	}
	return o.CbsDfCmnMemIntlv, true
}

// HasCbsDfCmnMemIntlv returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDfCmnMemIntlv() bool {
	if o != nil && o.CbsDfCmnMemIntlv != nil {
		return true
	}

	return false
}

// SetCbsDfCmnMemIntlv gets a reference to the given string and assigns it to the CbsDfCmnMemIntlv field.
func (o *BiosPolicyAllOf) SetCbsDfCmnMemIntlv(v string) {
	o.CbsDfCmnMemIntlv = &v
}

// GetCbsDfCmnMemIntlvSize returns the CbsDfCmnMemIntlvSize field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsDfCmnMemIntlvSize() string {
	if o == nil || o.CbsDfCmnMemIntlvSize == nil {
		var ret string
		return ret
	}
	return *o.CbsDfCmnMemIntlvSize
}

// GetCbsDfCmnMemIntlvSizeOk returns a tuple with the CbsDfCmnMemIntlvSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsDfCmnMemIntlvSizeOk() (*string, bool) {
	if o == nil || o.CbsDfCmnMemIntlvSize == nil {
		return nil, false
	}
	return o.CbsDfCmnMemIntlvSize, true
}

// HasCbsDfCmnMemIntlvSize returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsDfCmnMemIntlvSize() bool {
	if o != nil && o.CbsDfCmnMemIntlvSize != nil {
		return true
	}

	return false
}

// SetCbsDfCmnMemIntlvSize gets a reference to the given string and assigns it to the CbsDfCmnMemIntlvSize field.
func (o *BiosPolicyAllOf) SetCbsDfCmnMemIntlvSize(v string) {
	o.CbsDfCmnMemIntlvSize = &v
}

// GetCbsSevSnpSupport returns the CbsSevSnpSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCbsSevSnpSupport() string {
	if o == nil || o.CbsSevSnpSupport == nil {
		var ret string
		return ret
	}
	return *o.CbsSevSnpSupport
}

// GetCbsSevSnpSupportOk returns a tuple with the CbsSevSnpSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCbsSevSnpSupportOk() (*string, bool) {
	if o == nil || o.CbsSevSnpSupport == nil {
		return nil, false
	}
	return o.CbsSevSnpSupport, true
}

// HasCbsSevSnpSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCbsSevSnpSupport() bool {
	if o != nil && o.CbsSevSnpSupport != nil {
		return true
	}

	return false
}

// SetCbsSevSnpSupport gets a reference to the given string and assigns it to the CbsSevSnpSupport field.
func (o *BiosPolicyAllOf) SetCbsSevSnpSupport(v string) {
	o.CbsSevSnpSupport = &v
}

// GetCdnEnable returns the CdnEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCdnEnable() string {
	if o == nil || o.CdnEnable == nil {
		var ret string
		return ret
	}
	return *o.CdnEnable
}

// GetCdnEnableOk returns a tuple with the CdnEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCdnEnableOk() (*string, bool) {
	if o == nil || o.CdnEnable == nil {
		return nil, false
	}
	return o.CdnEnable, true
}

// HasCdnEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCdnEnable() bool {
	if o != nil && o.CdnEnable != nil {
		return true
	}

	return false
}

// SetCdnEnable gets a reference to the given string and assigns it to the CdnEnable field.
func (o *BiosPolicyAllOf) SetCdnEnable(v string) {
	o.CdnEnable = &v
}

// GetCdnSupport returns the CdnSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCdnSupport() string {
	if o == nil || o.CdnSupport == nil {
		var ret string
		return ret
	}
	return *o.CdnSupport
}

// GetCdnSupportOk returns a tuple with the CdnSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCdnSupportOk() (*string, bool) {
	if o == nil || o.CdnSupport == nil {
		return nil, false
	}
	return o.CdnSupport, true
}

// HasCdnSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCdnSupport() bool {
	if o != nil && o.CdnSupport != nil {
		return true
	}

	return false
}

// SetCdnSupport gets a reference to the given string and assigns it to the CdnSupport field.
func (o *BiosPolicyAllOf) SetCdnSupport(v string) {
	o.CdnSupport = &v
}

// GetChannelInterLeave returns the ChannelInterLeave field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetChannelInterLeave() string {
	if o == nil || o.ChannelInterLeave == nil {
		var ret string
		return ret
	}
	return *o.ChannelInterLeave
}

// GetChannelInterLeaveOk returns a tuple with the ChannelInterLeave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetChannelInterLeaveOk() (*string, bool) {
	if o == nil || o.ChannelInterLeave == nil {
		return nil, false
	}
	return o.ChannelInterLeave, true
}

// HasChannelInterLeave returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasChannelInterLeave() bool {
	if o != nil && o.ChannelInterLeave != nil {
		return true
	}

	return false
}

// SetChannelInterLeave gets a reference to the given string and assigns it to the ChannelInterLeave field.
func (o *BiosPolicyAllOf) SetChannelInterLeave(v string) {
	o.ChannelInterLeave = &v
}

// GetCiscoAdaptiveMemTraining returns the CiscoAdaptiveMemTraining field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCiscoAdaptiveMemTraining() string {
	if o == nil || o.CiscoAdaptiveMemTraining == nil {
		var ret string
		return ret
	}
	return *o.CiscoAdaptiveMemTraining
}

// GetCiscoAdaptiveMemTrainingOk returns a tuple with the CiscoAdaptiveMemTraining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCiscoAdaptiveMemTrainingOk() (*string, bool) {
	if o == nil || o.CiscoAdaptiveMemTraining == nil {
		return nil, false
	}
	return o.CiscoAdaptiveMemTraining, true
}

// HasCiscoAdaptiveMemTraining returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCiscoAdaptiveMemTraining() bool {
	if o != nil && o.CiscoAdaptiveMemTraining != nil {
		return true
	}

	return false
}

// SetCiscoAdaptiveMemTraining gets a reference to the given string and assigns it to the CiscoAdaptiveMemTraining field.
func (o *BiosPolicyAllOf) SetCiscoAdaptiveMemTraining(v string) {
	o.CiscoAdaptiveMemTraining = &v
}

// GetCiscoDebugLevel returns the CiscoDebugLevel field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCiscoDebugLevel() string {
	if o == nil || o.CiscoDebugLevel == nil {
		var ret string
		return ret
	}
	return *o.CiscoDebugLevel
}

// GetCiscoDebugLevelOk returns a tuple with the CiscoDebugLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCiscoDebugLevelOk() (*string, bool) {
	if o == nil || o.CiscoDebugLevel == nil {
		return nil, false
	}
	return o.CiscoDebugLevel, true
}

// HasCiscoDebugLevel returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCiscoDebugLevel() bool {
	if o != nil && o.CiscoDebugLevel != nil {
		return true
	}

	return false
}

// SetCiscoDebugLevel gets a reference to the given string and assigns it to the CiscoDebugLevel field.
func (o *BiosPolicyAllOf) SetCiscoDebugLevel(v string) {
	o.CiscoDebugLevel = &v
}

// GetCiscoOpromLaunchOptimization returns the CiscoOpromLaunchOptimization field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCiscoOpromLaunchOptimization() string {
	if o == nil || o.CiscoOpromLaunchOptimization == nil {
		var ret string
		return ret
	}
	return *o.CiscoOpromLaunchOptimization
}

// GetCiscoOpromLaunchOptimizationOk returns a tuple with the CiscoOpromLaunchOptimization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCiscoOpromLaunchOptimizationOk() (*string, bool) {
	if o == nil || o.CiscoOpromLaunchOptimization == nil {
		return nil, false
	}
	return o.CiscoOpromLaunchOptimization, true
}

// HasCiscoOpromLaunchOptimization returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCiscoOpromLaunchOptimization() bool {
	if o != nil && o.CiscoOpromLaunchOptimization != nil {
		return true
	}

	return false
}

// SetCiscoOpromLaunchOptimization gets a reference to the given string and assigns it to the CiscoOpromLaunchOptimization field.
func (o *BiosPolicyAllOf) SetCiscoOpromLaunchOptimization(v string) {
	o.CiscoOpromLaunchOptimization = &v
}

// GetCiscoXgmiMaxSpeed returns the CiscoXgmiMaxSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCiscoXgmiMaxSpeed() string {
	if o == nil || o.CiscoXgmiMaxSpeed == nil {
		var ret string
		return ret
	}
	return *o.CiscoXgmiMaxSpeed
}

// GetCiscoXgmiMaxSpeedOk returns a tuple with the CiscoXgmiMaxSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCiscoXgmiMaxSpeedOk() (*string, bool) {
	if o == nil || o.CiscoXgmiMaxSpeed == nil {
		return nil, false
	}
	return o.CiscoXgmiMaxSpeed, true
}

// HasCiscoXgmiMaxSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCiscoXgmiMaxSpeed() bool {
	if o != nil && o.CiscoXgmiMaxSpeed != nil {
		return true
	}

	return false
}

// SetCiscoXgmiMaxSpeed gets a reference to the given string and assigns it to the CiscoXgmiMaxSpeed field.
func (o *BiosPolicyAllOf) SetCiscoXgmiMaxSpeed(v string) {
	o.CiscoXgmiMaxSpeed = &v
}

// GetCkeLowPolicy returns the CkeLowPolicy field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCkeLowPolicy() string {
	if o == nil || o.CkeLowPolicy == nil {
		var ret string
		return ret
	}
	return *o.CkeLowPolicy
}

// GetCkeLowPolicyOk returns a tuple with the CkeLowPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCkeLowPolicyOk() (*string, bool) {
	if o == nil || o.CkeLowPolicy == nil {
		return nil, false
	}
	return o.CkeLowPolicy, true
}

// HasCkeLowPolicy returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCkeLowPolicy() bool {
	if o != nil && o.CkeLowPolicy != nil {
		return true
	}

	return false
}

// SetCkeLowPolicy gets a reference to the given string and assigns it to the CkeLowPolicy field.
func (o *BiosPolicyAllOf) SetCkeLowPolicy(v string) {
	o.CkeLowPolicy = &v
}

// GetClosedLoopThermThrotl returns the ClosedLoopThermThrotl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetClosedLoopThermThrotl() string {
	if o == nil || o.ClosedLoopThermThrotl == nil {
		var ret string
		return ret
	}
	return *o.ClosedLoopThermThrotl
}

// GetClosedLoopThermThrotlOk returns a tuple with the ClosedLoopThermThrotl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetClosedLoopThermThrotlOk() (*string, bool) {
	if o == nil || o.ClosedLoopThermThrotl == nil {
		return nil, false
	}
	return o.ClosedLoopThermThrotl, true
}

// HasClosedLoopThermThrotl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasClosedLoopThermThrotl() bool {
	if o != nil && o.ClosedLoopThermThrotl != nil {
		return true
	}

	return false
}

// SetClosedLoopThermThrotl gets a reference to the given string and assigns it to the ClosedLoopThermThrotl field.
func (o *BiosPolicyAllOf) SetClosedLoopThermThrotl(v string) {
	o.ClosedLoopThermThrotl = &v
}

// GetCmciEnable returns the CmciEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCmciEnable() string {
	if o == nil || o.CmciEnable == nil {
		var ret string
		return ret
	}
	return *o.CmciEnable
}

// GetCmciEnableOk returns a tuple with the CmciEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCmciEnableOk() (*string, bool) {
	if o == nil || o.CmciEnable == nil {
		return nil, false
	}
	return o.CmciEnable, true
}

// HasCmciEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCmciEnable() bool {
	if o != nil && o.CmciEnable != nil {
		return true
	}

	return false
}

// SetCmciEnable gets a reference to the given string and assigns it to the CmciEnable field.
func (o *BiosPolicyAllOf) SetCmciEnable(v string) {
	o.CmciEnable = &v
}

// GetConfigTdp returns the ConfigTdp field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetConfigTdp() string {
	if o == nil || o.ConfigTdp == nil {
		var ret string
		return ret
	}
	return *o.ConfigTdp
}

// GetConfigTdpOk returns a tuple with the ConfigTdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetConfigTdpOk() (*string, bool) {
	if o == nil || o.ConfigTdp == nil {
		return nil, false
	}
	return o.ConfigTdp, true
}

// HasConfigTdp returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasConfigTdp() bool {
	if o != nil && o.ConfigTdp != nil {
		return true
	}

	return false
}

// SetConfigTdp gets a reference to the given string and assigns it to the ConfigTdp field.
func (o *BiosPolicyAllOf) SetConfigTdp(v string) {
	o.ConfigTdp = &v
}

// GetConfigTdpLevel returns the ConfigTdpLevel field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetConfigTdpLevel() string {
	if o == nil || o.ConfigTdpLevel == nil {
		var ret string
		return ret
	}
	return *o.ConfigTdpLevel
}

// GetConfigTdpLevelOk returns a tuple with the ConfigTdpLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetConfigTdpLevelOk() (*string, bool) {
	if o == nil || o.ConfigTdpLevel == nil {
		return nil, false
	}
	return o.ConfigTdpLevel, true
}

// HasConfigTdpLevel returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasConfigTdpLevel() bool {
	if o != nil && o.ConfigTdpLevel != nil {
		return true
	}

	return false
}

// SetConfigTdpLevel gets a reference to the given string and assigns it to the ConfigTdpLevel field.
func (o *BiosPolicyAllOf) SetConfigTdpLevel(v string) {
	o.ConfigTdpLevel = &v
}

// GetConsoleRedirection returns the ConsoleRedirection field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetConsoleRedirection() string {
	if o == nil || o.ConsoleRedirection == nil {
		var ret string
		return ret
	}
	return *o.ConsoleRedirection
}

// GetConsoleRedirectionOk returns a tuple with the ConsoleRedirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetConsoleRedirectionOk() (*string, bool) {
	if o == nil || o.ConsoleRedirection == nil {
		return nil, false
	}
	return o.ConsoleRedirection, true
}

// HasConsoleRedirection returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasConsoleRedirection() bool {
	if o != nil && o.ConsoleRedirection != nil {
		return true
	}

	return false
}

// SetConsoleRedirection gets a reference to the given string and assigns it to the ConsoleRedirection field.
func (o *BiosPolicyAllOf) SetConsoleRedirection(v string) {
	o.ConsoleRedirection = &v
}

// GetCoreMultiProcessing returns the CoreMultiProcessing field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCoreMultiProcessing() string {
	if o == nil || o.CoreMultiProcessing == nil {
		var ret string
		return ret
	}
	return *o.CoreMultiProcessing
}

// GetCoreMultiProcessingOk returns a tuple with the CoreMultiProcessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCoreMultiProcessingOk() (*string, bool) {
	if o == nil || o.CoreMultiProcessing == nil {
		return nil, false
	}
	return o.CoreMultiProcessing, true
}

// HasCoreMultiProcessing returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCoreMultiProcessing() bool {
	if o != nil && o.CoreMultiProcessing != nil {
		return true
	}

	return false
}

// SetCoreMultiProcessing gets a reference to the given string and assigns it to the CoreMultiProcessing field.
func (o *BiosPolicyAllOf) SetCoreMultiProcessing(v string) {
	o.CoreMultiProcessing = &v
}

// GetCpuEnergyPerformance returns the CpuEnergyPerformance field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCpuEnergyPerformance() string {
	if o == nil || o.CpuEnergyPerformance == nil {
		var ret string
		return ret
	}
	return *o.CpuEnergyPerformance
}

// GetCpuEnergyPerformanceOk returns a tuple with the CpuEnergyPerformance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCpuEnergyPerformanceOk() (*string, bool) {
	if o == nil || o.CpuEnergyPerformance == nil {
		return nil, false
	}
	return o.CpuEnergyPerformance, true
}

// HasCpuEnergyPerformance returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCpuEnergyPerformance() bool {
	if o != nil && o.CpuEnergyPerformance != nil {
		return true
	}

	return false
}

// SetCpuEnergyPerformance gets a reference to the given string and assigns it to the CpuEnergyPerformance field.
func (o *BiosPolicyAllOf) SetCpuEnergyPerformance(v string) {
	o.CpuEnergyPerformance = &v
}

// GetCpuFrequencyFloor returns the CpuFrequencyFloor field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCpuFrequencyFloor() string {
	if o == nil || o.CpuFrequencyFloor == nil {
		var ret string
		return ret
	}
	return *o.CpuFrequencyFloor
}

// GetCpuFrequencyFloorOk returns a tuple with the CpuFrequencyFloor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCpuFrequencyFloorOk() (*string, bool) {
	if o == nil || o.CpuFrequencyFloor == nil {
		return nil, false
	}
	return o.CpuFrequencyFloor, true
}

// HasCpuFrequencyFloor returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCpuFrequencyFloor() bool {
	if o != nil && o.CpuFrequencyFloor != nil {
		return true
	}

	return false
}

// SetCpuFrequencyFloor gets a reference to the given string and assigns it to the CpuFrequencyFloor field.
func (o *BiosPolicyAllOf) SetCpuFrequencyFloor(v string) {
	o.CpuFrequencyFloor = &v
}

// GetCpuPerformance returns the CpuPerformance field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCpuPerformance() string {
	if o == nil || o.CpuPerformance == nil {
		var ret string
		return ret
	}
	return *o.CpuPerformance
}

// GetCpuPerformanceOk returns a tuple with the CpuPerformance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCpuPerformanceOk() (*string, bool) {
	if o == nil || o.CpuPerformance == nil {
		return nil, false
	}
	return o.CpuPerformance, true
}

// HasCpuPerformance returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCpuPerformance() bool {
	if o != nil && o.CpuPerformance != nil {
		return true
	}

	return false
}

// SetCpuPerformance gets a reference to the given string and assigns it to the CpuPerformance field.
func (o *BiosPolicyAllOf) SetCpuPerformance(v string) {
	o.CpuPerformance = &v
}

// GetCpuPowerManagement returns the CpuPowerManagement field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCpuPowerManagement() string {
	if o == nil || o.CpuPowerManagement == nil {
		var ret string
		return ret
	}
	return *o.CpuPowerManagement
}

// GetCpuPowerManagementOk returns a tuple with the CpuPowerManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCpuPowerManagementOk() (*string, bool) {
	if o == nil || o.CpuPowerManagement == nil {
		return nil, false
	}
	return o.CpuPowerManagement, true
}

// HasCpuPowerManagement returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCpuPowerManagement() bool {
	if o != nil && o.CpuPowerManagement != nil {
		return true
	}

	return false
}

// SetCpuPowerManagement gets a reference to the given string and assigns it to the CpuPowerManagement field.
func (o *BiosPolicyAllOf) SetCpuPowerManagement(v string) {
	o.CpuPowerManagement = &v
}

// GetCrQos returns the CrQos field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCrQos() string {
	if o == nil || o.CrQos == nil {
		var ret string
		return ret
	}
	return *o.CrQos
}

// GetCrQosOk returns a tuple with the CrQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCrQosOk() (*string, bool) {
	if o == nil || o.CrQos == nil {
		return nil, false
	}
	return o.CrQos, true
}

// HasCrQos returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCrQos() bool {
	if o != nil && o.CrQos != nil {
		return true
	}

	return false
}

// SetCrQos gets a reference to the given string and assigns it to the CrQos field.
func (o *BiosPolicyAllOf) SetCrQos(v string) {
	o.CrQos = &v
}

// GetCrfastgoConfig returns the CrfastgoConfig field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetCrfastgoConfig() string {
	if o == nil || o.CrfastgoConfig == nil {
		var ret string
		return ret
	}
	return *o.CrfastgoConfig
}

// GetCrfastgoConfigOk returns a tuple with the CrfastgoConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetCrfastgoConfigOk() (*string, bool) {
	if o == nil || o.CrfastgoConfig == nil {
		return nil, false
	}
	return o.CrfastgoConfig, true
}

// HasCrfastgoConfig returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasCrfastgoConfig() bool {
	if o != nil && o.CrfastgoConfig != nil {
		return true
	}

	return false
}

// SetCrfastgoConfig gets a reference to the given string and assigns it to the CrfastgoConfig field.
func (o *BiosPolicyAllOf) SetCrfastgoConfig(v string) {
	o.CrfastgoConfig = &v
}

// GetDcpmmFirmwareDowngrade returns the DcpmmFirmwareDowngrade field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDcpmmFirmwareDowngrade() string {
	if o == nil || o.DcpmmFirmwareDowngrade == nil {
		var ret string
		return ret
	}
	return *o.DcpmmFirmwareDowngrade
}

// GetDcpmmFirmwareDowngradeOk returns a tuple with the DcpmmFirmwareDowngrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDcpmmFirmwareDowngradeOk() (*string, bool) {
	if o == nil || o.DcpmmFirmwareDowngrade == nil {
		return nil, false
	}
	return o.DcpmmFirmwareDowngrade, true
}

// HasDcpmmFirmwareDowngrade returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDcpmmFirmwareDowngrade() bool {
	if o != nil && o.DcpmmFirmwareDowngrade != nil {
		return true
	}

	return false
}

// SetDcpmmFirmwareDowngrade gets a reference to the given string and assigns it to the DcpmmFirmwareDowngrade field.
func (o *BiosPolicyAllOf) SetDcpmmFirmwareDowngrade(v string) {
	o.DcpmmFirmwareDowngrade = &v
}

// GetDemandScrub returns the DemandScrub field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDemandScrub() string {
	if o == nil || o.DemandScrub == nil {
		var ret string
		return ret
	}
	return *o.DemandScrub
}

// GetDemandScrubOk returns a tuple with the DemandScrub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDemandScrubOk() (*string, bool) {
	if o == nil || o.DemandScrub == nil {
		return nil, false
	}
	return o.DemandScrub, true
}

// HasDemandScrub returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDemandScrub() bool {
	if o != nil && o.DemandScrub != nil {
		return true
	}

	return false
}

// SetDemandScrub gets a reference to the given string and assigns it to the DemandScrub field.
func (o *BiosPolicyAllOf) SetDemandScrub(v string) {
	o.DemandScrub = &v
}

// GetDirectCacheAccess returns the DirectCacheAccess field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDirectCacheAccess() string {
	if o == nil || o.DirectCacheAccess == nil {
		var ret string
		return ret
	}
	return *o.DirectCacheAccess
}

// GetDirectCacheAccessOk returns a tuple with the DirectCacheAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDirectCacheAccessOk() (*string, bool) {
	if o == nil || o.DirectCacheAccess == nil {
		return nil, false
	}
	return o.DirectCacheAccess, true
}

// HasDirectCacheAccess returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDirectCacheAccess() bool {
	if o != nil && o.DirectCacheAccess != nil {
		return true
	}

	return false
}

// SetDirectCacheAccess gets a reference to the given string and assigns it to the DirectCacheAccess field.
func (o *BiosPolicyAllOf) SetDirectCacheAccess(v string) {
	o.DirectCacheAccess = &v
}

// GetDramClockThrottling returns the DramClockThrottling field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDramClockThrottling() string {
	if o == nil || o.DramClockThrottling == nil {
		var ret string
		return ret
	}
	return *o.DramClockThrottling
}

// GetDramClockThrottlingOk returns a tuple with the DramClockThrottling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDramClockThrottlingOk() (*string, bool) {
	if o == nil || o.DramClockThrottling == nil {
		return nil, false
	}
	return o.DramClockThrottling, true
}

// HasDramClockThrottling returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDramClockThrottling() bool {
	if o != nil && o.DramClockThrottling != nil {
		return true
	}

	return false
}

// SetDramClockThrottling gets a reference to the given string and assigns it to the DramClockThrottling field.
func (o *BiosPolicyAllOf) SetDramClockThrottling(v string) {
	o.DramClockThrottling = &v
}

// GetDramRefreshRate returns the DramRefreshRate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDramRefreshRate() string {
	if o == nil || o.DramRefreshRate == nil {
		var ret string
		return ret
	}
	return *o.DramRefreshRate
}

// GetDramRefreshRateOk returns a tuple with the DramRefreshRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDramRefreshRateOk() (*string, bool) {
	if o == nil || o.DramRefreshRate == nil {
		return nil, false
	}
	return o.DramRefreshRate, true
}

// HasDramRefreshRate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDramRefreshRate() bool {
	if o != nil && o.DramRefreshRate != nil {
		return true
	}

	return false
}

// SetDramRefreshRate gets a reference to the given string and assigns it to the DramRefreshRate field.
func (o *BiosPolicyAllOf) SetDramRefreshRate(v string) {
	o.DramRefreshRate = &v
}

// GetDramSwThermalThrottling returns the DramSwThermalThrottling field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetDramSwThermalThrottling() string {
	if o == nil || o.DramSwThermalThrottling == nil {
		var ret string
		return ret
	}
	return *o.DramSwThermalThrottling
}

// GetDramSwThermalThrottlingOk returns a tuple with the DramSwThermalThrottling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetDramSwThermalThrottlingOk() (*string, bool) {
	if o == nil || o.DramSwThermalThrottling == nil {
		return nil, false
	}
	return o.DramSwThermalThrottling, true
}

// HasDramSwThermalThrottling returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasDramSwThermalThrottling() bool {
	if o != nil && o.DramSwThermalThrottling != nil {
		return true
	}

	return false
}

// SetDramSwThermalThrottling gets a reference to the given string and assigns it to the DramSwThermalThrottling field.
func (o *BiosPolicyAllOf) SetDramSwThermalThrottling(v string) {
	o.DramSwThermalThrottling = &v
}

// GetEadrSupport returns the EadrSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEadrSupport() string {
	if o == nil || o.EadrSupport == nil {
		var ret string
		return ret
	}
	return *o.EadrSupport
}

// GetEadrSupportOk returns a tuple with the EadrSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEadrSupportOk() (*string, bool) {
	if o == nil || o.EadrSupport == nil {
		return nil, false
	}
	return o.EadrSupport, true
}

// HasEadrSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEadrSupport() bool {
	if o != nil && o.EadrSupport != nil {
		return true
	}

	return false
}

// SetEadrSupport gets a reference to the given string and assigns it to the EadrSupport field.
func (o *BiosPolicyAllOf) SetEadrSupport(v string) {
	o.EadrSupport = &v
}

// GetEdpcEn returns the EdpcEn field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEdpcEn() string {
	if o == nil || o.EdpcEn == nil {
		var ret string
		return ret
	}
	return *o.EdpcEn
}

// GetEdpcEnOk returns a tuple with the EdpcEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEdpcEnOk() (*string, bool) {
	if o == nil || o.EdpcEn == nil {
		return nil, false
	}
	return o.EdpcEn, true
}

// HasEdpcEn returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEdpcEn() bool {
	if o != nil && o.EdpcEn != nil {
		return true
	}

	return false
}

// SetEdpcEn gets a reference to the given string and assigns it to the EdpcEn field.
func (o *BiosPolicyAllOf) SetEdpcEn(v string) {
	o.EdpcEn = &v
}

// GetEnableClockSpreadSpec returns the EnableClockSpreadSpec field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnableClockSpreadSpec() string {
	if o == nil || o.EnableClockSpreadSpec == nil {
		var ret string
		return ret
	}
	return *o.EnableClockSpreadSpec
}

// GetEnableClockSpreadSpecOk returns a tuple with the EnableClockSpreadSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnableClockSpreadSpecOk() (*string, bool) {
	if o == nil || o.EnableClockSpreadSpec == nil {
		return nil, false
	}
	return o.EnableClockSpreadSpec, true
}

// HasEnableClockSpreadSpec returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnableClockSpreadSpec() bool {
	if o != nil && o.EnableClockSpreadSpec != nil {
		return true
	}

	return false
}

// SetEnableClockSpreadSpec gets a reference to the given string and assigns it to the EnableClockSpreadSpec field.
func (o *BiosPolicyAllOf) SetEnableClockSpreadSpec(v string) {
	o.EnableClockSpreadSpec = &v
}

// GetEnableMktme returns the EnableMktme field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnableMktme() string {
	if o == nil || o.EnableMktme == nil {
		var ret string
		return ret
	}
	return *o.EnableMktme
}

// GetEnableMktmeOk returns a tuple with the EnableMktme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnableMktmeOk() (*string, bool) {
	if o == nil || o.EnableMktme == nil {
		return nil, false
	}
	return o.EnableMktme, true
}

// HasEnableMktme returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnableMktme() bool {
	if o != nil && o.EnableMktme != nil {
		return true
	}

	return false
}

// SetEnableMktme gets a reference to the given string and assigns it to the EnableMktme field.
func (o *BiosPolicyAllOf) SetEnableMktme(v string) {
	o.EnableMktme = &v
}

// GetEnableSgx returns the EnableSgx field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnableSgx() string {
	if o == nil || o.EnableSgx == nil {
		var ret string
		return ret
	}
	return *o.EnableSgx
}

// GetEnableSgxOk returns a tuple with the EnableSgx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnableSgxOk() (*string, bool) {
	if o == nil || o.EnableSgx == nil {
		return nil, false
	}
	return o.EnableSgx, true
}

// HasEnableSgx returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnableSgx() bool {
	if o != nil && o.EnableSgx != nil {
		return true
	}

	return false
}

// SetEnableSgx gets a reference to the given string and assigns it to the EnableSgx field.
func (o *BiosPolicyAllOf) SetEnableSgx(v string) {
	o.EnableSgx = &v
}

// GetEnableTme returns the EnableTme field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnableTme() string {
	if o == nil || o.EnableTme == nil {
		var ret string
		return ret
	}
	return *o.EnableTme
}

// GetEnableTmeOk returns a tuple with the EnableTme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnableTmeOk() (*string, bool) {
	if o == nil || o.EnableTme == nil {
		return nil, false
	}
	return o.EnableTme, true
}

// HasEnableTme returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnableTme() bool {
	if o != nil && o.EnableTme != nil {
		return true
	}

	return false
}

// SetEnableTme gets a reference to the given string and assigns it to the EnableTme field.
func (o *BiosPolicyAllOf) SetEnableTme(v string) {
	o.EnableTme = &v
}

// GetEnergyEfficientTurbo returns the EnergyEfficientTurbo field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnergyEfficientTurbo() string {
	if o == nil || o.EnergyEfficientTurbo == nil {
		var ret string
		return ret
	}
	return *o.EnergyEfficientTurbo
}

// GetEnergyEfficientTurboOk returns a tuple with the EnergyEfficientTurbo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnergyEfficientTurboOk() (*string, bool) {
	if o == nil || o.EnergyEfficientTurbo == nil {
		return nil, false
	}
	return o.EnergyEfficientTurbo, true
}

// HasEnergyEfficientTurbo returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnergyEfficientTurbo() bool {
	if o != nil && o.EnergyEfficientTurbo != nil {
		return true
	}

	return false
}

// SetEnergyEfficientTurbo gets a reference to the given string and assigns it to the EnergyEfficientTurbo field.
func (o *BiosPolicyAllOf) SetEnergyEfficientTurbo(v string) {
	o.EnergyEfficientTurbo = &v
}

// GetEngPerfTuning returns the EngPerfTuning field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEngPerfTuning() string {
	if o == nil || o.EngPerfTuning == nil {
		var ret string
		return ret
	}
	return *o.EngPerfTuning
}

// GetEngPerfTuningOk returns a tuple with the EngPerfTuning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEngPerfTuningOk() (*string, bool) {
	if o == nil || o.EngPerfTuning == nil {
		return nil, false
	}
	return o.EngPerfTuning, true
}

// HasEngPerfTuning returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEngPerfTuning() bool {
	if o != nil && o.EngPerfTuning != nil {
		return true
	}

	return false
}

// SetEngPerfTuning gets a reference to the given string and assigns it to the EngPerfTuning field.
func (o *BiosPolicyAllOf) SetEngPerfTuning(v string) {
	o.EngPerfTuning = &v
}

// GetEnhancedIntelSpeedStepTech returns the EnhancedIntelSpeedStepTech field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEnhancedIntelSpeedStepTech() string {
	if o == nil || o.EnhancedIntelSpeedStepTech == nil {
		var ret string
		return ret
	}
	return *o.EnhancedIntelSpeedStepTech
}

// GetEnhancedIntelSpeedStepTechOk returns a tuple with the EnhancedIntelSpeedStepTech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEnhancedIntelSpeedStepTechOk() (*string, bool) {
	if o == nil || o.EnhancedIntelSpeedStepTech == nil {
		return nil, false
	}
	return o.EnhancedIntelSpeedStepTech, true
}

// HasEnhancedIntelSpeedStepTech returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEnhancedIntelSpeedStepTech() bool {
	if o != nil && o.EnhancedIntelSpeedStepTech != nil {
		return true
	}

	return false
}

// SetEnhancedIntelSpeedStepTech gets a reference to the given string and assigns it to the EnhancedIntelSpeedStepTech field.
func (o *BiosPolicyAllOf) SetEnhancedIntelSpeedStepTech(v string) {
	o.EnhancedIntelSpeedStepTech = &v
}

// GetEpochUpdate returns the EpochUpdate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEpochUpdate() string {
	if o == nil || o.EpochUpdate == nil {
		var ret string
		return ret
	}
	return *o.EpochUpdate
}

// GetEpochUpdateOk returns a tuple with the EpochUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEpochUpdateOk() (*string, bool) {
	if o == nil || o.EpochUpdate == nil {
		return nil, false
	}
	return o.EpochUpdate, true
}

// HasEpochUpdate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEpochUpdate() bool {
	if o != nil && o.EpochUpdate != nil {
		return true
	}

	return false
}

// SetEpochUpdate gets a reference to the given string and assigns it to the EpochUpdate field.
func (o *BiosPolicyAllOf) SetEpochUpdate(v string) {
	o.EpochUpdate = &v
}

// GetEppEnable returns the EppEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEppEnable() string {
	if o == nil || o.EppEnable == nil {
		var ret string
		return ret
	}
	return *o.EppEnable
}

// GetEppEnableOk returns a tuple with the EppEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEppEnableOk() (*string, bool) {
	if o == nil || o.EppEnable == nil {
		return nil, false
	}
	return o.EppEnable, true
}

// HasEppEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEppEnable() bool {
	if o != nil && o.EppEnable != nil {
		return true
	}

	return false
}

// SetEppEnable gets a reference to the given string and assigns it to the EppEnable field.
func (o *BiosPolicyAllOf) SetEppEnable(v string) {
	o.EppEnable = &v
}

// GetEppProfile returns the EppProfile field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetEppProfile() string {
	if o == nil || o.EppProfile == nil {
		var ret string
		return ret
	}
	return *o.EppProfile
}

// GetEppProfileOk returns a tuple with the EppProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetEppProfileOk() (*string, bool) {
	if o == nil || o.EppProfile == nil {
		return nil, false
	}
	return o.EppProfile, true
}

// HasEppProfile returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasEppProfile() bool {
	if o != nil && o.EppProfile != nil {
		return true
	}

	return false
}

// SetEppProfile gets a reference to the given string and assigns it to the EppProfile field.
func (o *BiosPolicyAllOf) SetEppProfile(v string) {
	o.EppProfile = &v
}

// GetExecuteDisableBit returns the ExecuteDisableBit field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetExecuteDisableBit() string {
	if o == nil || o.ExecuteDisableBit == nil {
		var ret string
		return ret
	}
	return *o.ExecuteDisableBit
}

// GetExecuteDisableBitOk returns a tuple with the ExecuteDisableBit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetExecuteDisableBitOk() (*string, bool) {
	if o == nil || o.ExecuteDisableBit == nil {
		return nil, false
	}
	return o.ExecuteDisableBit, true
}

// HasExecuteDisableBit returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasExecuteDisableBit() bool {
	if o != nil && o.ExecuteDisableBit != nil {
		return true
	}

	return false
}

// SetExecuteDisableBit gets a reference to the given string and assigns it to the ExecuteDisableBit field.
func (o *BiosPolicyAllOf) SetExecuteDisableBit(v string) {
	o.ExecuteDisableBit = &v
}

// GetExtendedApic returns the ExtendedApic field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetExtendedApic() string {
	if o == nil || o.ExtendedApic == nil {
		var ret string
		return ret
	}
	return *o.ExtendedApic
}

// GetExtendedApicOk returns a tuple with the ExtendedApic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetExtendedApicOk() (*string, bool) {
	if o == nil || o.ExtendedApic == nil {
		return nil, false
	}
	return o.ExtendedApic, true
}

// HasExtendedApic returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasExtendedApic() bool {
	if o != nil && o.ExtendedApic != nil {
		return true
	}

	return false
}

// SetExtendedApic gets a reference to the given string and assigns it to the ExtendedApic field.
func (o *BiosPolicyAllOf) SetExtendedApic(v string) {
	o.ExtendedApic = &v
}

// GetFlowControl returns the FlowControl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetFlowControl() string {
	if o == nil || o.FlowControl == nil {
		var ret string
		return ret
	}
	return *o.FlowControl
}

// GetFlowControlOk returns a tuple with the FlowControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetFlowControlOk() (*string, bool) {
	if o == nil || o.FlowControl == nil {
		return nil, false
	}
	return o.FlowControl, true
}

// HasFlowControl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasFlowControl() bool {
	if o != nil && o.FlowControl != nil {
		return true
	}

	return false
}

// SetFlowControl gets a reference to the given string and assigns it to the FlowControl field.
func (o *BiosPolicyAllOf) SetFlowControl(v string) {
	o.FlowControl = &v
}

// GetFrb2enable returns the Frb2enable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetFrb2enable() string {
	if o == nil || o.Frb2enable == nil {
		var ret string
		return ret
	}
	return *o.Frb2enable
}

// GetFrb2enableOk returns a tuple with the Frb2enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetFrb2enableOk() (*string, bool) {
	if o == nil || o.Frb2enable == nil {
		return nil, false
	}
	return o.Frb2enable, true
}

// HasFrb2enable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasFrb2enable() bool {
	if o != nil && o.Frb2enable != nil {
		return true
	}

	return false
}

// SetFrb2enable gets a reference to the given string and assigns it to the Frb2enable field.
func (o *BiosPolicyAllOf) SetFrb2enable(v string) {
	o.Frb2enable = &v
}

// GetHardwarePrefetch returns the HardwarePrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetHardwarePrefetch() string {
	if o == nil || o.HardwarePrefetch == nil {
		var ret string
		return ret
	}
	return *o.HardwarePrefetch
}

// GetHardwarePrefetchOk returns a tuple with the HardwarePrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetHardwarePrefetchOk() (*string, bool) {
	if o == nil || o.HardwarePrefetch == nil {
		return nil, false
	}
	return o.HardwarePrefetch, true
}

// HasHardwarePrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasHardwarePrefetch() bool {
	if o != nil && o.HardwarePrefetch != nil {
		return true
	}

	return false
}

// SetHardwarePrefetch gets a reference to the given string and assigns it to the HardwarePrefetch field.
func (o *BiosPolicyAllOf) SetHardwarePrefetch(v string) {
	o.HardwarePrefetch = &v
}

// GetHwpmEnable returns the HwpmEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetHwpmEnable() string {
	if o == nil || o.HwpmEnable == nil {
		var ret string
		return ret
	}
	return *o.HwpmEnable
}

// GetHwpmEnableOk returns a tuple with the HwpmEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetHwpmEnableOk() (*string, bool) {
	if o == nil || o.HwpmEnable == nil {
		return nil, false
	}
	return o.HwpmEnable, true
}

// HasHwpmEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasHwpmEnable() bool {
	if o != nil && o.HwpmEnable != nil {
		return true
	}

	return false
}

// SetHwpmEnable gets a reference to the given string and assigns it to the HwpmEnable field.
func (o *BiosPolicyAllOf) SetHwpmEnable(v string) {
	o.HwpmEnable = &v
}

// GetImcInterleave returns the ImcInterleave field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetImcInterleave() string {
	if o == nil || o.ImcInterleave == nil {
		var ret string
		return ret
	}
	return *o.ImcInterleave
}

// GetImcInterleaveOk returns a tuple with the ImcInterleave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetImcInterleaveOk() (*string, bool) {
	if o == nil || o.ImcInterleave == nil {
		return nil, false
	}
	return o.ImcInterleave, true
}

// HasImcInterleave returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasImcInterleave() bool {
	if o != nil && o.ImcInterleave != nil {
		return true
	}

	return false
}

// SetImcInterleave gets a reference to the given string and assigns it to the ImcInterleave field.
func (o *BiosPolicyAllOf) SetImcInterleave(v string) {
	o.ImcInterleave = &v
}

// GetIntelDynamicSpeedSelect returns the IntelDynamicSpeedSelect field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelDynamicSpeedSelect() string {
	if o == nil || o.IntelDynamicSpeedSelect == nil {
		var ret string
		return ret
	}
	return *o.IntelDynamicSpeedSelect
}

// GetIntelDynamicSpeedSelectOk returns a tuple with the IntelDynamicSpeedSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelDynamicSpeedSelectOk() (*string, bool) {
	if o == nil || o.IntelDynamicSpeedSelect == nil {
		return nil, false
	}
	return o.IntelDynamicSpeedSelect, true
}

// HasIntelDynamicSpeedSelect returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelDynamicSpeedSelect() bool {
	if o != nil && o.IntelDynamicSpeedSelect != nil {
		return true
	}

	return false
}

// SetIntelDynamicSpeedSelect gets a reference to the given string and assigns it to the IntelDynamicSpeedSelect field.
func (o *BiosPolicyAllOf) SetIntelDynamicSpeedSelect(v string) {
	o.IntelDynamicSpeedSelect = &v
}

// GetIntelHyperThreadingTech returns the IntelHyperThreadingTech field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelHyperThreadingTech() string {
	if o == nil || o.IntelHyperThreadingTech == nil {
		var ret string
		return ret
	}
	return *o.IntelHyperThreadingTech
}

// GetIntelHyperThreadingTechOk returns a tuple with the IntelHyperThreadingTech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelHyperThreadingTechOk() (*string, bool) {
	if o == nil || o.IntelHyperThreadingTech == nil {
		return nil, false
	}
	return o.IntelHyperThreadingTech, true
}

// HasIntelHyperThreadingTech returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelHyperThreadingTech() bool {
	if o != nil && o.IntelHyperThreadingTech != nil {
		return true
	}

	return false
}

// SetIntelHyperThreadingTech gets a reference to the given string and assigns it to the IntelHyperThreadingTech field.
func (o *BiosPolicyAllOf) SetIntelHyperThreadingTech(v string) {
	o.IntelHyperThreadingTech = &v
}

// GetIntelSpeedSelect returns the IntelSpeedSelect field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelSpeedSelect() string {
	if o == nil || o.IntelSpeedSelect == nil {
		var ret string
		return ret
	}
	return *o.IntelSpeedSelect
}

// GetIntelSpeedSelectOk returns a tuple with the IntelSpeedSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelSpeedSelectOk() (*string, bool) {
	if o == nil || o.IntelSpeedSelect == nil {
		return nil, false
	}
	return o.IntelSpeedSelect, true
}

// HasIntelSpeedSelect returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelSpeedSelect() bool {
	if o != nil && o.IntelSpeedSelect != nil {
		return true
	}

	return false
}

// SetIntelSpeedSelect gets a reference to the given string and assigns it to the IntelSpeedSelect field.
func (o *BiosPolicyAllOf) SetIntelSpeedSelect(v string) {
	o.IntelSpeedSelect = &v
}

// GetIntelTurboBoostTech returns the IntelTurboBoostTech field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelTurboBoostTech() string {
	if o == nil || o.IntelTurboBoostTech == nil {
		var ret string
		return ret
	}
	return *o.IntelTurboBoostTech
}

// GetIntelTurboBoostTechOk returns a tuple with the IntelTurboBoostTech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelTurboBoostTechOk() (*string, bool) {
	if o == nil || o.IntelTurboBoostTech == nil {
		return nil, false
	}
	return o.IntelTurboBoostTech, true
}

// HasIntelTurboBoostTech returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelTurboBoostTech() bool {
	if o != nil && o.IntelTurboBoostTech != nil {
		return true
	}

	return false
}

// SetIntelTurboBoostTech gets a reference to the given string and assigns it to the IntelTurboBoostTech field.
func (o *BiosPolicyAllOf) SetIntelTurboBoostTech(v string) {
	o.IntelTurboBoostTech = &v
}

// GetIntelVirtualizationTechnology returns the IntelVirtualizationTechnology field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVirtualizationTechnology() string {
	if o == nil || o.IntelVirtualizationTechnology == nil {
		var ret string
		return ret
	}
	return *o.IntelVirtualizationTechnology
}

// GetIntelVirtualizationTechnologyOk returns a tuple with the IntelVirtualizationTechnology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVirtualizationTechnologyOk() (*string, bool) {
	if o == nil || o.IntelVirtualizationTechnology == nil {
		return nil, false
	}
	return o.IntelVirtualizationTechnology, true
}

// HasIntelVirtualizationTechnology returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVirtualizationTechnology() bool {
	if o != nil && o.IntelVirtualizationTechnology != nil {
		return true
	}

	return false
}

// SetIntelVirtualizationTechnology gets a reference to the given string and assigns it to the IntelVirtualizationTechnology field.
func (o *BiosPolicyAllOf) SetIntelVirtualizationTechnology(v string) {
	o.IntelVirtualizationTechnology = &v
}

// GetIntelVtForDirectedIo returns the IntelVtForDirectedIo field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVtForDirectedIo() string {
	if o == nil || o.IntelVtForDirectedIo == nil {
		var ret string
		return ret
	}
	return *o.IntelVtForDirectedIo
}

// GetIntelVtForDirectedIoOk returns a tuple with the IntelVtForDirectedIo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVtForDirectedIoOk() (*string, bool) {
	if o == nil || o.IntelVtForDirectedIo == nil {
		return nil, false
	}
	return o.IntelVtForDirectedIo, true
}

// HasIntelVtForDirectedIo returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVtForDirectedIo() bool {
	if o != nil && o.IntelVtForDirectedIo != nil {
		return true
	}

	return false
}

// SetIntelVtForDirectedIo gets a reference to the given string and assigns it to the IntelVtForDirectedIo field.
func (o *BiosPolicyAllOf) SetIntelVtForDirectedIo(v string) {
	o.IntelVtForDirectedIo = &v
}

// GetIntelVtdCoherencySupport returns the IntelVtdCoherencySupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVtdCoherencySupport() string {
	if o == nil || o.IntelVtdCoherencySupport == nil {
		var ret string
		return ret
	}
	return *o.IntelVtdCoherencySupport
}

// GetIntelVtdCoherencySupportOk returns a tuple with the IntelVtdCoherencySupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVtdCoherencySupportOk() (*string, bool) {
	if o == nil || o.IntelVtdCoherencySupport == nil {
		return nil, false
	}
	return o.IntelVtdCoherencySupport, true
}

// HasIntelVtdCoherencySupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVtdCoherencySupport() bool {
	if o != nil && o.IntelVtdCoherencySupport != nil {
		return true
	}

	return false
}

// SetIntelVtdCoherencySupport gets a reference to the given string and assigns it to the IntelVtdCoherencySupport field.
func (o *BiosPolicyAllOf) SetIntelVtdCoherencySupport(v string) {
	o.IntelVtdCoherencySupport = &v
}

// GetIntelVtdInterruptRemapping returns the IntelVtdInterruptRemapping field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVtdInterruptRemapping() string {
	if o == nil || o.IntelVtdInterruptRemapping == nil {
		var ret string
		return ret
	}
	return *o.IntelVtdInterruptRemapping
}

// GetIntelVtdInterruptRemappingOk returns a tuple with the IntelVtdInterruptRemapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVtdInterruptRemappingOk() (*string, bool) {
	if o == nil || o.IntelVtdInterruptRemapping == nil {
		return nil, false
	}
	return o.IntelVtdInterruptRemapping, true
}

// HasIntelVtdInterruptRemapping returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVtdInterruptRemapping() bool {
	if o != nil && o.IntelVtdInterruptRemapping != nil {
		return true
	}

	return false
}

// SetIntelVtdInterruptRemapping gets a reference to the given string and assigns it to the IntelVtdInterruptRemapping field.
func (o *BiosPolicyAllOf) SetIntelVtdInterruptRemapping(v string) {
	o.IntelVtdInterruptRemapping = &v
}

// GetIntelVtdPassThroughDmaSupport returns the IntelVtdPassThroughDmaSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVtdPassThroughDmaSupport() string {
	if o == nil || o.IntelVtdPassThroughDmaSupport == nil {
		var ret string
		return ret
	}
	return *o.IntelVtdPassThroughDmaSupport
}

// GetIntelVtdPassThroughDmaSupportOk returns a tuple with the IntelVtdPassThroughDmaSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVtdPassThroughDmaSupportOk() (*string, bool) {
	if o == nil || o.IntelVtdPassThroughDmaSupport == nil {
		return nil, false
	}
	return o.IntelVtdPassThroughDmaSupport, true
}

// HasIntelVtdPassThroughDmaSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVtdPassThroughDmaSupport() bool {
	if o != nil && o.IntelVtdPassThroughDmaSupport != nil {
		return true
	}

	return false
}

// SetIntelVtdPassThroughDmaSupport gets a reference to the given string and assigns it to the IntelVtdPassThroughDmaSupport field.
func (o *BiosPolicyAllOf) SetIntelVtdPassThroughDmaSupport(v string) {
	o.IntelVtdPassThroughDmaSupport = &v
}

// GetIntelVtdatsSupport returns the IntelVtdatsSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIntelVtdatsSupport() string {
	if o == nil || o.IntelVtdatsSupport == nil {
		var ret string
		return ret
	}
	return *o.IntelVtdatsSupport
}

// GetIntelVtdatsSupportOk returns a tuple with the IntelVtdatsSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIntelVtdatsSupportOk() (*string, bool) {
	if o == nil || o.IntelVtdatsSupport == nil {
		return nil, false
	}
	return o.IntelVtdatsSupport, true
}

// HasIntelVtdatsSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIntelVtdatsSupport() bool {
	if o != nil && o.IntelVtdatsSupport != nil {
		return true
	}

	return false
}

// SetIntelVtdatsSupport gets a reference to the given string and assigns it to the IntelVtdatsSupport field.
func (o *BiosPolicyAllOf) SetIntelVtdatsSupport(v string) {
	o.IntelVtdatsSupport = &v
}

// GetIohErrorEnable returns the IohErrorEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIohErrorEnable() string {
	if o == nil || o.IohErrorEnable == nil {
		var ret string
		return ret
	}
	return *o.IohErrorEnable
}

// GetIohErrorEnableOk returns a tuple with the IohErrorEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIohErrorEnableOk() (*string, bool) {
	if o == nil || o.IohErrorEnable == nil {
		return nil, false
	}
	return o.IohErrorEnable, true
}

// HasIohErrorEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIohErrorEnable() bool {
	if o != nil && o.IohErrorEnable != nil {
		return true
	}

	return false
}

// SetIohErrorEnable gets a reference to the given string and assigns it to the IohErrorEnable field.
func (o *BiosPolicyAllOf) SetIohErrorEnable(v string) {
	o.IohErrorEnable = &v
}

// GetIohResource returns the IohResource field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIohResource() string {
	if o == nil || o.IohResource == nil {
		var ret string
		return ret
	}
	return *o.IohResource
}

// GetIohResourceOk returns a tuple with the IohResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIohResourceOk() (*string, bool) {
	if o == nil || o.IohResource == nil {
		return nil, false
	}
	return o.IohResource, true
}

// HasIohResource returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIohResource() bool {
	if o != nil && o.IohResource != nil {
		return true
	}

	return false
}

// SetIohResource gets a reference to the given string and assigns it to the IohResource field.
func (o *BiosPolicyAllOf) SetIohResource(v string) {
	o.IohResource = &v
}

// GetIpPrefetch returns the IpPrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIpPrefetch() string {
	if o == nil || o.IpPrefetch == nil {
		var ret string
		return ret
	}
	return *o.IpPrefetch
}

// GetIpPrefetchOk returns a tuple with the IpPrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIpPrefetchOk() (*string, bool) {
	if o == nil || o.IpPrefetch == nil {
		return nil, false
	}
	return o.IpPrefetch, true
}

// HasIpPrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIpPrefetch() bool {
	if o != nil && o.IpPrefetch != nil {
		return true
	}

	return false
}

// SetIpPrefetch gets a reference to the given string and assigns it to the IpPrefetch field.
func (o *BiosPolicyAllOf) SetIpPrefetch(v string) {
	o.IpPrefetch = &v
}

// GetIpv4http returns the Ipv4http field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIpv4http() string {
	if o == nil || o.Ipv4http == nil {
		var ret string
		return ret
	}
	return *o.Ipv4http
}

// GetIpv4httpOk returns a tuple with the Ipv4http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIpv4httpOk() (*string, bool) {
	if o == nil || o.Ipv4http == nil {
		return nil, false
	}
	return o.Ipv4http, true
}

// HasIpv4http returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIpv4http() bool {
	if o != nil && o.Ipv4http != nil {
		return true
	}

	return false
}

// SetIpv4http gets a reference to the given string and assigns it to the Ipv4http field.
func (o *BiosPolicyAllOf) SetIpv4http(v string) {
	o.Ipv4http = &v
}

// GetIpv4pxe returns the Ipv4pxe field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIpv4pxe() string {
	if o == nil || o.Ipv4pxe == nil {
		var ret string
		return ret
	}
	return *o.Ipv4pxe
}

// GetIpv4pxeOk returns a tuple with the Ipv4pxe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIpv4pxeOk() (*string, bool) {
	if o == nil || o.Ipv4pxe == nil {
		return nil, false
	}
	return o.Ipv4pxe, true
}

// HasIpv4pxe returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIpv4pxe() bool {
	if o != nil && o.Ipv4pxe != nil {
		return true
	}

	return false
}

// SetIpv4pxe gets a reference to the given string and assigns it to the Ipv4pxe field.
func (o *BiosPolicyAllOf) SetIpv4pxe(v string) {
	o.Ipv4pxe = &v
}

// GetIpv6http returns the Ipv6http field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIpv6http() string {
	if o == nil || o.Ipv6http == nil {
		var ret string
		return ret
	}
	return *o.Ipv6http
}

// GetIpv6httpOk returns a tuple with the Ipv6http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIpv6httpOk() (*string, bool) {
	if o == nil || o.Ipv6http == nil {
		return nil, false
	}
	return o.Ipv6http, true
}

// HasIpv6http returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIpv6http() bool {
	if o != nil && o.Ipv6http != nil {
		return true
	}

	return false
}

// SetIpv6http gets a reference to the given string and assigns it to the Ipv6http field.
func (o *BiosPolicyAllOf) SetIpv6http(v string) {
	o.Ipv6http = &v
}

// GetIpv6pxe returns the Ipv6pxe field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetIpv6pxe() string {
	if o == nil || o.Ipv6pxe == nil {
		var ret string
		return ret
	}
	return *o.Ipv6pxe
}

// GetIpv6pxeOk returns a tuple with the Ipv6pxe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetIpv6pxeOk() (*string, bool) {
	if o == nil || o.Ipv6pxe == nil {
		return nil, false
	}
	return o.Ipv6pxe, true
}

// HasIpv6pxe returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasIpv6pxe() bool {
	if o != nil && o.Ipv6pxe != nil {
		return true
	}

	return false
}

// SetIpv6pxe gets a reference to the given string and assigns it to the Ipv6pxe field.
func (o *BiosPolicyAllOf) SetIpv6pxe(v string) {
	o.Ipv6pxe = &v
}

// GetKtiPrefetch returns the KtiPrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetKtiPrefetch() string {
	if o == nil || o.KtiPrefetch == nil {
		var ret string
		return ret
	}
	return *o.KtiPrefetch
}

// GetKtiPrefetchOk returns a tuple with the KtiPrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetKtiPrefetchOk() (*string, bool) {
	if o == nil || o.KtiPrefetch == nil {
		return nil, false
	}
	return o.KtiPrefetch, true
}

// HasKtiPrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasKtiPrefetch() bool {
	if o != nil && o.KtiPrefetch != nil {
		return true
	}

	return false
}

// SetKtiPrefetch gets a reference to the given string and assigns it to the KtiPrefetch field.
func (o *BiosPolicyAllOf) SetKtiPrefetch(v string) {
	o.KtiPrefetch = &v
}

// GetLegacyOsRedirection returns the LegacyOsRedirection field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLegacyOsRedirection() string {
	if o == nil || o.LegacyOsRedirection == nil {
		var ret string
		return ret
	}
	return *o.LegacyOsRedirection
}

// GetLegacyOsRedirectionOk returns a tuple with the LegacyOsRedirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLegacyOsRedirectionOk() (*string, bool) {
	if o == nil || o.LegacyOsRedirection == nil {
		return nil, false
	}
	return o.LegacyOsRedirection, true
}

// HasLegacyOsRedirection returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLegacyOsRedirection() bool {
	if o != nil && o.LegacyOsRedirection != nil {
		return true
	}

	return false
}

// SetLegacyOsRedirection gets a reference to the given string and assigns it to the LegacyOsRedirection field.
func (o *BiosPolicyAllOf) SetLegacyOsRedirection(v string) {
	o.LegacyOsRedirection = &v
}

// GetLegacyUsbSupport returns the LegacyUsbSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLegacyUsbSupport() string {
	if o == nil || o.LegacyUsbSupport == nil {
		var ret string
		return ret
	}
	return *o.LegacyUsbSupport
}

// GetLegacyUsbSupportOk returns a tuple with the LegacyUsbSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLegacyUsbSupportOk() (*string, bool) {
	if o == nil || o.LegacyUsbSupport == nil {
		return nil, false
	}
	return o.LegacyUsbSupport, true
}

// HasLegacyUsbSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLegacyUsbSupport() bool {
	if o != nil && o.LegacyUsbSupport != nil {
		return true
	}

	return false
}

// SetLegacyUsbSupport gets a reference to the given string and assigns it to the LegacyUsbSupport field.
func (o *BiosPolicyAllOf) SetLegacyUsbSupport(v string) {
	o.LegacyUsbSupport = &v
}

// GetLlcPrefetch returns the LlcPrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLlcPrefetch() string {
	if o == nil || o.LlcPrefetch == nil {
		var ret string
		return ret
	}
	return *o.LlcPrefetch
}

// GetLlcPrefetchOk returns a tuple with the LlcPrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLlcPrefetchOk() (*string, bool) {
	if o == nil || o.LlcPrefetch == nil {
		return nil, false
	}
	return o.LlcPrefetch, true
}

// HasLlcPrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLlcPrefetch() bool {
	if o != nil && o.LlcPrefetch != nil {
		return true
	}

	return false
}

// SetLlcPrefetch gets a reference to the given string and assigns it to the LlcPrefetch field.
func (o *BiosPolicyAllOf) SetLlcPrefetch(v string) {
	o.LlcPrefetch = &v
}

// GetLomPort0state returns the LomPort0state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLomPort0state() string {
	if o == nil || o.LomPort0state == nil {
		var ret string
		return ret
	}
	return *o.LomPort0state
}

// GetLomPort0stateOk returns a tuple with the LomPort0state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLomPort0stateOk() (*string, bool) {
	if o == nil || o.LomPort0state == nil {
		return nil, false
	}
	return o.LomPort0state, true
}

// HasLomPort0state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLomPort0state() bool {
	if o != nil && o.LomPort0state != nil {
		return true
	}

	return false
}

// SetLomPort0state gets a reference to the given string and assigns it to the LomPort0state field.
func (o *BiosPolicyAllOf) SetLomPort0state(v string) {
	o.LomPort0state = &v
}

// GetLomPort1state returns the LomPort1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLomPort1state() string {
	if o == nil || o.LomPort1state == nil {
		var ret string
		return ret
	}
	return *o.LomPort1state
}

// GetLomPort1stateOk returns a tuple with the LomPort1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLomPort1stateOk() (*string, bool) {
	if o == nil || o.LomPort1state == nil {
		return nil, false
	}
	return o.LomPort1state, true
}

// HasLomPort1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLomPort1state() bool {
	if o != nil && o.LomPort1state != nil {
		return true
	}

	return false
}

// SetLomPort1state gets a reference to the given string and assigns it to the LomPort1state field.
func (o *BiosPolicyAllOf) SetLomPort1state(v string) {
	o.LomPort1state = &v
}

// GetLomPort2state returns the LomPort2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLomPort2state() string {
	if o == nil || o.LomPort2state == nil {
		var ret string
		return ret
	}
	return *o.LomPort2state
}

// GetLomPort2stateOk returns a tuple with the LomPort2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLomPort2stateOk() (*string, bool) {
	if o == nil || o.LomPort2state == nil {
		return nil, false
	}
	return o.LomPort2state, true
}

// HasLomPort2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLomPort2state() bool {
	if o != nil && o.LomPort2state != nil {
		return true
	}

	return false
}

// SetLomPort2state gets a reference to the given string and assigns it to the LomPort2state field.
func (o *BiosPolicyAllOf) SetLomPort2state(v string) {
	o.LomPort2state = &v
}

// GetLomPort3state returns the LomPort3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLomPort3state() string {
	if o == nil || o.LomPort3state == nil {
		var ret string
		return ret
	}
	return *o.LomPort3state
}

// GetLomPort3stateOk returns a tuple with the LomPort3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLomPort3stateOk() (*string, bool) {
	if o == nil || o.LomPort3state == nil {
		return nil, false
	}
	return o.LomPort3state, true
}

// HasLomPort3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLomPort3state() bool {
	if o != nil && o.LomPort3state != nil {
		return true
	}

	return false
}

// SetLomPort3state gets a reference to the given string and assigns it to the LomPort3state field.
func (o *BiosPolicyAllOf) SetLomPort3state(v string) {
	o.LomPort3state = &v
}

// GetLomPortsAllState returns the LomPortsAllState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLomPortsAllState() string {
	if o == nil || o.LomPortsAllState == nil {
		var ret string
		return ret
	}
	return *o.LomPortsAllState
}

// GetLomPortsAllStateOk returns a tuple with the LomPortsAllState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLomPortsAllStateOk() (*string, bool) {
	if o == nil || o.LomPortsAllState == nil {
		return nil, false
	}
	return o.LomPortsAllState, true
}

// HasLomPortsAllState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLomPortsAllState() bool {
	if o != nil && o.LomPortsAllState != nil {
		return true
	}

	return false
}

// SetLomPortsAllState gets a reference to the given string and assigns it to the LomPortsAllState field.
func (o *BiosPolicyAllOf) SetLomPortsAllState(v string) {
	o.LomPortsAllState = &v
}

// GetLvDdrMode returns the LvDdrMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetLvDdrMode() string {
	if o == nil || o.LvDdrMode == nil {
		var ret string
		return ret
	}
	return *o.LvDdrMode
}

// GetLvDdrModeOk returns a tuple with the LvDdrMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetLvDdrModeOk() (*string, bool) {
	if o == nil || o.LvDdrMode == nil {
		return nil, false
	}
	return o.LvDdrMode, true
}

// HasLvDdrMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasLvDdrMode() bool {
	if o != nil && o.LvDdrMode != nil {
		return true
	}

	return false
}

// SetLvDdrMode gets a reference to the given string and assigns it to the LvDdrMode field.
func (o *BiosPolicyAllOf) SetLvDdrMode(v string) {
	o.LvDdrMode = &v
}

// GetMakeDeviceNonBootable returns the MakeDeviceNonBootable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMakeDeviceNonBootable() string {
	if o == nil || o.MakeDeviceNonBootable == nil {
		var ret string
		return ret
	}
	return *o.MakeDeviceNonBootable
}

// GetMakeDeviceNonBootableOk returns a tuple with the MakeDeviceNonBootable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMakeDeviceNonBootableOk() (*string, bool) {
	if o == nil || o.MakeDeviceNonBootable == nil {
		return nil, false
	}
	return o.MakeDeviceNonBootable, true
}

// HasMakeDeviceNonBootable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMakeDeviceNonBootable() bool {
	if o != nil && o.MakeDeviceNonBootable != nil {
		return true
	}

	return false
}

// SetMakeDeviceNonBootable gets a reference to the given string and assigns it to the MakeDeviceNonBootable field.
func (o *BiosPolicyAllOf) SetMakeDeviceNonBootable(v string) {
	o.MakeDeviceNonBootable = &v
}

// GetMemoryBandwidthBoost returns the MemoryBandwidthBoost field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemoryBandwidthBoost() string {
	if o == nil || o.MemoryBandwidthBoost == nil {
		var ret string
		return ret
	}
	return *o.MemoryBandwidthBoost
}

// GetMemoryBandwidthBoostOk returns a tuple with the MemoryBandwidthBoost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemoryBandwidthBoostOk() (*string, bool) {
	if o == nil || o.MemoryBandwidthBoost == nil {
		return nil, false
	}
	return o.MemoryBandwidthBoost, true
}

// HasMemoryBandwidthBoost returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemoryBandwidthBoost() bool {
	if o != nil && o.MemoryBandwidthBoost != nil {
		return true
	}

	return false
}

// SetMemoryBandwidthBoost gets a reference to the given string and assigns it to the MemoryBandwidthBoost field.
func (o *BiosPolicyAllOf) SetMemoryBandwidthBoost(v string) {
	o.MemoryBandwidthBoost = &v
}

// GetMemoryInterLeave returns the MemoryInterLeave field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemoryInterLeave() string {
	if o == nil || o.MemoryInterLeave == nil {
		var ret string
		return ret
	}
	return *o.MemoryInterLeave
}

// GetMemoryInterLeaveOk returns a tuple with the MemoryInterLeave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemoryInterLeaveOk() (*string, bool) {
	if o == nil || o.MemoryInterLeave == nil {
		return nil, false
	}
	return o.MemoryInterLeave, true
}

// HasMemoryInterLeave returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemoryInterLeave() bool {
	if o != nil && o.MemoryInterLeave != nil {
		return true
	}

	return false
}

// SetMemoryInterLeave gets a reference to the given string and assigns it to the MemoryInterLeave field.
func (o *BiosPolicyAllOf) SetMemoryInterLeave(v string) {
	o.MemoryInterLeave = &v
}

// GetMemoryMappedIoAbove4gb returns the MemoryMappedIoAbove4gb field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemoryMappedIoAbove4gb() string {
	if o == nil || o.MemoryMappedIoAbove4gb == nil {
		var ret string
		return ret
	}
	return *o.MemoryMappedIoAbove4gb
}

// GetMemoryMappedIoAbove4gbOk returns a tuple with the MemoryMappedIoAbove4gb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemoryMappedIoAbove4gbOk() (*string, bool) {
	if o == nil || o.MemoryMappedIoAbove4gb == nil {
		return nil, false
	}
	return o.MemoryMappedIoAbove4gb, true
}

// HasMemoryMappedIoAbove4gb returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemoryMappedIoAbove4gb() bool {
	if o != nil && o.MemoryMappedIoAbove4gb != nil {
		return true
	}

	return false
}

// SetMemoryMappedIoAbove4gb gets a reference to the given string and assigns it to the MemoryMappedIoAbove4gb field.
func (o *BiosPolicyAllOf) SetMemoryMappedIoAbove4gb(v string) {
	o.MemoryMappedIoAbove4gb = &v
}

// GetMemoryRefreshRate returns the MemoryRefreshRate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemoryRefreshRate() string {
	if o == nil || o.MemoryRefreshRate == nil {
		var ret string
		return ret
	}
	return *o.MemoryRefreshRate
}

// GetMemoryRefreshRateOk returns a tuple with the MemoryRefreshRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemoryRefreshRateOk() (*string, bool) {
	if o == nil || o.MemoryRefreshRate == nil {
		return nil, false
	}
	return o.MemoryRefreshRate, true
}

// HasMemoryRefreshRate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemoryRefreshRate() bool {
	if o != nil && o.MemoryRefreshRate != nil {
		return true
	}

	return false
}

// SetMemoryRefreshRate gets a reference to the given string and assigns it to the MemoryRefreshRate field.
func (o *BiosPolicyAllOf) SetMemoryRefreshRate(v string) {
	o.MemoryRefreshRate = &v
}

// GetMemorySizeLimit returns the MemorySizeLimit field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemorySizeLimit() string {
	if o == nil || o.MemorySizeLimit == nil {
		var ret string
		return ret
	}
	return *o.MemorySizeLimit
}

// GetMemorySizeLimitOk returns a tuple with the MemorySizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemorySizeLimitOk() (*string, bool) {
	if o == nil || o.MemorySizeLimit == nil {
		return nil, false
	}
	return o.MemorySizeLimit, true
}

// HasMemorySizeLimit returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemorySizeLimit() bool {
	if o != nil && o.MemorySizeLimit != nil {
		return true
	}

	return false
}

// SetMemorySizeLimit gets a reference to the given string and assigns it to the MemorySizeLimit field.
func (o *BiosPolicyAllOf) SetMemorySizeLimit(v string) {
	o.MemorySizeLimit = &v
}

// GetMemoryThermalThrottling returns the MemoryThermalThrottling field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMemoryThermalThrottling() string {
	if o == nil || o.MemoryThermalThrottling == nil {
		var ret string
		return ret
	}
	return *o.MemoryThermalThrottling
}

// GetMemoryThermalThrottlingOk returns a tuple with the MemoryThermalThrottling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMemoryThermalThrottlingOk() (*string, bool) {
	if o == nil || o.MemoryThermalThrottling == nil {
		return nil, false
	}
	return o.MemoryThermalThrottling, true
}

// HasMemoryThermalThrottling returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMemoryThermalThrottling() bool {
	if o != nil && o.MemoryThermalThrottling != nil {
		return true
	}

	return false
}

// SetMemoryThermalThrottling gets a reference to the given string and assigns it to the MemoryThermalThrottling field.
func (o *BiosPolicyAllOf) SetMemoryThermalThrottling(v string) {
	o.MemoryThermalThrottling = &v
}

// GetMirroringMode returns the MirroringMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMirroringMode() string {
	if o == nil || o.MirroringMode == nil {
		var ret string
		return ret
	}
	return *o.MirroringMode
}

// GetMirroringModeOk returns a tuple with the MirroringMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMirroringModeOk() (*string, bool) {
	if o == nil || o.MirroringMode == nil {
		return nil, false
	}
	return o.MirroringMode, true
}

// HasMirroringMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMirroringMode() bool {
	if o != nil && o.MirroringMode != nil {
		return true
	}

	return false
}

// SetMirroringMode gets a reference to the given string and assigns it to the MirroringMode field.
func (o *BiosPolicyAllOf) SetMirroringMode(v string) {
	o.MirroringMode = &v
}

// GetMmcfgBase returns the MmcfgBase field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetMmcfgBase() string {
	if o == nil || o.MmcfgBase == nil {
		var ret string
		return ret
	}
	return *o.MmcfgBase
}

// GetMmcfgBaseOk returns a tuple with the MmcfgBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetMmcfgBaseOk() (*string, bool) {
	if o == nil || o.MmcfgBase == nil {
		return nil, false
	}
	return o.MmcfgBase, true
}

// HasMmcfgBase returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasMmcfgBase() bool {
	if o != nil && o.MmcfgBase != nil {
		return true
	}

	return false
}

// SetMmcfgBase gets a reference to the given string and assigns it to the MmcfgBase field.
func (o *BiosPolicyAllOf) SetMmcfgBase(v string) {
	o.MmcfgBase = &v
}

// GetNetworkStack returns the NetworkStack field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetNetworkStack() string {
	if o == nil || o.NetworkStack == nil {
		var ret string
		return ret
	}
	return *o.NetworkStack
}

// GetNetworkStackOk returns a tuple with the NetworkStack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetNetworkStackOk() (*string, bool) {
	if o == nil || o.NetworkStack == nil {
		return nil, false
	}
	return o.NetworkStack, true
}

// HasNetworkStack returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasNetworkStack() bool {
	if o != nil && o.NetworkStack != nil {
		return true
	}

	return false
}

// SetNetworkStack gets a reference to the given string and assigns it to the NetworkStack field.
func (o *BiosPolicyAllOf) SetNetworkStack(v string) {
	o.NetworkStack = &v
}

// GetNumaOptimized returns the NumaOptimized field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetNumaOptimized() string {
	if o == nil || o.NumaOptimized == nil {
		var ret string
		return ret
	}
	return *o.NumaOptimized
}

// GetNumaOptimizedOk returns a tuple with the NumaOptimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetNumaOptimizedOk() (*string, bool) {
	if o == nil || o.NumaOptimized == nil {
		return nil, false
	}
	return o.NumaOptimized, true
}

// HasNumaOptimized returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasNumaOptimized() bool {
	if o != nil && o.NumaOptimized != nil {
		return true
	}

	return false
}

// SetNumaOptimized gets a reference to the given string and assigns it to the NumaOptimized field.
func (o *BiosPolicyAllOf) SetNumaOptimized(v string) {
	o.NumaOptimized = &v
}

// GetNvmdimmPerformConfig returns the NvmdimmPerformConfig field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetNvmdimmPerformConfig() string {
	if o == nil || o.NvmdimmPerformConfig == nil {
		var ret string
		return ret
	}
	return *o.NvmdimmPerformConfig
}

// GetNvmdimmPerformConfigOk returns a tuple with the NvmdimmPerformConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetNvmdimmPerformConfigOk() (*string, bool) {
	if o == nil || o.NvmdimmPerformConfig == nil {
		return nil, false
	}
	return o.NvmdimmPerformConfig, true
}

// HasNvmdimmPerformConfig returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasNvmdimmPerformConfig() bool {
	if o != nil && o.NvmdimmPerformConfig != nil {
		return true
	}

	return false
}

// SetNvmdimmPerformConfig gets a reference to the given string and assigns it to the NvmdimmPerformConfig field.
func (o *BiosPolicyAllOf) SetNvmdimmPerformConfig(v string) {
	o.NvmdimmPerformConfig = &v
}

// GetOnboard10gbitLom returns the Onboard10gbitLom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOnboard10gbitLom() string {
	if o == nil || o.Onboard10gbitLom == nil {
		var ret string
		return ret
	}
	return *o.Onboard10gbitLom
}

// GetOnboard10gbitLomOk returns a tuple with the Onboard10gbitLom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOnboard10gbitLomOk() (*string, bool) {
	if o == nil || o.Onboard10gbitLom == nil {
		return nil, false
	}
	return o.Onboard10gbitLom, true
}

// HasOnboard10gbitLom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOnboard10gbitLom() bool {
	if o != nil && o.Onboard10gbitLom != nil {
		return true
	}

	return false
}

// SetOnboard10gbitLom gets a reference to the given string and assigns it to the Onboard10gbitLom field.
func (o *BiosPolicyAllOf) SetOnboard10gbitLom(v string) {
	o.Onboard10gbitLom = &v
}

// GetOnboardGbitLom returns the OnboardGbitLom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOnboardGbitLom() string {
	if o == nil || o.OnboardGbitLom == nil {
		var ret string
		return ret
	}
	return *o.OnboardGbitLom
}

// GetOnboardGbitLomOk returns a tuple with the OnboardGbitLom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOnboardGbitLomOk() (*string, bool) {
	if o == nil || o.OnboardGbitLom == nil {
		return nil, false
	}
	return o.OnboardGbitLom, true
}

// HasOnboardGbitLom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOnboardGbitLom() bool {
	if o != nil && o.OnboardGbitLom != nil {
		return true
	}

	return false
}

// SetOnboardGbitLom gets a reference to the given string and assigns it to the OnboardGbitLom field.
func (o *BiosPolicyAllOf) SetOnboardGbitLom(v string) {
	o.OnboardGbitLom = &v
}

// GetOnboardScuStorageSupport returns the OnboardScuStorageSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOnboardScuStorageSupport() string {
	if o == nil || o.OnboardScuStorageSupport == nil {
		var ret string
		return ret
	}
	return *o.OnboardScuStorageSupport
}

// GetOnboardScuStorageSupportOk returns a tuple with the OnboardScuStorageSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOnboardScuStorageSupportOk() (*string, bool) {
	if o == nil || o.OnboardScuStorageSupport == nil {
		return nil, false
	}
	return o.OnboardScuStorageSupport, true
}

// HasOnboardScuStorageSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOnboardScuStorageSupport() bool {
	if o != nil && o.OnboardScuStorageSupport != nil {
		return true
	}

	return false
}

// SetOnboardScuStorageSupport gets a reference to the given string and assigns it to the OnboardScuStorageSupport field.
func (o *BiosPolicyAllOf) SetOnboardScuStorageSupport(v string) {
	o.OnboardScuStorageSupport = &v
}

// GetOnboardScuStorageSwStack returns the OnboardScuStorageSwStack field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOnboardScuStorageSwStack() string {
	if o == nil || o.OnboardScuStorageSwStack == nil {
		var ret string
		return ret
	}
	return *o.OnboardScuStorageSwStack
}

// GetOnboardScuStorageSwStackOk returns a tuple with the OnboardScuStorageSwStack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOnboardScuStorageSwStackOk() (*string, bool) {
	if o == nil || o.OnboardScuStorageSwStack == nil {
		return nil, false
	}
	return o.OnboardScuStorageSwStack, true
}

// HasOnboardScuStorageSwStack returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOnboardScuStorageSwStack() bool {
	if o != nil && o.OnboardScuStorageSwStack != nil {
		return true
	}

	return false
}

// SetOnboardScuStorageSwStack gets a reference to the given string and assigns it to the OnboardScuStorageSwStack field.
func (o *BiosPolicyAllOf) SetOnboardScuStorageSwStack(v string) {
	o.OnboardScuStorageSwStack = &v
}

// GetOperationMode returns the OperationMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOperationMode() string {
	if o == nil || o.OperationMode == nil {
		var ret string
		return ret
	}
	return *o.OperationMode
}

// GetOperationModeOk returns a tuple with the OperationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOperationModeOk() (*string, bool) {
	if o == nil || o.OperationMode == nil {
		return nil, false
	}
	return o.OperationMode, true
}

// HasOperationMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOperationMode() bool {
	if o != nil && o.OperationMode != nil {
		return true
	}

	return false
}

// SetOperationMode gets a reference to the given string and assigns it to the OperationMode field.
func (o *BiosPolicyAllOf) SetOperationMode(v string) {
	o.OperationMode = &v
}

// GetOsBootWatchdogTimer returns the OsBootWatchdogTimer field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimer() string {
	if o == nil || o.OsBootWatchdogTimer == nil {
		var ret string
		return ret
	}
	return *o.OsBootWatchdogTimer
}

// GetOsBootWatchdogTimerOk returns a tuple with the OsBootWatchdogTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimerOk() (*string, bool) {
	if o == nil || o.OsBootWatchdogTimer == nil {
		return nil, false
	}
	return o.OsBootWatchdogTimer, true
}

// HasOsBootWatchdogTimer returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOsBootWatchdogTimer() bool {
	if o != nil && o.OsBootWatchdogTimer != nil {
		return true
	}

	return false
}

// SetOsBootWatchdogTimer gets a reference to the given string and assigns it to the OsBootWatchdogTimer field.
func (o *BiosPolicyAllOf) SetOsBootWatchdogTimer(v string) {
	o.OsBootWatchdogTimer = &v
}

// GetOsBootWatchdogTimerPolicy returns the OsBootWatchdogTimerPolicy field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimerPolicy() string {
	if o == nil || o.OsBootWatchdogTimerPolicy == nil {
		var ret string
		return ret
	}
	return *o.OsBootWatchdogTimerPolicy
}

// GetOsBootWatchdogTimerPolicyOk returns a tuple with the OsBootWatchdogTimerPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimerPolicyOk() (*string, bool) {
	if o == nil || o.OsBootWatchdogTimerPolicy == nil {
		return nil, false
	}
	return o.OsBootWatchdogTimerPolicy, true
}

// HasOsBootWatchdogTimerPolicy returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOsBootWatchdogTimerPolicy() bool {
	if o != nil && o.OsBootWatchdogTimerPolicy != nil {
		return true
	}

	return false
}

// SetOsBootWatchdogTimerPolicy gets a reference to the given string and assigns it to the OsBootWatchdogTimerPolicy field.
func (o *BiosPolicyAllOf) SetOsBootWatchdogTimerPolicy(v string) {
	o.OsBootWatchdogTimerPolicy = &v
}

// GetOsBootWatchdogTimerTimeout returns the OsBootWatchdogTimerTimeout field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimerTimeout() string {
	if o == nil || o.OsBootWatchdogTimerTimeout == nil {
		var ret string
		return ret
	}
	return *o.OsBootWatchdogTimerTimeout
}

// GetOsBootWatchdogTimerTimeoutOk returns a tuple with the OsBootWatchdogTimerTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOsBootWatchdogTimerTimeoutOk() (*string, bool) {
	if o == nil || o.OsBootWatchdogTimerTimeout == nil {
		return nil, false
	}
	return o.OsBootWatchdogTimerTimeout, true
}

// HasOsBootWatchdogTimerTimeout returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOsBootWatchdogTimerTimeout() bool {
	if o != nil && o.OsBootWatchdogTimerTimeout != nil {
		return true
	}

	return false
}

// SetOsBootWatchdogTimerTimeout gets a reference to the given string and assigns it to the OsBootWatchdogTimerTimeout field.
func (o *BiosPolicyAllOf) SetOsBootWatchdogTimerTimeout(v string) {
	o.OsBootWatchdogTimerTimeout = &v
}

// GetOutOfBandMgmtPort returns the OutOfBandMgmtPort field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOutOfBandMgmtPort() string {
	if o == nil || o.OutOfBandMgmtPort == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandMgmtPort
}

// GetOutOfBandMgmtPortOk returns a tuple with the OutOfBandMgmtPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOutOfBandMgmtPortOk() (*string, bool) {
	if o == nil || o.OutOfBandMgmtPort == nil {
		return nil, false
	}
	return o.OutOfBandMgmtPort, true
}

// HasOutOfBandMgmtPort returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOutOfBandMgmtPort() bool {
	if o != nil && o.OutOfBandMgmtPort != nil {
		return true
	}

	return false
}

// SetOutOfBandMgmtPort gets a reference to the given string and assigns it to the OutOfBandMgmtPort field.
func (o *BiosPolicyAllOf) SetOutOfBandMgmtPort(v string) {
	o.OutOfBandMgmtPort = &v
}

// GetPackageCstateLimit returns the PackageCstateLimit field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPackageCstateLimit() string {
	if o == nil || o.PackageCstateLimit == nil {
		var ret string
		return ret
	}
	return *o.PackageCstateLimit
}

// GetPackageCstateLimitOk returns a tuple with the PackageCstateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPackageCstateLimitOk() (*string, bool) {
	if o == nil || o.PackageCstateLimit == nil {
		return nil, false
	}
	return o.PackageCstateLimit, true
}

// HasPackageCstateLimit returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPackageCstateLimit() bool {
	if o != nil && o.PackageCstateLimit != nil {
		return true
	}

	return false
}

// SetPackageCstateLimit gets a reference to the given string and assigns it to the PackageCstateLimit field.
func (o *BiosPolicyAllOf) SetPackageCstateLimit(v string) {
	o.PackageCstateLimit = &v
}

// GetPanicHighWatermark returns the PanicHighWatermark field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPanicHighWatermark() string {
	if o == nil || o.PanicHighWatermark == nil {
		var ret string
		return ret
	}
	return *o.PanicHighWatermark
}

// GetPanicHighWatermarkOk returns a tuple with the PanicHighWatermark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPanicHighWatermarkOk() (*string, bool) {
	if o == nil || o.PanicHighWatermark == nil {
		return nil, false
	}
	return o.PanicHighWatermark, true
}

// HasPanicHighWatermark returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPanicHighWatermark() bool {
	if o != nil && o.PanicHighWatermark != nil {
		return true
	}

	return false
}

// SetPanicHighWatermark gets a reference to the given string and assigns it to the PanicHighWatermark field.
func (o *BiosPolicyAllOf) SetPanicHighWatermark(v string) {
	o.PanicHighWatermark = &v
}

// GetPartialCacheLineSparing returns the PartialCacheLineSparing field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialCacheLineSparing() string {
	if o == nil || o.PartialCacheLineSparing == nil {
		var ret string
		return ret
	}
	return *o.PartialCacheLineSparing
}

// GetPartialCacheLineSparingOk returns a tuple with the PartialCacheLineSparing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialCacheLineSparingOk() (*string, bool) {
	if o == nil || o.PartialCacheLineSparing == nil {
		return nil, false
	}
	return o.PartialCacheLineSparing, true
}

// HasPartialCacheLineSparing returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialCacheLineSparing() bool {
	if o != nil && o.PartialCacheLineSparing != nil {
		return true
	}

	return false
}

// SetPartialCacheLineSparing gets a reference to the given string and assigns it to the PartialCacheLineSparing field.
func (o *BiosPolicyAllOf) SetPartialCacheLineSparing(v string) {
	o.PartialCacheLineSparing = &v
}

// GetPartialMirrorModeConfig returns the PartialMirrorModeConfig field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorModeConfig() string {
	if o == nil || o.PartialMirrorModeConfig == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorModeConfig
}

// GetPartialMirrorModeConfigOk returns a tuple with the PartialMirrorModeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorModeConfigOk() (*string, bool) {
	if o == nil || o.PartialMirrorModeConfig == nil {
		return nil, false
	}
	return o.PartialMirrorModeConfig, true
}

// HasPartialMirrorModeConfig returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorModeConfig() bool {
	if o != nil && o.PartialMirrorModeConfig != nil {
		return true
	}

	return false
}

// SetPartialMirrorModeConfig gets a reference to the given string and assigns it to the PartialMirrorModeConfig field.
func (o *BiosPolicyAllOf) SetPartialMirrorModeConfig(v string) {
	o.PartialMirrorModeConfig = &v
}

// GetPartialMirrorPercent returns the PartialMirrorPercent field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorPercent() string {
	if o == nil || o.PartialMirrorPercent == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorPercent
}

// GetPartialMirrorPercentOk returns a tuple with the PartialMirrorPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorPercentOk() (*string, bool) {
	if o == nil || o.PartialMirrorPercent == nil {
		return nil, false
	}
	return o.PartialMirrorPercent, true
}

// HasPartialMirrorPercent returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorPercent() bool {
	if o != nil && o.PartialMirrorPercent != nil {
		return true
	}

	return false
}

// SetPartialMirrorPercent gets a reference to the given string and assigns it to the PartialMirrorPercent field.
func (o *BiosPolicyAllOf) SetPartialMirrorPercent(v string) {
	o.PartialMirrorPercent = &v
}

// GetPartialMirrorValue1 returns the PartialMirrorValue1 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorValue1() string {
	if o == nil || o.PartialMirrorValue1 == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorValue1
}

// GetPartialMirrorValue1Ok returns a tuple with the PartialMirrorValue1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorValue1Ok() (*string, bool) {
	if o == nil || o.PartialMirrorValue1 == nil {
		return nil, false
	}
	return o.PartialMirrorValue1, true
}

// HasPartialMirrorValue1 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorValue1() bool {
	if o != nil && o.PartialMirrorValue1 != nil {
		return true
	}

	return false
}

// SetPartialMirrorValue1 gets a reference to the given string and assigns it to the PartialMirrorValue1 field.
func (o *BiosPolicyAllOf) SetPartialMirrorValue1(v string) {
	o.PartialMirrorValue1 = &v
}

// GetPartialMirrorValue2 returns the PartialMirrorValue2 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorValue2() string {
	if o == nil || o.PartialMirrorValue2 == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorValue2
}

// GetPartialMirrorValue2Ok returns a tuple with the PartialMirrorValue2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorValue2Ok() (*string, bool) {
	if o == nil || o.PartialMirrorValue2 == nil {
		return nil, false
	}
	return o.PartialMirrorValue2, true
}

// HasPartialMirrorValue2 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorValue2() bool {
	if o != nil && o.PartialMirrorValue2 != nil {
		return true
	}

	return false
}

// SetPartialMirrorValue2 gets a reference to the given string and assigns it to the PartialMirrorValue2 field.
func (o *BiosPolicyAllOf) SetPartialMirrorValue2(v string) {
	o.PartialMirrorValue2 = &v
}

// GetPartialMirrorValue3 returns the PartialMirrorValue3 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorValue3() string {
	if o == nil || o.PartialMirrorValue3 == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorValue3
}

// GetPartialMirrorValue3Ok returns a tuple with the PartialMirrorValue3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorValue3Ok() (*string, bool) {
	if o == nil || o.PartialMirrorValue3 == nil {
		return nil, false
	}
	return o.PartialMirrorValue3, true
}

// HasPartialMirrorValue3 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorValue3() bool {
	if o != nil && o.PartialMirrorValue3 != nil {
		return true
	}

	return false
}

// SetPartialMirrorValue3 gets a reference to the given string and assigns it to the PartialMirrorValue3 field.
func (o *BiosPolicyAllOf) SetPartialMirrorValue3(v string) {
	o.PartialMirrorValue3 = &v
}

// GetPartialMirrorValue4 returns the PartialMirrorValue4 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPartialMirrorValue4() string {
	if o == nil || o.PartialMirrorValue4 == nil {
		var ret string
		return ret
	}
	return *o.PartialMirrorValue4
}

// GetPartialMirrorValue4Ok returns a tuple with the PartialMirrorValue4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPartialMirrorValue4Ok() (*string, bool) {
	if o == nil || o.PartialMirrorValue4 == nil {
		return nil, false
	}
	return o.PartialMirrorValue4, true
}

// HasPartialMirrorValue4 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPartialMirrorValue4() bool {
	if o != nil && o.PartialMirrorValue4 != nil {
		return true
	}

	return false
}

// SetPartialMirrorValue4 gets a reference to the given string and assigns it to the PartialMirrorValue4 field.
func (o *BiosPolicyAllOf) SetPartialMirrorValue4(v string) {
	o.PartialMirrorValue4 = &v
}

// GetPatrolScrub returns the PatrolScrub field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPatrolScrub() string {
	if o == nil || o.PatrolScrub == nil {
		var ret string
		return ret
	}
	return *o.PatrolScrub
}

// GetPatrolScrubOk returns a tuple with the PatrolScrub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPatrolScrubOk() (*string, bool) {
	if o == nil || o.PatrolScrub == nil {
		return nil, false
	}
	return o.PatrolScrub, true
}

// HasPatrolScrub returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPatrolScrub() bool {
	if o != nil && o.PatrolScrub != nil {
		return true
	}

	return false
}

// SetPatrolScrub gets a reference to the given string and assigns it to the PatrolScrub field.
func (o *BiosPolicyAllOf) SetPatrolScrub(v string) {
	o.PatrolScrub = &v
}

// GetPatrolScrubDuration returns the PatrolScrubDuration field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPatrolScrubDuration() string {
	if o == nil || o.PatrolScrubDuration == nil {
		var ret string
		return ret
	}
	return *o.PatrolScrubDuration
}

// GetPatrolScrubDurationOk returns a tuple with the PatrolScrubDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPatrolScrubDurationOk() (*string, bool) {
	if o == nil || o.PatrolScrubDuration == nil {
		return nil, false
	}
	return o.PatrolScrubDuration, true
}

// HasPatrolScrubDuration returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPatrolScrubDuration() bool {
	if o != nil && o.PatrolScrubDuration != nil {
		return true
	}

	return false
}

// SetPatrolScrubDuration gets a reference to the given string and assigns it to the PatrolScrubDuration field.
func (o *BiosPolicyAllOf) SetPatrolScrubDuration(v string) {
	o.PatrolScrubDuration = &v
}

// GetPcIeRasSupport returns the PcIeRasSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcIeRasSupport() string {
	if o == nil || o.PcIeRasSupport == nil {
		var ret string
		return ret
	}
	return *o.PcIeRasSupport
}

// GetPcIeRasSupportOk returns a tuple with the PcIeRasSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcIeRasSupportOk() (*string, bool) {
	if o == nil || o.PcIeRasSupport == nil {
		return nil, false
	}
	return o.PcIeRasSupport, true
}

// HasPcIeRasSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcIeRasSupport() bool {
	if o != nil && o.PcIeRasSupport != nil {
		return true
	}

	return false
}

// SetPcIeRasSupport gets a reference to the given string and assigns it to the PcIeRasSupport field.
func (o *BiosPolicyAllOf) SetPcIeRasSupport(v string) {
	o.PcIeRasSupport = &v
}

// GetPcIeSsdHotPlugSupport returns the PcIeSsdHotPlugSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcIeSsdHotPlugSupport() string {
	if o == nil || o.PcIeSsdHotPlugSupport == nil {
		var ret string
		return ret
	}
	return *o.PcIeSsdHotPlugSupport
}

// GetPcIeSsdHotPlugSupportOk returns a tuple with the PcIeSsdHotPlugSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcIeSsdHotPlugSupportOk() (*string, bool) {
	if o == nil || o.PcIeSsdHotPlugSupport == nil {
		return nil, false
	}
	return o.PcIeSsdHotPlugSupport, true
}

// HasPcIeSsdHotPlugSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcIeSsdHotPlugSupport() bool {
	if o != nil && o.PcIeSsdHotPlugSupport != nil {
		return true
	}

	return false
}

// SetPcIeSsdHotPlugSupport gets a reference to the given string and assigns it to the PcIeSsdHotPlugSupport field.
func (o *BiosPolicyAllOf) SetPcIeSsdHotPlugSupport(v string) {
	o.PcIeSsdHotPlugSupport = &v
}

// GetPchUsb30mode returns the PchUsb30mode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPchUsb30mode() string {
	if o == nil || o.PchUsb30mode == nil {
		var ret string
		return ret
	}
	return *o.PchUsb30mode
}

// GetPchUsb30modeOk returns a tuple with the PchUsb30mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPchUsb30modeOk() (*string, bool) {
	if o == nil || o.PchUsb30mode == nil {
		return nil, false
	}
	return o.PchUsb30mode, true
}

// HasPchUsb30mode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPchUsb30mode() bool {
	if o != nil && o.PchUsb30mode != nil {
		return true
	}

	return false
}

// SetPchUsb30mode gets a reference to the given string and assigns it to the PchUsb30mode field.
func (o *BiosPolicyAllOf) SetPchUsb30mode(v string) {
	o.PchUsb30mode = &v
}

// GetPciOptionRoMs returns the PciOptionRoMs field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPciOptionRoMs() string {
	if o == nil || o.PciOptionRoMs == nil {
		var ret string
		return ret
	}
	return *o.PciOptionRoMs
}

// GetPciOptionRoMsOk returns a tuple with the PciOptionRoMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPciOptionRoMsOk() (*string, bool) {
	if o == nil || o.PciOptionRoMs == nil {
		return nil, false
	}
	return o.PciOptionRoMs, true
}

// HasPciOptionRoMs returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPciOptionRoMs() bool {
	if o != nil && o.PciOptionRoMs != nil {
		return true
	}

	return false
}

// SetPciOptionRoMs gets a reference to the given string and assigns it to the PciOptionRoMs field.
func (o *BiosPolicyAllOf) SetPciOptionRoMs(v string) {
	o.PciOptionRoMs = &v
}

// GetPciRomClp returns the PciRomClp field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPciRomClp() string {
	if o == nil || o.PciRomClp == nil {
		var ret string
		return ret
	}
	return *o.PciRomClp
}

// GetPciRomClpOk returns a tuple with the PciRomClp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPciRomClpOk() (*string, bool) {
	if o == nil || o.PciRomClp == nil {
		return nil, false
	}
	return o.PciRomClp, true
}

// HasPciRomClp returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPciRomClp() bool {
	if o != nil && o.PciRomClp != nil {
		return true
	}

	return false
}

// SetPciRomClp gets a reference to the given string and assigns it to the PciRomClp field.
func (o *BiosPolicyAllOf) SetPciRomClp(v string) {
	o.PciRomClp = &v
}

// GetPcieAriSupport returns the PcieAriSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieAriSupport() string {
	if o == nil || o.PcieAriSupport == nil {
		var ret string
		return ret
	}
	return *o.PcieAriSupport
}

// GetPcieAriSupportOk returns a tuple with the PcieAriSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieAriSupportOk() (*string, bool) {
	if o == nil || o.PcieAriSupport == nil {
		return nil, false
	}
	return o.PcieAriSupport, true
}

// HasPcieAriSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieAriSupport() bool {
	if o != nil && o.PcieAriSupport != nil {
		return true
	}

	return false
}

// SetPcieAriSupport gets a reference to the given string and assigns it to the PcieAriSupport field.
func (o *BiosPolicyAllOf) SetPcieAriSupport(v string) {
	o.PcieAriSupport = &v
}

// GetPciePllSsc returns the PciePllSsc field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPciePllSsc() string {
	if o == nil || o.PciePllSsc == nil {
		var ret string
		return ret
	}
	return *o.PciePllSsc
}

// GetPciePllSscOk returns a tuple with the PciePllSsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPciePllSscOk() (*string, bool) {
	if o == nil || o.PciePllSsc == nil {
		return nil, false
	}
	return o.PciePllSsc, true
}

// HasPciePllSsc returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPciePllSsc() bool {
	if o != nil && o.PciePllSsc != nil {
		return true
	}

	return false
}

// SetPciePllSsc gets a reference to the given string and assigns it to the PciePllSsc field.
func (o *BiosPolicyAllOf) SetPciePllSsc(v string) {
	o.PciePllSsc = &v
}

// GetPcieSlotMraid1linkSpeed returns the PcieSlotMraid1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMraid1linkSpeed() string {
	if o == nil || o.PcieSlotMraid1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMraid1linkSpeed
}

// GetPcieSlotMraid1linkSpeedOk returns a tuple with the PcieSlotMraid1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMraid1linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotMraid1linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotMraid1linkSpeed, true
}

// HasPcieSlotMraid1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMraid1linkSpeed() bool {
	if o != nil && o.PcieSlotMraid1linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotMraid1linkSpeed gets a reference to the given string and assigns it to the PcieSlotMraid1linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotMraid1linkSpeed(v string) {
	o.PcieSlotMraid1linkSpeed = &v
}

// GetPcieSlotMraid1optionRom returns the PcieSlotMraid1optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMraid1optionRom() string {
	if o == nil || o.PcieSlotMraid1optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMraid1optionRom
}

// GetPcieSlotMraid1optionRomOk returns a tuple with the PcieSlotMraid1optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMraid1optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotMraid1optionRom == nil {
		return nil, false
	}
	return o.PcieSlotMraid1optionRom, true
}

// HasPcieSlotMraid1optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMraid1optionRom() bool {
	if o != nil && o.PcieSlotMraid1optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotMraid1optionRom gets a reference to the given string and assigns it to the PcieSlotMraid1optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotMraid1optionRom(v string) {
	o.PcieSlotMraid1optionRom = &v
}

// GetPcieSlotMraid2linkSpeed returns the PcieSlotMraid2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMraid2linkSpeed() string {
	if o == nil || o.PcieSlotMraid2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMraid2linkSpeed
}

// GetPcieSlotMraid2linkSpeedOk returns a tuple with the PcieSlotMraid2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMraid2linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotMraid2linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotMraid2linkSpeed, true
}

// HasPcieSlotMraid2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMraid2linkSpeed() bool {
	if o != nil && o.PcieSlotMraid2linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotMraid2linkSpeed gets a reference to the given string and assigns it to the PcieSlotMraid2linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotMraid2linkSpeed(v string) {
	o.PcieSlotMraid2linkSpeed = &v
}

// GetPcieSlotMraid2optionRom returns the PcieSlotMraid2optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMraid2optionRom() string {
	if o == nil || o.PcieSlotMraid2optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMraid2optionRom
}

// GetPcieSlotMraid2optionRomOk returns a tuple with the PcieSlotMraid2optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMraid2optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotMraid2optionRom == nil {
		return nil, false
	}
	return o.PcieSlotMraid2optionRom, true
}

// HasPcieSlotMraid2optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMraid2optionRom() bool {
	if o != nil && o.PcieSlotMraid2optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotMraid2optionRom gets a reference to the given string and assigns it to the PcieSlotMraid2optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotMraid2optionRom(v string) {
	o.PcieSlotMraid2optionRom = &v
}

// GetPcieSlotMstorraidLinkSpeed returns the PcieSlotMstorraidLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMstorraidLinkSpeed() string {
	if o == nil || o.PcieSlotMstorraidLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMstorraidLinkSpeed
}

// GetPcieSlotMstorraidLinkSpeedOk returns a tuple with the PcieSlotMstorraidLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMstorraidLinkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotMstorraidLinkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotMstorraidLinkSpeed, true
}

// HasPcieSlotMstorraidLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMstorraidLinkSpeed() bool {
	if o != nil && o.PcieSlotMstorraidLinkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotMstorraidLinkSpeed gets a reference to the given string and assigns it to the PcieSlotMstorraidLinkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotMstorraidLinkSpeed(v string) {
	o.PcieSlotMstorraidLinkSpeed = &v
}

// GetPcieSlotMstorraidOptionRom returns the PcieSlotMstorraidOptionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotMstorraidOptionRom() string {
	if o == nil || o.PcieSlotMstorraidOptionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotMstorraidOptionRom
}

// GetPcieSlotMstorraidOptionRomOk returns a tuple with the PcieSlotMstorraidOptionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotMstorraidOptionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotMstorraidOptionRom == nil {
		return nil, false
	}
	return o.PcieSlotMstorraidOptionRom, true
}

// HasPcieSlotMstorraidOptionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotMstorraidOptionRom() bool {
	if o != nil && o.PcieSlotMstorraidOptionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotMstorraidOptionRom gets a reference to the given string and assigns it to the PcieSlotMstorraidOptionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotMstorraidOptionRom(v string) {
	o.PcieSlotMstorraidOptionRom = &v
}

// GetPcieSlotNvme1linkSpeed returns the PcieSlotNvme1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme1linkSpeed() string {
	if o == nil || o.PcieSlotNvme1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme1linkSpeed
}

// GetPcieSlotNvme1linkSpeedOk returns a tuple with the PcieSlotNvme1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme1linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme1linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme1linkSpeed, true
}

// HasPcieSlotNvme1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme1linkSpeed() bool {
	if o != nil && o.PcieSlotNvme1linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme1linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme1linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme1linkSpeed(v string) {
	o.PcieSlotNvme1linkSpeed = &v
}

// GetPcieSlotNvme1optionRom returns the PcieSlotNvme1optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme1optionRom() string {
	if o == nil || o.PcieSlotNvme1optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme1optionRom
}

// GetPcieSlotNvme1optionRomOk returns a tuple with the PcieSlotNvme1optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme1optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme1optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme1optionRom, true
}

// HasPcieSlotNvme1optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme1optionRom() bool {
	if o != nil && o.PcieSlotNvme1optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme1optionRom gets a reference to the given string and assigns it to the PcieSlotNvme1optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme1optionRom(v string) {
	o.PcieSlotNvme1optionRom = &v
}

// GetPcieSlotNvme2linkSpeed returns the PcieSlotNvme2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme2linkSpeed() string {
	if o == nil || o.PcieSlotNvme2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme2linkSpeed
}

// GetPcieSlotNvme2linkSpeedOk returns a tuple with the PcieSlotNvme2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme2linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme2linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme2linkSpeed, true
}

// HasPcieSlotNvme2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme2linkSpeed() bool {
	if o != nil && o.PcieSlotNvme2linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme2linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme2linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme2linkSpeed(v string) {
	o.PcieSlotNvme2linkSpeed = &v
}

// GetPcieSlotNvme2optionRom returns the PcieSlotNvme2optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme2optionRom() string {
	if o == nil || o.PcieSlotNvme2optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme2optionRom
}

// GetPcieSlotNvme2optionRomOk returns a tuple with the PcieSlotNvme2optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme2optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme2optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme2optionRom, true
}

// HasPcieSlotNvme2optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme2optionRom() bool {
	if o != nil && o.PcieSlotNvme2optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme2optionRom gets a reference to the given string and assigns it to the PcieSlotNvme2optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme2optionRom(v string) {
	o.PcieSlotNvme2optionRom = &v
}

// GetPcieSlotNvme3linkSpeed returns the PcieSlotNvme3linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme3linkSpeed() string {
	if o == nil || o.PcieSlotNvme3linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme3linkSpeed
}

// GetPcieSlotNvme3linkSpeedOk returns a tuple with the PcieSlotNvme3linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme3linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme3linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme3linkSpeed, true
}

// HasPcieSlotNvme3linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme3linkSpeed() bool {
	if o != nil && o.PcieSlotNvme3linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme3linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme3linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme3linkSpeed(v string) {
	o.PcieSlotNvme3linkSpeed = &v
}

// GetPcieSlotNvme3optionRom returns the PcieSlotNvme3optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme3optionRom() string {
	if o == nil || o.PcieSlotNvme3optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme3optionRom
}

// GetPcieSlotNvme3optionRomOk returns a tuple with the PcieSlotNvme3optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme3optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme3optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme3optionRom, true
}

// HasPcieSlotNvme3optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme3optionRom() bool {
	if o != nil && o.PcieSlotNvme3optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme3optionRom gets a reference to the given string and assigns it to the PcieSlotNvme3optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme3optionRom(v string) {
	o.PcieSlotNvme3optionRom = &v
}

// GetPcieSlotNvme4linkSpeed returns the PcieSlotNvme4linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme4linkSpeed() string {
	if o == nil || o.PcieSlotNvme4linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme4linkSpeed
}

// GetPcieSlotNvme4linkSpeedOk returns a tuple with the PcieSlotNvme4linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme4linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme4linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme4linkSpeed, true
}

// HasPcieSlotNvme4linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme4linkSpeed() bool {
	if o != nil && o.PcieSlotNvme4linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme4linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme4linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme4linkSpeed(v string) {
	o.PcieSlotNvme4linkSpeed = &v
}

// GetPcieSlotNvme4optionRom returns the PcieSlotNvme4optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme4optionRom() string {
	if o == nil || o.PcieSlotNvme4optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme4optionRom
}

// GetPcieSlotNvme4optionRomOk returns a tuple with the PcieSlotNvme4optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme4optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme4optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme4optionRom, true
}

// HasPcieSlotNvme4optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme4optionRom() bool {
	if o != nil && o.PcieSlotNvme4optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme4optionRom gets a reference to the given string and assigns it to the PcieSlotNvme4optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme4optionRom(v string) {
	o.PcieSlotNvme4optionRom = &v
}

// GetPcieSlotNvme5linkSpeed returns the PcieSlotNvme5linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme5linkSpeed() string {
	if o == nil || o.PcieSlotNvme5linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme5linkSpeed
}

// GetPcieSlotNvme5linkSpeedOk returns a tuple with the PcieSlotNvme5linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme5linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme5linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme5linkSpeed, true
}

// HasPcieSlotNvme5linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme5linkSpeed() bool {
	if o != nil && o.PcieSlotNvme5linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme5linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme5linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme5linkSpeed(v string) {
	o.PcieSlotNvme5linkSpeed = &v
}

// GetPcieSlotNvme5optionRom returns the PcieSlotNvme5optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme5optionRom() string {
	if o == nil || o.PcieSlotNvme5optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme5optionRom
}

// GetPcieSlotNvme5optionRomOk returns a tuple with the PcieSlotNvme5optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme5optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme5optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme5optionRom, true
}

// HasPcieSlotNvme5optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme5optionRom() bool {
	if o != nil && o.PcieSlotNvme5optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme5optionRom gets a reference to the given string and assigns it to the PcieSlotNvme5optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme5optionRom(v string) {
	o.PcieSlotNvme5optionRom = &v
}

// GetPcieSlotNvme6linkSpeed returns the PcieSlotNvme6linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme6linkSpeed() string {
	if o == nil || o.PcieSlotNvme6linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme6linkSpeed
}

// GetPcieSlotNvme6linkSpeedOk returns a tuple with the PcieSlotNvme6linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme6linkSpeedOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme6linkSpeed == nil {
		return nil, false
	}
	return o.PcieSlotNvme6linkSpeed, true
}

// HasPcieSlotNvme6linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme6linkSpeed() bool {
	if o != nil && o.PcieSlotNvme6linkSpeed != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme6linkSpeed gets a reference to the given string and assigns it to the PcieSlotNvme6linkSpeed field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme6linkSpeed(v string) {
	o.PcieSlotNvme6linkSpeed = &v
}

// GetPcieSlotNvme6optionRom returns the PcieSlotNvme6optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPcieSlotNvme6optionRom() string {
	if o == nil || o.PcieSlotNvme6optionRom == nil {
		var ret string
		return ret
	}
	return *o.PcieSlotNvme6optionRom
}

// GetPcieSlotNvme6optionRomOk returns a tuple with the PcieSlotNvme6optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPcieSlotNvme6optionRomOk() (*string, bool) {
	if o == nil || o.PcieSlotNvme6optionRom == nil {
		return nil, false
	}
	return o.PcieSlotNvme6optionRom, true
}

// HasPcieSlotNvme6optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPcieSlotNvme6optionRom() bool {
	if o != nil && o.PcieSlotNvme6optionRom != nil {
		return true
	}

	return false
}

// SetPcieSlotNvme6optionRom gets a reference to the given string and assigns it to the PcieSlotNvme6optionRom field.
func (o *BiosPolicyAllOf) SetPcieSlotNvme6optionRom(v string) {
	o.PcieSlotNvme6optionRom = &v
}

// GetPopSupport returns the PopSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPopSupport() string {
	if o == nil || o.PopSupport == nil {
		var ret string
		return ret
	}
	return *o.PopSupport
}

// GetPopSupportOk returns a tuple with the PopSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPopSupportOk() (*string, bool) {
	if o == nil || o.PopSupport == nil {
		return nil, false
	}
	return o.PopSupport, true
}

// HasPopSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPopSupport() bool {
	if o != nil && o.PopSupport != nil {
		return true
	}

	return false
}

// SetPopSupport gets a reference to the given string and assigns it to the PopSupport field.
func (o *BiosPolicyAllOf) SetPopSupport(v string) {
	o.PopSupport = &v
}

// GetPostErrorPause returns the PostErrorPause field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPostErrorPause() string {
	if o == nil || o.PostErrorPause == nil {
		var ret string
		return ret
	}
	return *o.PostErrorPause
}

// GetPostErrorPauseOk returns a tuple with the PostErrorPause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPostErrorPauseOk() (*string, bool) {
	if o == nil || o.PostErrorPause == nil {
		return nil, false
	}
	return o.PostErrorPause, true
}

// HasPostErrorPause returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPostErrorPause() bool {
	if o != nil && o.PostErrorPause != nil {
		return true
	}

	return false
}

// SetPostErrorPause gets a reference to the given string and assigns it to the PostErrorPause field.
func (o *BiosPolicyAllOf) SetPostErrorPause(v string) {
	o.PostErrorPause = &v
}

// GetPostPackageRepair returns the PostPackageRepair field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPostPackageRepair() string {
	if o == nil || o.PostPackageRepair == nil {
		var ret string
		return ret
	}
	return *o.PostPackageRepair
}

// GetPostPackageRepairOk returns a tuple with the PostPackageRepair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPostPackageRepairOk() (*string, bool) {
	if o == nil || o.PostPackageRepair == nil {
		return nil, false
	}
	return o.PostPackageRepair, true
}

// HasPostPackageRepair returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPostPackageRepair() bool {
	if o != nil && o.PostPackageRepair != nil {
		return true
	}

	return false
}

// SetPostPackageRepair gets a reference to the given string and assigns it to the PostPackageRepair field.
func (o *BiosPolicyAllOf) SetPostPackageRepair(v string) {
	o.PostPackageRepair = &v
}

// GetProcessorC1e returns the ProcessorC1e field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetProcessorC1e() string {
	if o == nil || o.ProcessorC1e == nil {
		var ret string
		return ret
	}
	return *o.ProcessorC1e
}

// GetProcessorC1eOk returns a tuple with the ProcessorC1e field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetProcessorC1eOk() (*string, bool) {
	if o == nil || o.ProcessorC1e == nil {
		return nil, false
	}
	return o.ProcessorC1e, true
}

// HasProcessorC1e returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasProcessorC1e() bool {
	if o != nil && o.ProcessorC1e != nil {
		return true
	}

	return false
}

// SetProcessorC1e gets a reference to the given string and assigns it to the ProcessorC1e field.
func (o *BiosPolicyAllOf) SetProcessorC1e(v string) {
	o.ProcessorC1e = &v
}

// GetProcessorC3report returns the ProcessorC3report field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetProcessorC3report() string {
	if o == nil || o.ProcessorC3report == nil {
		var ret string
		return ret
	}
	return *o.ProcessorC3report
}

// GetProcessorC3reportOk returns a tuple with the ProcessorC3report field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetProcessorC3reportOk() (*string, bool) {
	if o == nil || o.ProcessorC3report == nil {
		return nil, false
	}
	return o.ProcessorC3report, true
}

// HasProcessorC3report returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasProcessorC3report() bool {
	if o != nil && o.ProcessorC3report != nil {
		return true
	}

	return false
}

// SetProcessorC3report gets a reference to the given string and assigns it to the ProcessorC3report field.
func (o *BiosPolicyAllOf) SetProcessorC3report(v string) {
	o.ProcessorC3report = &v
}

// GetProcessorC6report returns the ProcessorC6report field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetProcessorC6report() string {
	if o == nil || o.ProcessorC6report == nil {
		var ret string
		return ret
	}
	return *o.ProcessorC6report
}

// GetProcessorC6reportOk returns a tuple with the ProcessorC6report field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetProcessorC6reportOk() (*string, bool) {
	if o == nil || o.ProcessorC6report == nil {
		return nil, false
	}
	return o.ProcessorC6report, true
}

// HasProcessorC6report returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasProcessorC6report() bool {
	if o != nil && o.ProcessorC6report != nil {
		return true
	}

	return false
}

// SetProcessorC6report gets a reference to the given string and assigns it to the ProcessorC6report field.
func (o *BiosPolicyAllOf) SetProcessorC6report(v string) {
	o.ProcessorC6report = &v
}

// GetProcessorCstate returns the ProcessorCstate field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetProcessorCstate() string {
	if o == nil || o.ProcessorCstate == nil {
		var ret string
		return ret
	}
	return *o.ProcessorCstate
}

// GetProcessorCstateOk returns a tuple with the ProcessorCstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetProcessorCstateOk() (*string, bool) {
	if o == nil || o.ProcessorCstate == nil {
		return nil, false
	}
	return o.ProcessorCstate, true
}

// HasProcessorCstate returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasProcessorCstate() bool {
	if o != nil && o.ProcessorCstate != nil {
		return true
	}

	return false
}

// SetProcessorCstate gets a reference to the given string and assigns it to the ProcessorCstate field.
func (o *BiosPolicyAllOf) SetProcessorCstate(v string) {
	o.ProcessorCstate = &v
}

// GetPsata returns the Psata field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPsata() string {
	if o == nil || o.Psata == nil {
		var ret string
		return ret
	}
	return *o.Psata
}

// GetPsataOk returns a tuple with the Psata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPsataOk() (*string, bool) {
	if o == nil || o.Psata == nil {
		return nil, false
	}
	return o.Psata, true
}

// HasPsata returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPsata() bool {
	if o != nil && o.Psata != nil {
		return true
	}

	return false
}

// SetPsata gets a reference to the given string and assigns it to the Psata field.
func (o *BiosPolicyAllOf) SetPsata(v string) {
	o.Psata = &v
}

// GetPstateCoordType returns the PstateCoordType field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPstateCoordType() string {
	if o == nil || o.PstateCoordType == nil {
		var ret string
		return ret
	}
	return *o.PstateCoordType
}

// GetPstateCoordTypeOk returns a tuple with the PstateCoordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPstateCoordTypeOk() (*string, bool) {
	if o == nil || o.PstateCoordType == nil {
		return nil, false
	}
	return o.PstateCoordType, true
}

// HasPstateCoordType returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPstateCoordType() bool {
	if o != nil && o.PstateCoordType != nil {
		return true
	}

	return false
}

// SetPstateCoordType gets a reference to the given string and assigns it to the PstateCoordType field.
func (o *BiosPolicyAllOf) SetPstateCoordType(v string) {
	o.PstateCoordType = &v
}

// GetPuttyKeyPad returns the PuttyKeyPad field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPuttyKeyPad() string {
	if o == nil || o.PuttyKeyPad == nil {
		var ret string
		return ret
	}
	return *o.PuttyKeyPad
}

// GetPuttyKeyPadOk returns a tuple with the PuttyKeyPad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPuttyKeyPadOk() (*string, bool) {
	if o == nil || o.PuttyKeyPad == nil {
		return nil, false
	}
	return o.PuttyKeyPad, true
}

// HasPuttyKeyPad returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPuttyKeyPad() bool {
	if o != nil && o.PuttyKeyPad != nil {
		return true
	}

	return false
}

// SetPuttyKeyPad gets a reference to the given string and assigns it to the PuttyKeyPad field.
func (o *BiosPolicyAllOf) SetPuttyKeyPad(v string) {
	o.PuttyKeyPad = &v
}

// GetPwrPerfTuning returns the PwrPerfTuning field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetPwrPerfTuning() string {
	if o == nil || o.PwrPerfTuning == nil {
		var ret string
		return ret
	}
	return *o.PwrPerfTuning
}

// GetPwrPerfTuningOk returns a tuple with the PwrPerfTuning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetPwrPerfTuningOk() (*string, bool) {
	if o == nil || o.PwrPerfTuning == nil {
		return nil, false
	}
	return o.PwrPerfTuning, true
}

// HasPwrPerfTuning returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasPwrPerfTuning() bool {
	if o != nil && o.PwrPerfTuning != nil {
		return true
	}

	return false
}

// SetPwrPerfTuning gets a reference to the given string and assigns it to the PwrPerfTuning field.
func (o *BiosPolicyAllOf) SetPwrPerfTuning(v string) {
	o.PwrPerfTuning = &v
}

// GetQpiLinkFrequency returns the QpiLinkFrequency field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetQpiLinkFrequency() string {
	if o == nil || o.QpiLinkFrequency == nil {
		var ret string
		return ret
	}
	return *o.QpiLinkFrequency
}

// GetQpiLinkFrequencyOk returns a tuple with the QpiLinkFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetQpiLinkFrequencyOk() (*string, bool) {
	if o == nil || o.QpiLinkFrequency == nil {
		return nil, false
	}
	return o.QpiLinkFrequency, true
}

// HasQpiLinkFrequency returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasQpiLinkFrequency() bool {
	if o != nil && o.QpiLinkFrequency != nil {
		return true
	}

	return false
}

// SetQpiLinkFrequency gets a reference to the given string and assigns it to the QpiLinkFrequency field.
func (o *BiosPolicyAllOf) SetQpiLinkFrequency(v string) {
	o.QpiLinkFrequency = &v
}

// GetQpiLinkSpeed returns the QpiLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetQpiLinkSpeed() string {
	if o == nil || o.QpiLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.QpiLinkSpeed
}

// GetQpiLinkSpeedOk returns a tuple with the QpiLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetQpiLinkSpeedOk() (*string, bool) {
	if o == nil || o.QpiLinkSpeed == nil {
		return nil, false
	}
	return o.QpiLinkSpeed, true
}

// HasQpiLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasQpiLinkSpeed() bool {
	if o != nil && o.QpiLinkSpeed != nil {
		return true
	}

	return false
}

// SetQpiLinkSpeed gets a reference to the given string and assigns it to the QpiLinkSpeed field.
func (o *BiosPolicyAllOf) SetQpiLinkSpeed(v string) {
	o.QpiLinkSpeed = &v
}

// GetQpiSnoopMode returns the QpiSnoopMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetQpiSnoopMode() string {
	if o == nil || o.QpiSnoopMode == nil {
		var ret string
		return ret
	}
	return *o.QpiSnoopMode
}

// GetQpiSnoopModeOk returns a tuple with the QpiSnoopMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetQpiSnoopModeOk() (*string, bool) {
	if o == nil || o.QpiSnoopMode == nil {
		return nil, false
	}
	return o.QpiSnoopMode, true
}

// HasQpiSnoopMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasQpiSnoopMode() bool {
	if o != nil && o.QpiSnoopMode != nil {
		return true
	}

	return false
}

// SetQpiSnoopMode gets a reference to the given string and assigns it to the QpiSnoopMode field.
func (o *BiosPolicyAllOf) SetQpiSnoopMode(v string) {
	o.QpiSnoopMode = &v
}

// GetRankInterLeave returns the RankInterLeave field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetRankInterLeave() string {
	if o == nil || o.RankInterLeave == nil {
		var ret string
		return ret
	}
	return *o.RankInterLeave
}

// GetRankInterLeaveOk returns a tuple with the RankInterLeave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetRankInterLeaveOk() (*string, bool) {
	if o == nil || o.RankInterLeave == nil {
		return nil, false
	}
	return o.RankInterLeave, true
}

// HasRankInterLeave returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasRankInterLeave() bool {
	if o != nil && o.RankInterLeave != nil {
		return true
	}

	return false
}

// SetRankInterLeave gets a reference to the given string and assigns it to the RankInterLeave field.
func (o *BiosPolicyAllOf) SetRankInterLeave(v string) {
	o.RankInterLeave = &v
}

// GetRedirectionAfterPost returns the RedirectionAfterPost field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetRedirectionAfterPost() string {
	if o == nil || o.RedirectionAfterPost == nil {
		var ret string
		return ret
	}
	return *o.RedirectionAfterPost
}

// GetRedirectionAfterPostOk returns a tuple with the RedirectionAfterPost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetRedirectionAfterPostOk() (*string, bool) {
	if o == nil || o.RedirectionAfterPost == nil {
		return nil, false
	}
	return o.RedirectionAfterPost, true
}

// HasRedirectionAfterPost returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasRedirectionAfterPost() bool {
	if o != nil && o.RedirectionAfterPost != nil {
		return true
	}

	return false
}

// SetRedirectionAfterPost gets a reference to the given string and assigns it to the RedirectionAfterPost field.
func (o *BiosPolicyAllOf) SetRedirectionAfterPost(v string) {
	o.RedirectionAfterPost = &v
}

// GetSataModeSelect returns the SataModeSelect field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSataModeSelect() string {
	if o == nil || o.SataModeSelect == nil {
		var ret string
		return ret
	}
	return *o.SataModeSelect
}

// GetSataModeSelectOk returns a tuple with the SataModeSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSataModeSelectOk() (*string, bool) {
	if o == nil || o.SataModeSelect == nil {
		return nil, false
	}
	return o.SataModeSelect, true
}

// HasSataModeSelect returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSataModeSelect() bool {
	if o != nil && o.SataModeSelect != nil {
		return true
	}

	return false
}

// SetSataModeSelect gets a reference to the given string and assigns it to the SataModeSelect field.
func (o *BiosPolicyAllOf) SetSataModeSelect(v string) {
	o.SataModeSelect = &v
}

// GetSelectMemoryRasConfiguration returns the SelectMemoryRasConfiguration field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSelectMemoryRasConfiguration() string {
	if o == nil || o.SelectMemoryRasConfiguration == nil {
		var ret string
		return ret
	}
	return *o.SelectMemoryRasConfiguration
}

// GetSelectMemoryRasConfigurationOk returns a tuple with the SelectMemoryRasConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSelectMemoryRasConfigurationOk() (*string, bool) {
	if o == nil || o.SelectMemoryRasConfiguration == nil {
		return nil, false
	}
	return o.SelectMemoryRasConfiguration, true
}

// HasSelectMemoryRasConfiguration returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSelectMemoryRasConfiguration() bool {
	if o != nil && o.SelectMemoryRasConfiguration != nil {
		return true
	}

	return false
}

// SetSelectMemoryRasConfiguration gets a reference to the given string and assigns it to the SelectMemoryRasConfiguration field.
func (o *BiosPolicyAllOf) SetSelectMemoryRasConfiguration(v string) {
	o.SelectMemoryRasConfiguration = &v
}

// GetSelectPprType returns the SelectPprType field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSelectPprType() string {
	if o == nil || o.SelectPprType == nil {
		var ret string
		return ret
	}
	return *o.SelectPprType
}

// GetSelectPprTypeOk returns a tuple with the SelectPprType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSelectPprTypeOk() (*string, bool) {
	if o == nil || o.SelectPprType == nil {
		return nil, false
	}
	return o.SelectPprType, true
}

// HasSelectPprType returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSelectPprType() bool {
	if o != nil && o.SelectPprType != nil {
		return true
	}

	return false
}

// SetSelectPprType gets a reference to the given string and assigns it to the SelectPprType field.
func (o *BiosPolicyAllOf) SetSelectPprType(v string) {
	o.SelectPprType = &v
}

// GetSerialPortAenable returns the SerialPortAenable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSerialPortAenable() string {
	if o == nil || o.SerialPortAenable == nil {
		var ret string
		return ret
	}
	return *o.SerialPortAenable
}

// GetSerialPortAenableOk returns a tuple with the SerialPortAenable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSerialPortAenableOk() (*string, bool) {
	if o == nil || o.SerialPortAenable == nil {
		return nil, false
	}
	return o.SerialPortAenable, true
}

// HasSerialPortAenable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSerialPortAenable() bool {
	if o != nil && o.SerialPortAenable != nil {
		return true
	}

	return false
}

// SetSerialPortAenable gets a reference to the given string and assigns it to the SerialPortAenable field.
func (o *BiosPolicyAllOf) SetSerialPortAenable(v string) {
	o.SerialPortAenable = &v
}

// GetSev returns the Sev field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSev() string {
	if o == nil || o.Sev == nil {
		var ret string
		return ret
	}
	return *o.Sev
}

// GetSevOk returns a tuple with the Sev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSevOk() (*string, bool) {
	if o == nil || o.Sev == nil {
		return nil, false
	}
	return o.Sev, true
}

// HasSev returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSev() bool {
	if o != nil && o.Sev != nil {
		return true
	}

	return false
}

// SetSev gets a reference to the given string and assigns it to the Sev field.
func (o *BiosPolicyAllOf) SetSev(v string) {
	o.Sev = &v
}

// GetSgxAutoRegistrationAgent returns the SgxAutoRegistrationAgent field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxAutoRegistrationAgent() string {
	if o == nil || o.SgxAutoRegistrationAgent == nil {
		var ret string
		return ret
	}
	return *o.SgxAutoRegistrationAgent
}

// GetSgxAutoRegistrationAgentOk returns a tuple with the SgxAutoRegistrationAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxAutoRegistrationAgentOk() (*string, bool) {
	if o == nil || o.SgxAutoRegistrationAgent == nil {
		return nil, false
	}
	return o.SgxAutoRegistrationAgent, true
}

// HasSgxAutoRegistrationAgent returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxAutoRegistrationAgent() bool {
	if o != nil && o.SgxAutoRegistrationAgent != nil {
		return true
	}

	return false
}

// SetSgxAutoRegistrationAgent gets a reference to the given string and assigns it to the SgxAutoRegistrationAgent field.
func (o *BiosPolicyAllOf) SetSgxAutoRegistrationAgent(v string) {
	o.SgxAutoRegistrationAgent = &v
}

// GetSgxEpoch0 returns the SgxEpoch0 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxEpoch0() string {
	if o == nil || o.SgxEpoch0 == nil {
		var ret string
		return ret
	}
	return *o.SgxEpoch0
}

// GetSgxEpoch0Ok returns a tuple with the SgxEpoch0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxEpoch0Ok() (*string, bool) {
	if o == nil || o.SgxEpoch0 == nil {
		return nil, false
	}
	return o.SgxEpoch0, true
}

// HasSgxEpoch0 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxEpoch0() bool {
	if o != nil && o.SgxEpoch0 != nil {
		return true
	}

	return false
}

// SetSgxEpoch0 gets a reference to the given string and assigns it to the SgxEpoch0 field.
func (o *BiosPolicyAllOf) SetSgxEpoch0(v string) {
	o.SgxEpoch0 = &v
}

// GetSgxEpoch1 returns the SgxEpoch1 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxEpoch1() string {
	if o == nil || o.SgxEpoch1 == nil {
		var ret string
		return ret
	}
	return *o.SgxEpoch1
}

// GetSgxEpoch1Ok returns a tuple with the SgxEpoch1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxEpoch1Ok() (*string, bool) {
	if o == nil || o.SgxEpoch1 == nil {
		return nil, false
	}
	return o.SgxEpoch1, true
}

// HasSgxEpoch1 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxEpoch1() bool {
	if o != nil && o.SgxEpoch1 != nil {
		return true
	}

	return false
}

// SetSgxEpoch1 gets a reference to the given string and assigns it to the SgxEpoch1 field.
func (o *BiosPolicyAllOf) SetSgxEpoch1(v string) {
	o.SgxEpoch1 = &v
}

// GetSgxFactoryReset returns the SgxFactoryReset field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxFactoryReset() string {
	if o == nil || o.SgxFactoryReset == nil {
		var ret string
		return ret
	}
	return *o.SgxFactoryReset
}

// GetSgxFactoryResetOk returns a tuple with the SgxFactoryReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxFactoryResetOk() (*string, bool) {
	if o == nil || o.SgxFactoryReset == nil {
		return nil, false
	}
	return o.SgxFactoryReset, true
}

// HasSgxFactoryReset returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxFactoryReset() bool {
	if o != nil && o.SgxFactoryReset != nil {
		return true
	}

	return false
}

// SetSgxFactoryReset gets a reference to the given string and assigns it to the SgxFactoryReset field.
func (o *BiosPolicyAllOf) SetSgxFactoryReset(v string) {
	o.SgxFactoryReset = &v
}

// GetSgxLePubKeyHash0 returns the SgxLePubKeyHash0 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash0() string {
	if o == nil || o.SgxLePubKeyHash0 == nil {
		var ret string
		return ret
	}
	return *o.SgxLePubKeyHash0
}

// GetSgxLePubKeyHash0Ok returns a tuple with the SgxLePubKeyHash0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash0Ok() (*string, bool) {
	if o == nil || o.SgxLePubKeyHash0 == nil {
		return nil, false
	}
	return o.SgxLePubKeyHash0, true
}

// HasSgxLePubKeyHash0 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxLePubKeyHash0() bool {
	if o != nil && o.SgxLePubKeyHash0 != nil {
		return true
	}

	return false
}

// SetSgxLePubKeyHash0 gets a reference to the given string and assigns it to the SgxLePubKeyHash0 field.
func (o *BiosPolicyAllOf) SetSgxLePubKeyHash0(v string) {
	o.SgxLePubKeyHash0 = &v
}

// GetSgxLePubKeyHash1 returns the SgxLePubKeyHash1 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash1() string {
	if o == nil || o.SgxLePubKeyHash1 == nil {
		var ret string
		return ret
	}
	return *o.SgxLePubKeyHash1
}

// GetSgxLePubKeyHash1Ok returns a tuple with the SgxLePubKeyHash1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash1Ok() (*string, bool) {
	if o == nil || o.SgxLePubKeyHash1 == nil {
		return nil, false
	}
	return o.SgxLePubKeyHash1, true
}

// HasSgxLePubKeyHash1 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxLePubKeyHash1() bool {
	if o != nil && o.SgxLePubKeyHash1 != nil {
		return true
	}

	return false
}

// SetSgxLePubKeyHash1 gets a reference to the given string and assigns it to the SgxLePubKeyHash1 field.
func (o *BiosPolicyAllOf) SetSgxLePubKeyHash1(v string) {
	o.SgxLePubKeyHash1 = &v
}

// GetSgxLePubKeyHash2 returns the SgxLePubKeyHash2 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash2() string {
	if o == nil || o.SgxLePubKeyHash2 == nil {
		var ret string
		return ret
	}
	return *o.SgxLePubKeyHash2
}

// GetSgxLePubKeyHash2Ok returns a tuple with the SgxLePubKeyHash2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash2Ok() (*string, bool) {
	if o == nil || o.SgxLePubKeyHash2 == nil {
		return nil, false
	}
	return o.SgxLePubKeyHash2, true
}

// HasSgxLePubKeyHash2 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxLePubKeyHash2() bool {
	if o != nil && o.SgxLePubKeyHash2 != nil {
		return true
	}

	return false
}

// SetSgxLePubKeyHash2 gets a reference to the given string and assigns it to the SgxLePubKeyHash2 field.
func (o *BiosPolicyAllOf) SetSgxLePubKeyHash2(v string) {
	o.SgxLePubKeyHash2 = &v
}

// GetSgxLePubKeyHash3 returns the SgxLePubKeyHash3 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash3() string {
	if o == nil || o.SgxLePubKeyHash3 == nil {
		var ret string
		return ret
	}
	return *o.SgxLePubKeyHash3
}

// GetSgxLePubKeyHash3Ok returns a tuple with the SgxLePubKeyHash3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxLePubKeyHash3Ok() (*string, bool) {
	if o == nil || o.SgxLePubKeyHash3 == nil {
		return nil, false
	}
	return o.SgxLePubKeyHash3, true
}

// HasSgxLePubKeyHash3 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxLePubKeyHash3() bool {
	if o != nil && o.SgxLePubKeyHash3 != nil {
		return true
	}

	return false
}

// SetSgxLePubKeyHash3 gets a reference to the given string and assigns it to the SgxLePubKeyHash3 field.
func (o *BiosPolicyAllOf) SetSgxLePubKeyHash3(v string) {
	o.SgxLePubKeyHash3 = &v
}

// GetSgxLeWr returns the SgxLeWr field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxLeWr() string {
	if o == nil || o.SgxLeWr == nil {
		var ret string
		return ret
	}
	return *o.SgxLeWr
}

// GetSgxLeWrOk returns a tuple with the SgxLeWr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxLeWrOk() (*string, bool) {
	if o == nil || o.SgxLeWr == nil {
		return nil, false
	}
	return o.SgxLeWr, true
}

// HasSgxLeWr returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxLeWr() bool {
	if o != nil && o.SgxLeWr != nil {
		return true
	}

	return false
}

// SetSgxLeWr gets a reference to the given string and assigns it to the SgxLeWr field.
func (o *BiosPolicyAllOf) SetSgxLeWr(v string) {
	o.SgxLeWr = &v
}

// GetSgxPackageInfoInBandAccess returns the SgxPackageInfoInBandAccess field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxPackageInfoInBandAccess() string {
	if o == nil || o.SgxPackageInfoInBandAccess == nil {
		var ret string
		return ret
	}
	return *o.SgxPackageInfoInBandAccess
}

// GetSgxPackageInfoInBandAccessOk returns a tuple with the SgxPackageInfoInBandAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxPackageInfoInBandAccessOk() (*string, bool) {
	if o == nil || o.SgxPackageInfoInBandAccess == nil {
		return nil, false
	}
	return o.SgxPackageInfoInBandAccess, true
}

// HasSgxPackageInfoInBandAccess returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxPackageInfoInBandAccess() bool {
	if o != nil && o.SgxPackageInfoInBandAccess != nil {
		return true
	}

	return false
}

// SetSgxPackageInfoInBandAccess gets a reference to the given string and assigns it to the SgxPackageInfoInBandAccess field.
func (o *BiosPolicyAllOf) SetSgxPackageInfoInBandAccess(v string) {
	o.SgxPackageInfoInBandAccess = &v
}

// GetSgxQos returns the SgxQos field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSgxQos() string {
	if o == nil || o.SgxQos == nil {
		var ret string
		return ret
	}
	return *o.SgxQos
}

// GetSgxQosOk returns a tuple with the SgxQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSgxQosOk() (*string, bool) {
	if o == nil || o.SgxQos == nil {
		return nil, false
	}
	return o.SgxQos, true
}

// HasSgxQos returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSgxQos() bool {
	if o != nil && o.SgxQos != nil {
		return true
	}

	return false
}

// SetSgxQos gets a reference to the given string and assigns it to the SgxQos field.
func (o *BiosPolicyAllOf) SetSgxQos(v string) {
	o.SgxQos = &v
}

// GetSinglePctlEnable returns the SinglePctlEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSinglePctlEnable() string {
	if o == nil || o.SinglePctlEnable == nil {
		var ret string
		return ret
	}
	return *o.SinglePctlEnable
}

// GetSinglePctlEnableOk returns a tuple with the SinglePctlEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSinglePctlEnableOk() (*string, bool) {
	if o == nil || o.SinglePctlEnable == nil {
		return nil, false
	}
	return o.SinglePctlEnable, true
}

// HasSinglePctlEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSinglePctlEnable() bool {
	if o != nil && o.SinglePctlEnable != nil {
		return true
	}

	return false
}

// SetSinglePctlEnable gets a reference to the given string and assigns it to the SinglePctlEnable field.
func (o *BiosPolicyAllOf) SetSinglePctlEnable(v string) {
	o.SinglePctlEnable = &v
}

// GetSlot10linkSpeed returns the Slot10linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot10linkSpeed() string {
	if o == nil || o.Slot10linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot10linkSpeed
}

// GetSlot10linkSpeedOk returns a tuple with the Slot10linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot10linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot10linkSpeed == nil {
		return nil, false
	}
	return o.Slot10linkSpeed, true
}

// HasSlot10linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot10linkSpeed() bool {
	if o != nil && o.Slot10linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot10linkSpeed gets a reference to the given string and assigns it to the Slot10linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot10linkSpeed(v string) {
	o.Slot10linkSpeed = &v
}

// GetSlot10state returns the Slot10state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot10state() string {
	if o == nil || o.Slot10state == nil {
		var ret string
		return ret
	}
	return *o.Slot10state
}

// GetSlot10stateOk returns a tuple with the Slot10state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot10stateOk() (*string, bool) {
	if o == nil || o.Slot10state == nil {
		return nil, false
	}
	return o.Slot10state, true
}

// HasSlot10state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot10state() bool {
	if o != nil && o.Slot10state != nil {
		return true
	}

	return false
}

// SetSlot10state gets a reference to the given string and assigns it to the Slot10state field.
func (o *BiosPolicyAllOf) SetSlot10state(v string) {
	o.Slot10state = &v
}

// GetSlot11linkSpeed returns the Slot11linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot11linkSpeed() string {
	if o == nil || o.Slot11linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot11linkSpeed
}

// GetSlot11linkSpeedOk returns a tuple with the Slot11linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot11linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot11linkSpeed == nil {
		return nil, false
	}
	return o.Slot11linkSpeed, true
}

// HasSlot11linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot11linkSpeed() bool {
	if o != nil && o.Slot11linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot11linkSpeed gets a reference to the given string and assigns it to the Slot11linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot11linkSpeed(v string) {
	o.Slot11linkSpeed = &v
}

// GetSlot11state returns the Slot11state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot11state() string {
	if o == nil || o.Slot11state == nil {
		var ret string
		return ret
	}
	return *o.Slot11state
}

// GetSlot11stateOk returns a tuple with the Slot11state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot11stateOk() (*string, bool) {
	if o == nil || o.Slot11state == nil {
		return nil, false
	}
	return o.Slot11state, true
}

// HasSlot11state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot11state() bool {
	if o != nil && o.Slot11state != nil {
		return true
	}

	return false
}

// SetSlot11state gets a reference to the given string and assigns it to the Slot11state field.
func (o *BiosPolicyAllOf) SetSlot11state(v string) {
	o.Slot11state = &v
}

// GetSlot12linkSpeed returns the Slot12linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot12linkSpeed() string {
	if o == nil || o.Slot12linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot12linkSpeed
}

// GetSlot12linkSpeedOk returns a tuple with the Slot12linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot12linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot12linkSpeed == nil {
		return nil, false
	}
	return o.Slot12linkSpeed, true
}

// HasSlot12linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot12linkSpeed() bool {
	if o != nil && o.Slot12linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot12linkSpeed gets a reference to the given string and assigns it to the Slot12linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot12linkSpeed(v string) {
	o.Slot12linkSpeed = &v
}

// GetSlot12state returns the Slot12state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot12state() string {
	if o == nil || o.Slot12state == nil {
		var ret string
		return ret
	}
	return *o.Slot12state
}

// GetSlot12stateOk returns a tuple with the Slot12state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot12stateOk() (*string, bool) {
	if o == nil || o.Slot12state == nil {
		return nil, false
	}
	return o.Slot12state, true
}

// HasSlot12state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot12state() bool {
	if o != nil && o.Slot12state != nil {
		return true
	}

	return false
}

// SetSlot12state gets a reference to the given string and assigns it to the Slot12state field.
func (o *BiosPolicyAllOf) SetSlot12state(v string) {
	o.Slot12state = &v
}

// GetSlot13state returns the Slot13state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot13state() string {
	if o == nil || o.Slot13state == nil {
		var ret string
		return ret
	}
	return *o.Slot13state
}

// GetSlot13stateOk returns a tuple with the Slot13state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot13stateOk() (*string, bool) {
	if o == nil || o.Slot13state == nil {
		return nil, false
	}
	return o.Slot13state, true
}

// HasSlot13state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot13state() bool {
	if o != nil && o.Slot13state != nil {
		return true
	}

	return false
}

// SetSlot13state gets a reference to the given string and assigns it to the Slot13state field.
func (o *BiosPolicyAllOf) SetSlot13state(v string) {
	o.Slot13state = &v
}

// GetSlot14state returns the Slot14state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot14state() string {
	if o == nil || o.Slot14state == nil {
		var ret string
		return ret
	}
	return *o.Slot14state
}

// GetSlot14stateOk returns a tuple with the Slot14state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot14stateOk() (*string, bool) {
	if o == nil || o.Slot14state == nil {
		return nil, false
	}
	return o.Slot14state, true
}

// HasSlot14state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot14state() bool {
	if o != nil && o.Slot14state != nil {
		return true
	}

	return false
}

// SetSlot14state gets a reference to the given string and assigns it to the Slot14state field.
func (o *BiosPolicyAllOf) SetSlot14state(v string) {
	o.Slot14state = &v
}

// GetSlot1linkSpeed returns the Slot1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot1linkSpeed() string {
	if o == nil || o.Slot1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot1linkSpeed
}

// GetSlot1linkSpeedOk returns a tuple with the Slot1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot1linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot1linkSpeed == nil {
		return nil, false
	}
	return o.Slot1linkSpeed, true
}

// HasSlot1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot1linkSpeed() bool {
	if o != nil && o.Slot1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot1linkSpeed gets a reference to the given string and assigns it to the Slot1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot1linkSpeed(v string) {
	o.Slot1linkSpeed = &v
}

// GetSlot1state returns the Slot1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot1state() string {
	if o == nil || o.Slot1state == nil {
		var ret string
		return ret
	}
	return *o.Slot1state
}

// GetSlot1stateOk returns a tuple with the Slot1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot1stateOk() (*string, bool) {
	if o == nil || o.Slot1state == nil {
		return nil, false
	}
	return o.Slot1state, true
}

// HasSlot1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot1state() bool {
	if o != nil && o.Slot1state != nil {
		return true
	}

	return false
}

// SetSlot1state gets a reference to the given string and assigns it to the Slot1state field.
func (o *BiosPolicyAllOf) SetSlot1state(v string) {
	o.Slot1state = &v
}

// GetSlot2linkSpeed returns the Slot2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot2linkSpeed() string {
	if o == nil || o.Slot2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot2linkSpeed
}

// GetSlot2linkSpeedOk returns a tuple with the Slot2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot2linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot2linkSpeed == nil {
		return nil, false
	}
	return o.Slot2linkSpeed, true
}

// HasSlot2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot2linkSpeed() bool {
	if o != nil && o.Slot2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot2linkSpeed gets a reference to the given string and assigns it to the Slot2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot2linkSpeed(v string) {
	o.Slot2linkSpeed = &v
}

// GetSlot2state returns the Slot2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot2state() string {
	if o == nil || o.Slot2state == nil {
		var ret string
		return ret
	}
	return *o.Slot2state
}

// GetSlot2stateOk returns a tuple with the Slot2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot2stateOk() (*string, bool) {
	if o == nil || o.Slot2state == nil {
		return nil, false
	}
	return o.Slot2state, true
}

// HasSlot2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot2state() bool {
	if o != nil && o.Slot2state != nil {
		return true
	}

	return false
}

// SetSlot2state gets a reference to the given string and assigns it to the Slot2state field.
func (o *BiosPolicyAllOf) SetSlot2state(v string) {
	o.Slot2state = &v
}

// GetSlot3linkSpeed returns the Slot3linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot3linkSpeed() string {
	if o == nil || o.Slot3linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot3linkSpeed
}

// GetSlot3linkSpeedOk returns a tuple with the Slot3linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot3linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot3linkSpeed == nil {
		return nil, false
	}
	return o.Slot3linkSpeed, true
}

// HasSlot3linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot3linkSpeed() bool {
	if o != nil && o.Slot3linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot3linkSpeed gets a reference to the given string and assigns it to the Slot3linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot3linkSpeed(v string) {
	o.Slot3linkSpeed = &v
}

// GetSlot3state returns the Slot3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot3state() string {
	if o == nil || o.Slot3state == nil {
		var ret string
		return ret
	}
	return *o.Slot3state
}

// GetSlot3stateOk returns a tuple with the Slot3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot3stateOk() (*string, bool) {
	if o == nil || o.Slot3state == nil {
		return nil, false
	}
	return o.Slot3state, true
}

// HasSlot3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot3state() bool {
	if o != nil && o.Slot3state != nil {
		return true
	}

	return false
}

// SetSlot3state gets a reference to the given string and assigns it to the Slot3state field.
func (o *BiosPolicyAllOf) SetSlot3state(v string) {
	o.Slot3state = &v
}

// GetSlot4linkSpeed returns the Slot4linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot4linkSpeed() string {
	if o == nil || o.Slot4linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot4linkSpeed
}

// GetSlot4linkSpeedOk returns a tuple with the Slot4linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot4linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot4linkSpeed == nil {
		return nil, false
	}
	return o.Slot4linkSpeed, true
}

// HasSlot4linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot4linkSpeed() bool {
	if o != nil && o.Slot4linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot4linkSpeed gets a reference to the given string and assigns it to the Slot4linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot4linkSpeed(v string) {
	o.Slot4linkSpeed = &v
}

// GetSlot4state returns the Slot4state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot4state() string {
	if o == nil || o.Slot4state == nil {
		var ret string
		return ret
	}
	return *o.Slot4state
}

// GetSlot4stateOk returns a tuple with the Slot4state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot4stateOk() (*string, bool) {
	if o == nil || o.Slot4state == nil {
		return nil, false
	}
	return o.Slot4state, true
}

// HasSlot4state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot4state() bool {
	if o != nil && o.Slot4state != nil {
		return true
	}

	return false
}

// SetSlot4state gets a reference to the given string and assigns it to the Slot4state field.
func (o *BiosPolicyAllOf) SetSlot4state(v string) {
	o.Slot4state = &v
}

// GetSlot5linkSpeed returns the Slot5linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot5linkSpeed() string {
	if o == nil || o.Slot5linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot5linkSpeed
}

// GetSlot5linkSpeedOk returns a tuple with the Slot5linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot5linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot5linkSpeed == nil {
		return nil, false
	}
	return o.Slot5linkSpeed, true
}

// HasSlot5linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot5linkSpeed() bool {
	if o != nil && o.Slot5linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot5linkSpeed gets a reference to the given string and assigns it to the Slot5linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot5linkSpeed(v string) {
	o.Slot5linkSpeed = &v
}

// GetSlot5state returns the Slot5state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot5state() string {
	if o == nil || o.Slot5state == nil {
		var ret string
		return ret
	}
	return *o.Slot5state
}

// GetSlot5stateOk returns a tuple with the Slot5state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot5stateOk() (*string, bool) {
	if o == nil || o.Slot5state == nil {
		return nil, false
	}
	return o.Slot5state, true
}

// HasSlot5state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot5state() bool {
	if o != nil && o.Slot5state != nil {
		return true
	}

	return false
}

// SetSlot5state gets a reference to the given string and assigns it to the Slot5state field.
func (o *BiosPolicyAllOf) SetSlot5state(v string) {
	o.Slot5state = &v
}

// GetSlot6linkSpeed returns the Slot6linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot6linkSpeed() string {
	if o == nil || o.Slot6linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot6linkSpeed
}

// GetSlot6linkSpeedOk returns a tuple with the Slot6linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot6linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot6linkSpeed == nil {
		return nil, false
	}
	return o.Slot6linkSpeed, true
}

// HasSlot6linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot6linkSpeed() bool {
	if o != nil && o.Slot6linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot6linkSpeed gets a reference to the given string and assigns it to the Slot6linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot6linkSpeed(v string) {
	o.Slot6linkSpeed = &v
}

// GetSlot6state returns the Slot6state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot6state() string {
	if o == nil || o.Slot6state == nil {
		var ret string
		return ret
	}
	return *o.Slot6state
}

// GetSlot6stateOk returns a tuple with the Slot6state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot6stateOk() (*string, bool) {
	if o == nil || o.Slot6state == nil {
		return nil, false
	}
	return o.Slot6state, true
}

// HasSlot6state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot6state() bool {
	if o != nil && o.Slot6state != nil {
		return true
	}

	return false
}

// SetSlot6state gets a reference to the given string and assigns it to the Slot6state field.
func (o *BiosPolicyAllOf) SetSlot6state(v string) {
	o.Slot6state = &v
}

// GetSlot7linkSpeed returns the Slot7linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot7linkSpeed() string {
	if o == nil || o.Slot7linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot7linkSpeed
}

// GetSlot7linkSpeedOk returns a tuple with the Slot7linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot7linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot7linkSpeed == nil {
		return nil, false
	}
	return o.Slot7linkSpeed, true
}

// HasSlot7linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot7linkSpeed() bool {
	if o != nil && o.Slot7linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot7linkSpeed gets a reference to the given string and assigns it to the Slot7linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot7linkSpeed(v string) {
	o.Slot7linkSpeed = &v
}

// GetSlot7state returns the Slot7state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot7state() string {
	if o == nil || o.Slot7state == nil {
		var ret string
		return ret
	}
	return *o.Slot7state
}

// GetSlot7stateOk returns a tuple with the Slot7state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot7stateOk() (*string, bool) {
	if o == nil || o.Slot7state == nil {
		return nil, false
	}
	return o.Slot7state, true
}

// HasSlot7state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot7state() bool {
	if o != nil && o.Slot7state != nil {
		return true
	}

	return false
}

// SetSlot7state gets a reference to the given string and assigns it to the Slot7state field.
func (o *BiosPolicyAllOf) SetSlot7state(v string) {
	o.Slot7state = &v
}

// GetSlot8linkSpeed returns the Slot8linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot8linkSpeed() string {
	if o == nil || o.Slot8linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot8linkSpeed
}

// GetSlot8linkSpeedOk returns a tuple with the Slot8linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot8linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot8linkSpeed == nil {
		return nil, false
	}
	return o.Slot8linkSpeed, true
}

// HasSlot8linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot8linkSpeed() bool {
	if o != nil && o.Slot8linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot8linkSpeed gets a reference to the given string and assigns it to the Slot8linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot8linkSpeed(v string) {
	o.Slot8linkSpeed = &v
}

// GetSlot8state returns the Slot8state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot8state() string {
	if o == nil || o.Slot8state == nil {
		var ret string
		return ret
	}
	return *o.Slot8state
}

// GetSlot8stateOk returns a tuple with the Slot8state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot8stateOk() (*string, bool) {
	if o == nil || o.Slot8state == nil {
		return nil, false
	}
	return o.Slot8state, true
}

// HasSlot8state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot8state() bool {
	if o != nil && o.Slot8state != nil {
		return true
	}

	return false
}

// SetSlot8state gets a reference to the given string and assigns it to the Slot8state field.
func (o *BiosPolicyAllOf) SetSlot8state(v string) {
	o.Slot8state = &v
}

// GetSlot9linkSpeed returns the Slot9linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot9linkSpeed() string {
	if o == nil || o.Slot9linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.Slot9linkSpeed
}

// GetSlot9linkSpeedOk returns a tuple with the Slot9linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot9linkSpeedOk() (*string, bool) {
	if o == nil || o.Slot9linkSpeed == nil {
		return nil, false
	}
	return o.Slot9linkSpeed, true
}

// HasSlot9linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot9linkSpeed() bool {
	if o != nil && o.Slot9linkSpeed != nil {
		return true
	}

	return false
}

// SetSlot9linkSpeed gets a reference to the given string and assigns it to the Slot9linkSpeed field.
func (o *BiosPolicyAllOf) SetSlot9linkSpeed(v string) {
	o.Slot9linkSpeed = &v
}

// GetSlot9state returns the Slot9state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlot9state() string {
	if o == nil || o.Slot9state == nil {
		var ret string
		return ret
	}
	return *o.Slot9state
}

// GetSlot9stateOk returns a tuple with the Slot9state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlot9stateOk() (*string, bool) {
	if o == nil || o.Slot9state == nil {
		return nil, false
	}
	return o.Slot9state, true
}

// HasSlot9state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlot9state() bool {
	if o != nil && o.Slot9state != nil {
		return true
	}

	return false
}

// SetSlot9state gets a reference to the given string and assigns it to the Slot9state field.
func (o *BiosPolicyAllOf) SetSlot9state(v string) {
	o.Slot9state = &v
}

// GetSlotFlomLinkSpeed returns the SlotFlomLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFlomLinkSpeed() string {
	if o == nil || o.SlotFlomLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFlomLinkSpeed
}

// GetSlotFlomLinkSpeedOk returns a tuple with the SlotFlomLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFlomLinkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFlomLinkSpeed == nil {
		return nil, false
	}
	return o.SlotFlomLinkSpeed, true
}

// HasSlotFlomLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFlomLinkSpeed() bool {
	if o != nil && o.SlotFlomLinkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFlomLinkSpeed gets a reference to the given string and assigns it to the SlotFlomLinkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFlomLinkSpeed(v string) {
	o.SlotFlomLinkSpeed = &v
}

// GetSlotFrontNvme10linkSpeed returns the SlotFrontNvme10linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme10linkSpeed() string {
	if o == nil || o.SlotFrontNvme10linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme10linkSpeed
}

// GetSlotFrontNvme10linkSpeedOk returns a tuple with the SlotFrontNvme10linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme10linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme10linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme10linkSpeed, true
}

// HasSlotFrontNvme10linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme10linkSpeed() bool {
	if o != nil && o.SlotFrontNvme10linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme10linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme10linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme10linkSpeed(v string) {
	o.SlotFrontNvme10linkSpeed = &v
}

// GetSlotFrontNvme10optionRom returns the SlotFrontNvme10optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme10optionRom() string {
	if o == nil || o.SlotFrontNvme10optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme10optionRom
}

// GetSlotFrontNvme10optionRomOk returns a tuple with the SlotFrontNvme10optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme10optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme10optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme10optionRom, true
}

// HasSlotFrontNvme10optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme10optionRom() bool {
	if o != nil && o.SlotFrontNvme10optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme10optionRom gets a reference to the given string and assigns it to the SlotFrontNvme10optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme10optionRom(v string) {
	o.SlotFrontNvme10optionRom = &v
}

// GetSlotFrontNvme11linkSpeed returns the SlotFrontNvme11linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme11linkSpeed() string {
	if o == nil || o.SlotFrontNvme11linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme11linkSpeed
}

// GetSlotFrontNvme11linkSpeedOk returns a tuple with the SlotFrontNvme11linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme11linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme11linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme11linkSpeed, true
}

// HasSlotFrontNvme11linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme11linkSpeed() bool {
	if o != nil && o.SlotFrontNvme11linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme11linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme11linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme11linkSpeed(v string) {
	o.SlotFrontNvme11linkSpeed = &v
}

// GetSlotFrontNvme11optionRom returns the SlotFrontNvme11optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme11optionRom() string {
	if o == nil || o.SlotFrontNvme11optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme11optionRom
}

// GetSlotFrontNvme11optionRomOk returns a tuple with the SlotFrontNvme11optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme11optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme11optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme11optionRom, true
}

// HasSlotFrontNvme11optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme11optionRom() bool {
	if o != nil && o.SlotFrontNvme11optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme11optionRom gets a reference to the given string and assigns it to the SlotFrontNvme11optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme11optionRom(v string) {
	o.SlotFrontNvme11optionRom = &v
}

// GetSlotFrontNvme12linkSpeed returns the SlotFrontNvme12linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme12linkSpeed() string {
	if o == nil || o.SlotFrontNvme12linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme12linkSpeed
}

// GetSlotFrontNvme12linkSpeedOk returns a tuple with the SlotFrontNvme12linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme12linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme12linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme12linkSpeed, true
}

// HasSlotFrontNvme12linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme12linkSpeed() bool {
	if o != nil && o.SlotFrontNvme12linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme12linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme12linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme12linkSpeed(v string) {
	o.SlotFrontNvme12linkSpeed = &v
}

// GetSlotFrontNvme12optionRom returns the SlotFrontNvme12optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme12optionRom() string {
	if o == nil || o.SlotFrontNvme12optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme12optionRom
}

// GetSlotFrontNvme12optionRomOk returns a tuple with the SlotFrontNvme12optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme12optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme12optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme12optionRom, true
}

// HasSlotFrontNvme12optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme12optionRom() bool {
	if o != nil && o.SlotFrontNvme12optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme12optionRom gets a reference to the given string and assigns it to the SlotFrontNvme12optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme12optionRom(v string) {
	o.SlotFrontNvme12optionRom = &v
}

// GetSlotFrontNvme13optionRom returns the SlotFrontNvme13optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme13optionRom() string {
	if o == nil || o.SlotFrontNvme13optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme13optionRom
}

// GetSlotFrontNvme13optionRomOk returns a tuple with the SlotFrontNvme13optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme13optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme13optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme13optionRom, true
}

// HasSlotFrontNvme13optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme13optionRom() bool {
	if o != nil && o.SlotFrontNvme13optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme13optionRom gets a reference to the given string and assigns it to the SlotFrontNvme13optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme13optionRom(v string) {
	o.SlotFrontNvme13optionRom = &v
}

// GetSlotFrontNvme14optionRom returns the SlotFrontNvme14optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme14optionRom() string {
	if o == nil || o.SlotFrontNvme14optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme14optionRom
}

// GetSlotFrontNvme14optionRomOk returns a tuple with the SlotFrontNvme14optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme14optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme14optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme14optionRom, true
}

// HasSlotFrontNvme14optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme14optionRom() bool {
	if o != nil && o.SlotFrontNvme14optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme14optionRom gets a reference to the given string and assigns it to the SlotFrontNvme14optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme14optionRom(v string) {
	o.SlotFrontNvme14optionRom = &v
}

// GetSlotFrontNvme15optionRom returns the SlotFrontNvme15optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme15optionRom() string {
	if o == nil || o.SlotFrontNvme15optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme15optionRom
}

// GetSlotFrontNvme15optionRomOk returns a tuple with the SlotFrontNvme15optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme15optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme15optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme15optionRom, true
}

// HasSlotFrontNvme15optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme15optionRom() bool {
	if o != nil && o.SlotFrontNvme15optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme15optionRom gets a reference to the given string and assigns it to the SlotFrontNvme15optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme15optionRom(v string) {
	o.SlotFrontNvme15optionRom = &v
}

// GetSlotFrontNvme16optionRom returns the SlotFrontNvme16optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme16optionRom() string {
	if o == nil || o.SlotFrontNvme16optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme16optionRom
}

// GetSlotFrontNvme16optionRomOk returns a tuple with the SlotFrontNvme16optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme16optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme16optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme16optionRom, true
}

// HasSlotFrontNvme16optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme16optionRom() bool {
	if o != nil && o.SlotFrontNvme16optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme16optionRom gets a reference to the given string and assigns it to the SlotFrontNvme16optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme16optionRom(v string) {
	o.SlotFrontNvme16optionRom = &v
}

// GetSlotFrontNvme17optionRom returns the SlotFrontNvme17optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme17optionRom() string {
	if o == nil || o.SlotFrontNvme17optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme17optionRom
}

// GetSlotFrontNvme17optionRomOk returns a tuple with the SlotFrontNvme17optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme17optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme17optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme17optionRom, true
}

// HasSlotFrontNvme17optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme17optionRom() bool {
	if o != nil && o.SlotFrontNvme17optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme17optionRom gets a reference to the given string and assigns it to the SlotFrontNvme17optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme17optionRom(v string) {
	o.SlotFrontNvme17optionRom = &v
}

// GetSlotFrontNvme18optionRom returns the SlotFrontNvme18optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme18optionRom() string {
	if o == nil || o.SlotFrontNvme18optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme18optionRom
}

// GetSlotFrontNvme18optionRomOk returns a tuple with the SlotFrontNvme18optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme18optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme18optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme18optionRom, true
}

// HasSlotFrontNvme18optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme18optionRom() bool {
	if o != nil && o.SlotFrontNvme18optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme18optionRom gets a reference to the given string and assigns it to the SlotFrontNvme18optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme18optionRom(v string) {
	o.SlotFrontNvme18optionRom = &v
}

// GetSlotFrontNvme19optionRom returns the SlotFrontNvme19optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme19optionRom() string {
	if o == nil || o.SlotFrontNvme19optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme19optionRom
}

// GetSlotFrontNvme19optionRomOk returns a tuple with the SlotFrontNvme19optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme19optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme19optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme19optionRom, true
}

// HasSlotFrontNvme19optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme19optionRom() bool {
	if o != nil && o.SlotFrontNvme19optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme19optionRom gets a reference to the given string and assigns it to the SlotFrontNvme19optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme19optionRom(v string) {
	o.SlotFrontNvme19optionRom = &v
}

// GetSlotFrontNvme1linkSpeed returns the SlotFrontNvme1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme1linkSpeed() string {
	if o == nil || o.SlotFrontNvme1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme1linkSpeed
}

// GetSlotFrontNvme1linkSpeedOk returns a tuple with the SlotFrontNvme1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme1linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme1linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme1linkSpeed, true
}

// HasSlotFrontNvme1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme1linkSpeed() bool {
	if o != nil && o.SlotFrontNvme1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme1linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme1linkSpeed(v string) {
	o.SlotFrontNvme1linkSpeed = &v
}

// GetSlotFrontNvme1optionRom returns the SlotFrontNvme1optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme1optionRom() string {
	if o == nil || o.SlotFrontNvme1optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme1optionRom
}

// GetSlotFrontNvme1optionRomOk returns a tuple with the SlotFrontNvme1optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme1optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme1optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme1optionRom, true
}

// HasSlotFrontNvme1optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme1optionRom() bool {
	if o != nil && o.SlotFrontNvme1optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme1optionRom gets a reference to the given string and assigns it to the SlotFrontNvme1optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme1optionRom(v string) {
	o.SlotFrontNvme1optionRom = &v
}

// GetSlotFrontNvme20optionRom returns the SlotFrontNvme20optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme20optionRom() string {
	if o == nil || o.SlotFrontNvme20optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme20optionRom
}

// GetSlotFrontNvme20optionRomOk returns a tuple with the SlotFrontNvme20optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme20optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme20optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme20optionRom, true
}

// HasSlotFrontNvme20optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme20optionRom() bool {
	if o != nil && o.SlotFrontNvme20optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme20optionRom gets a reference to the given string and assigns it to the SlotFrontNvme20optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme20optionRom(v string) {
	o.SlotFrontNvme20optionRom = &v
}

// GetSlotFrontNvme21optionRom returns the SlotFrontNvme21optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme21optionRom() string {
	if o == nil || o.SlotFrontNvme21optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme21optionRom
}

// GetSlotFrontNvme21optionRomOk returns a tuple with the SlotFrontNvme21optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme21optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme21optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme21optionRom, true
}

// HasSlotFrontNvme21optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme21optionRom() bool {
	if o != nil && o.SlotFrontNvme21optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme21optionRom gets a reference to the given string and assigns it to the SlotFrontNvme21optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme21optionRom(v string) {
	o.SlotFrontNvme21optionRom = &v
}

// GetSlotFrontNvme22optionRom returns the SlotFrontNvme22optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme22optionRom() string {
	if o == nil || o.SlotFrontNvme22optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme22optionRom
}

// GetSlotFrontNvme22optionRomOk returns a tuple with the SlotFrontNvme22optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme22optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme22optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme22optionRom, true
}

// HasSlotFrontNvme22optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme22optionRom() bool {
	if o != nil && o.SlotFrontNvme22optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme22optionRom gets a reference to the given string and assigns it to the SlotFrontNvme22optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme22optionRom(v string) {
	o.SlotFrontNvme22optionRom = &v
}

// GetSlotFrontNvme23optionRom returns the SlotFrontNvme23optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme23optionRom() string {
	if o == nil || o.SlotFrontNvme23optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme23optionRom
}

// GetSlotFrontNvme23optionRomOk returns a tuple with the SlotFrontNvme23optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme23optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme23optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme23optionRom, true
}

// HasSlotFrontNvme23optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme23optionRom() bool {
	if o != nil && o.SlotFrontNvme23optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme23optionRom gets a reference to the given string and assigns it to the SlotFrontNvme23optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme23optionRom(v string) {
	o.SlotFrontNvme23optionRom = &v
}

// GetSlotFrontNvme24optionRom returns the SlotFrontNvme24optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme24optionRom() string {
	if o == nil || o.SlotFrontNvme24optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme24optionRom
}

// GetSlotFrontNvme24optionRomOk returns a tuple with the SlotFrontNvme24optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme24optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme24optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme24optionRom, true
}

// HasSlotFrontNvme24optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme24optionRom() bool {
	if o != nil && o.SlotFrontNvme24optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme24optionRom gets a reference to the given string and assigns it to the SlotFrontNvme24optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme24optionRom(v string) {
	o.SlotFrontNvme24optionRom = &v
}

// GetSlotFrontNvme2linkSpeed returns the SlotFrontNvme2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme2linkSpeed() string {
	if o == nil || o.SlotFrontNvme2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme2linkSpeed
}

// GetSlotFrontNvme2linkSpeedOk returns a tuple with the SlotFrontNvme2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme2linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme2linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme2linkSpeed, true
}

// HasSlotFrontNvme2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme2linkSpeed() bool {
	if o != nil && o.SlotFrontNvme2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme2linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme2linkSpeed(v string) {
	o.SlotFrontNvme2linkSpeed = &v
}

// GetSlotFrontNvme2optionRom returns the SlotFrontNvme2optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme2optionRom() string {
	if o == nil || o.SlotFrontNvme2optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme2optionRom
}

// GetSlotFrontNvme2optionRomOk returns a tuple with the SlotFrontNvme2optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme2optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme2optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme2optionRom, true
}

// HasSlotFrontNvme2optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme2optionRom() bool {
	if o != nil && o.SlotFrontNvme2optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme2optionRom gets a reference to the given string and assigns it to the SlotFrontNvme2optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme2optionRom(v string) {
	o.SlotFrontNvme2optionRom = &v
}

// GetSlotFrontNvme3linkSpeed returns the SlotFrontNvme3linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme3linkSpeed() string {
	if o == nil || o.SlotFrontNvme3linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme3linkSpeed
}

// GetSlotFrontNvme3linkSpeedOk returns a tuple with the SlotFrontNvme3linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme3linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme3linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme3linkSpeed, true
}

// HasSlotFrontNvme3linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme3linkSpeed() bool {
	if o != nil && o.SlotFrontNvme3linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme3linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme3linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme3linkSpeed(v string) {
	o.SlotFrontNvme3linkSpeed = &v
}

// GetSlotFrontNvme3optionRom returns the SlotFrontNvme3optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme3optionRom() string {
	if o == nil || o.SlotFrontNvme3optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme3optionRom
}

// GetSlotFrontNvme3optionRomOk returns a tuple with the SlotFrontNvme3optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme3optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme3optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme3optionRom, true
}

// HasSlotFrontNvme3optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme3optionRom() bool {
	if o != nil && o.SlotFrontNvme3optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme3optionRom gets a reference to the given string and assigns it to the SlotFrontNvme3optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme3optionRom(v string) {
	o.SlotFrontNvme3optionRom = &v
}

// GetSlotFrontNvme4linkSpeed returns the SlotFrontNvme4linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme4linkSpeed() string {
	if o == nil || o.SlotFrontNvme4linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme4linkSpeed
}

// GetSlotFrontNvme4linkSpeedOk returns a tuple with the SlotFrontNvme4linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme4linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme4linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme4linkSpeed, true
}

// HasSlotFrontNvme4linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme4linkSpeed() bool {
	if o != nil && o.SlotFrontNvme4linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme4linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme4linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme4linkSpeed(v string) {
	o.SlotFrontNvme4linkSpeed = &v
}

// GetSlotFrontNvme4optionRom returns the SlotFrontNvme4optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme4optionRom() string {
	if o == nil || o.SlotFrontNvme4optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme4optionRom
}

// GetSlotFrontNvme4optionRomOk returns a tuple with the SlotFrontNvme4optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme4optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme4optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme4optionRom, true
}

// HasSlotFrontNvme4optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme4optionRom() bool {
	if o != nil && o.SlotFrontNvme4optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme4optionRom gets a reference to the given string and assigns it to the SlotFrontNvme4optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme4optionRom(v string) {
	o.SlotFrontNvme4optionRom = &v
}

// GetSlotFrontNvme5linkSpeed returns the SlotFrontNvme5linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme5linkSpeed() string {
	if o == nil || o.SlotFrontNvme5linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme5linkSpeed
}

// GetSlotFrontNvme5linkSpeedOk returns a tuple with the SlotFrontNvme5linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme5linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme5linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme5linkSpeed, true
}

// HasSlotFrontNvme5linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme5linkSpeed() bool {
	if o != nil && o.SlotFrontNvme5linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme5linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme5linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme5linkSpeed(v string) {
	o.SlotFrontNvme5linkSpeed = &v
}

// GetSlotFrontNvme5optionRom returns the SlotFrontNvme5optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme5optionRom() string {
	if o == nil || o.SlotFrontNvme5optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme5optionRom
}

// GetSlotFrontNvme5optionRomOk returns a tuple with the SlotFrontNvme5optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme5optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme5optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme5optionRom, true
}

// HasSlotFrontNvme5optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme5optionRom() bool {
	if o != nil && o.SlotFrontNvme5optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme5optionRom gets a reference to the given string and assigns it to the SlotFrontNvme5optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme5optionRom(v string) {
	o.SlotFrontNvme5optionRom = &v
}

// GetSlotFrontNvme6linkSpeed returns the SlotFrontNvme6linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme6linkSpeed() string {
	if o == nil || o.SlotFrontNvme6linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme6linkSpeed
}

// GetSlotFrontNvme6linkSpeedOk returns a tuple with the SlotFrontNvme6linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme6linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme6linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme6linkSpeed, true
}

// HasSlotFrontNvme6linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme6linkSpeed() bool {
	if o != nil && o.SlotFrontNvme6linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme6linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme6linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme6linkSpeed(v string) {
	o.SlotFrontNvme6linkSpeed = &v
}

// GetSlotFrontNvme6optionRom returns the SlotFrontNvme6optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme6optionRom() string {
	if o == nil || o.SlotFrontNvme6optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme6optionRom
}

// GetSlotFrontNvme6optionRomOk returns a tuple with the SlotFrontNvme6optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme6optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme6optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme6optionRom, true
}

// HasSlotFrontNvme6optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme6optionRom() bool {
	if o != nil && o.SlotFrontNvme6optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme6optionRom gets a reference to the given string and assigns it to the SlotFrontNvme6optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme6optionRom(v string) {
	o.SlotFrontNvme6optionRom = &v
}

// GetSlotFrontNvme7linkSpeed returns the SlotFrontNvme7linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme7linkSpeed() string {
	if o == nil || o.SlotFrontNvme7linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme7linkSpeed
}

// GetSlotFrontNvme7linkSpeedOk returns a tuple with the SlotFrontNvme7linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme7linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme7linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme7linkSpeed, true
}

// HasSlotFrontNvme7linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme7linkSpeed() bool {
	if o != nil && o.SlotFrontNvme7linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme7linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme7linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme7linkSpeed(v string) {
	o.SlotFrontNvme7linkSpeed = &v
}

// GetSlotFrontNvme7optionRom returns the SlotFrontNvme7optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme7optionRom() string {
	if o == nil || o.SlotFrontNvme7optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme7optionRom
}

// GetSlotFrontNvme7optionRomOk returns a tuple with the SlotFrontNvme7optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme7optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme7optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme7optionRom, true
}

// HasSlotFrontNvme7optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme7optionRom() bool {
	if o != nil && o.SlotFrontNvme7optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme7optionRom gets a reference to the given string and assigns it to the SlotFrontNvme7optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme7optionRom(v string) {
	o.SlotFrontNvme7optionRom = &v
}

// GetSlotFrontNvme8linkSpeed returns the SlotFrontNvme8linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme8linkSpeed() string {
	if o == nil || o.SlotFrontNvme8linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme8linkSpeed
}

// GetSlotFrontNvme8linkSpeedOk returns a tuple with the SlotFrontNvme8linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme8linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme8linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme8linkSpeed, true
}

// HasSlotFrontNvme8linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme8linkSpeed() bool {
	if o != nil && o.SlotFrontNvme8linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme8linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme8linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme8linkSpeed(v string) {
	o.SlotFrontNvme8linkSpeed = &v
}

// GetSlotFrontNvme8optionRom returns the SlotFrontNvme8optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme8optionRom() string {
	if o == nil || o.SlotFrontNvme8optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme8optionRom
}

// GetSlotFrontNvme8optionRomOk returns a tuple with the SlotFrontNvme8optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme8optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme8optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme8optionRom, true
}

// HasSlotFrontNvme8optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme8optionRom() bool {
	if o != nil && o.SlotFrontNvme8optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme8optionRom gets a reference to the given string and assigns it to the SlotFrontNvme8optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme8optionRom(v string) {
	o.SlotFrontNvme8optionRom = &v
}

// GetSlotFrontNvme9linkSpeed returns the SlotFrontNvme9linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme9linkSpeed() string {
	if o == nil || o.SlotFrontNvme9linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme9linkSpeed
}

// GetSlotFrontNvme9linkSpeedOk returns a tuple with the SlotFrontNvme9linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme9linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme9linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontNvme9linkSpeed, true
}

// HasSlotFrontNvme9linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme9linkSpeed() bool {
	if o != nil && o.SlotFrontNvme9linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme9linkSpeed gets a reference to the given string and assigns it to the SlotFrontNvme9linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme9linkSpeed(v string) {
	o.SlotFrontNvme9linkSpeed = &v
}

// GetSlotFrontNvme9optionRom returns the SlotFrontNvme9optionRom field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontNvme9optionRom() string {
	if o == nil || o.SlotFrontNvme9optionRom == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontNvme9optionRom
}

// GetSlotFrontNvme9optionRomOk returns a tuple with the SlotFrontNvme9optionRom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontNvme9optionRomOk() (*string, bool) {
	if o == nil || o.SlotFrontNvme9optionRom == nil {
		return nil, false
	}
	return o.SlotFrontNvme9optionRom, true
}

// HasSlotFrontNvme9optionRom returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontNvme9optionRom() bool {
	if o != nil && o.SlotFrontNvme9optionRom != nil {
		return true
	}

	return false
}

// SetSlotFrontNvme9optionRom gets a reference to the given string and assigns it to the SlotFrontNvme9optionRom field.
func (o *BiosPolicyAllOf) SetSlotFrontNvme9optionRom(v string) {
	o.SlotFrontNvme9optionRom = &v
}

// GetSlotFrontSlot5linkSpeed returns the SlotFrontSlot5linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontSlot5linkSpeed() string {
	if o == nil || o.SlotFrontSlot5linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontSlot5linkSpeed
}

// GetSlotFrontSlot5linkSpeedOk returns a tuple with the SlotFrontSlot5linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontSlot5linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontSlot5linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontSlot5linkSpeed, true
}

// HasSlotFrontSlot5linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontSlot5linkSpeed() bool {
	if o != nil && o.SlotFrontSlot5linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontSlot5linkSpeed gets a reference to the given string and assigns it to the SlotFrontSlot5linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontSlot5linkSpeed(v string) {
	o.SlotFrontSlot5linkSpeed = &v
}

// GetSlotFrontSlot6linkSpeed returns the SlotFrontSlot6linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotFrontSlot6linkSpeed() string {
	if o == nil || o.SlotFrontSlot6linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotFrontSlot6linkSpeed
}

// GetSlotFrontSlot6linkSpeedOk returns a tuple with the SlotFrontSlot6linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotFrontSlot6linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotFrontSlot6linkSpeed == nil {
		return nil, false
	}
	return o.SlotFrontSlot6linkSpeed, true
}

// HasSlotFrontSlot6linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotFrontSlot6linkSpeed() bool {
	if o != nil && o.SlotFrontSlot6linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotFrontSlot6linkSpeed gets a reference to the given string and assigns it to the SlotFrontSlot6linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotFrontSlot6linkSpeed(v string) {
	o.SlotFrontSlot6linkSpeed = &v
}

// GetSlotGpu1state returns the SlotGpu1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu1state() string {
	if o == nil || o.SlotGpu1state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu1state
}

// GetSlotGpu1stateOk returns a tuple with the SlotGpu1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu1stateOk() (*string, bool) {
	if o == nil || o.SlotGpu1state == nil {
		return nil, false
	}
	return o.SlotGpu1state, true
}

// HasSlotGpu1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu1state() bool {
	if o != nil && o.SlotGpu1state != nil {
		return true
	}

	return false
}

// SetSlotGpu1state gets a reference to the given string and assigns it to the SlotGpu1state field.
func (o *BiosPolicyAllOf) SetSlotGpu1state(v string) {
	o.SlotGpu1state = &v
}

// GetSlotGpu2state returns the SlotGpu2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu2state() string {
	if o == nil || o.SlotGpu2state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu2state
}

// GetSlotGpu2stateOk returns a tuple with the SlotGpu2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu2stateOk() (*string, bool) {
	if o == nil || o.SlotGpu2state == nil {
		return nil, false
	}
	return o.SlotGpu2state, true
}

// HasSlotGpu2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu2state() bool {
	if o != nil && o.SlotGpu2state != nil {
		return true
	}

	return false
}

// SetSlotGpu2state gets a reference to the given string and assigns it to the SlotGpu2state field.
func (o *BiosPolicyAllOf) SetSlotGpu2state(v string) {
	o.SlotGpu2state = &v
}

// GetSlotGpu3state returns the SlotGpu3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu3state() string {
	if o == nil || o.SlotGpu3state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu3state
}

// GetSlotGpu3stateOk returns a tuple with the SlotGpu3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu3stateOk() (*string, bool) {
	if o == nil || o.SlotGpu3state == nil {
		return nil, false
	}
	return o.SlotGpu3state, true
}

// HasSlotGpu3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu3state() bool {
	if o != nil && o.SlotGpu3state != nil {
		return true
	}

	return false
}

// SetSlotGpu3state gets a reference to the given string and assigns it to the SlotGpu3state field.
func (o *BiosPolicyAllOf) SetSlotGpu3state(v string) {
	o.SlotGpu3state = &v
}

// GetSlotGpu4state returns the SlotGpu4state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu4state() string {
	if o == nil || o.SlotGpu4state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu4state
}

// GetSlotGpu4stateOk returns a tuple with the SlotGpu4state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu4stateOk() (*string, bool) {
	if o == nil || o.SlotGpu4state == nil {
		return nil, false
	}
	return o.SlotGpu4state, true
}

// HasSlotGpu4state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu4state() bool {
	if o != nil && o.SlotGpu4state != nil {
		return true
	}

	return false
}

// SetSlotGpu4state gets a reference to the given string and assigns it to the SlotGpu4state field.
func (o *BiosPolicyAllOf) SetSlotGpu4state(v string) {
	o.SlotGpu4state = &v
}

// GetSlotGpu5state returns the SlotGpu5state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu5state() string {
	if o == nil || o.SlotGpu5state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu5state
}

// GetSlotGpu5stateOk returns a tuple with the SlotGpu5state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu5stateOk() (*string, bool) {
	if o == nil || o.SlotGpu5state == nil {
		return nil, false
	}
	return o.SlotGpu5state, true
}

// HasSlotGpu5state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu5state() bool {
	if o != nil && o.SlotGpu5state != nil {
		return true
	}

	return false
}

// SetSlotGpu5state gets a reference to the given string and assigns it to the SlotGpu5state field.
func (o *BiosPolicyAllOf) SetSlotGpu5state(v string) {
	o.SlotGpu5state = &v
}

// GetSlotGpu6state returns the SlotGpu6state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu6state() string {
	if o == nil || o.SlotGpu6state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu6state
}

// GetSlotGpu6stateOk returns a tuple with the SlotGpu6state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu6stateOk() (*string, bool) {
	if o == nil || o.SlotGpu6state == nil {
		return nil, false
	}
	return o.SlotGpu6state, true
}

// HasSlotGpu6state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu6state() bool {
	if o != nil && o.SlotGpu6state != nil {
		return true
	}

	return false
}

// SetSlotGpu6state gets a reference to the given string and assigns it to the SlotGpu6state field.
func (o *BiosPolicyAllOf) SetSlotGpu6state(v string) {
	o.SlotGpu6state = &v
}

// GetSlotGpu7state returns the SlotGpu7state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu7state() string {
	if o == nil || o.SlotGpu7state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu7state
}

// GetSlotGpu7stateOk returns a tuple with the SlotGpu7state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu7stateOk() (*string, bool) {
	if o == nil || o.SlotGpu7state == nil {
		return nil, false
	}
	return o.SlotGpu7state, true
}

// HasSlotGpu7state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu7state() bool {
	if o != nil && o.SlotGpu7state != nil {
		return true
	}

	return false
}

// SetSlotGpu7state gets a reference to the given string and assigns it to the SlotGpu7state field.
func (o *BiosPolicyAllOf) SetSlotGpu7state(v string) {
	o.SlotGpu7state = &v
}

// GetSlotGpu8state returns the SlotGpu8state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotGpu8state() string {
	if o == nil || o.SlotGpu8state == nil {
		var ret string
		return ret
	}
	return *o.SlotGpu8state
}

// GetSlotGpu8stateOk returns a tuple with the SlotGpu8state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotGpu8stateOk() (*string, bool) {
	if o == nil || o.SlotGpu8state == nil {
		return nil, false
	}
	return o.SlotGpu8state, true
}

// HasSlotGpu8state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotGpu8state() bool {
	if o != nil && o.SlotGpu8state != nil {
		return true
	}

	return false
}

// SetSlotGpu8state gets a reference to the given string and assigns it to the SlotGpu8state field.
func (o *BiosPolicyAllOf) SetSlotGpu8state(v string) {
	o.SlotGpu8state = &v
}

// GetSlotHbaLinkSpeed returns the SlotHbaLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotHbaLinkSpeed() string {
	if o == nil || o.SlotHbaLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotHbaLinkSpeed
}

// GetSlotHbaLinkSpeedOk returns a tuple with the SlotHbaLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotHbaLinkSpeedOk() (*string, bool) {
	if o == nil || o.SlotHbaLinkSpeed == nil {
		return nil, false
	}
	return o.SlotHbaLinkSpeed, true
}

// HasSlotHbaLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotHbaLinkSpeed() bool {
	if o != nil && o.SlotHbaLinkSpeed != nil {
		return true
	}

	return false
}

// SetSlotHbaLinkSpeed gets a reference to the given string and assigns it to the SlotHbaLinkSpeed field.
func (o *BiosPolicyAllOf) SetSlotHbaLinkSpeed(v string) {
	o.SlotHbaLinkSpeed = &v
}

// GetSlotHbaState returns the SlotHbaState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotHbaState() string {
	if o == nil || o.SlotHbaState == nil {
		var ret string
		return ret
	}
	return *o.SlotHbaState
}

// GetSlotHbaStateOk returns a tuple with the SlotHbaState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotHbaStateOk() (*string, bool) {
	if o == nil || o.SlotHbaState == nil {
		return nil, false
	}
	return o.SlotHbaState, true
}

// HasSlotHbaState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotHbaState() bool {
	if o != nil && o.SlotHbaState != nil {
		return true
	}

	return false
}

// SetSlotHbaState gets a reference to the given string and assigns it to the SlotHbaState field.
func (o *BiosPolicyAllOf) SetSlotHbaState(v string) {
	o.SlotHbaState = &v
}

// GetSlotLom1link returns the SlotLom1link field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotLom1link() string {
	if o == nil || o.SlotLom1link == nil {
		var ret string
		return ret
	}
	return *o.SlotLom1link
}

// GetSlotLom1linkOk returns a tuple with the SlotLom1link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotLom1linkOk() (*string, bool) {
	if o == nil || o.SlotLom1link == nil {
		return nil, false
	}
	return o.SlotLom1link, true
}

// HasSlotLom1link returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotLom1link() bool {
	if o != nil && o.SlotLom1link != nil {
		return true
	}

	return false
}

// SetSlotLom1link gets a reference to the given string and assigns it to the SlotLom1link field.
func (o *BiosPolicyAllOf) SetSlotLom1link(v string) {
	o.SlotLom1link = &v
}

// GetSlotLom2link returns the SlotLom2link field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotLom2link() string {
	if o == nil || o.SlotLom2link == nil {
		var ret string
		return ret
	}
	return *o.SlotLom2link
}

// GetSlotLom2linkOk returns a tuple with the SlotLom2link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotLom2linkOk() (*string, bool) {
	if o == nil || o.SlotLom2link == nil {
		return nil, false
	}
	return o.SlotLom2link, true
}

// HasSlotLom2link returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotLom2link() bool {
	if o != nil && o.SlotLom2link != nil {
		return true
	}

	return false
}

// SetSlotLom2link gets a reference to the given string and assigns it to the SlotLom2link field.
func (o *BiosPolicyAllOf) SetSlotLom2link(v string) {
	o.SlotLom2link = &v
}

// GetSlotMezzState returns the SlotMezzState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotMezzState() string {
	if o == nil || o.SlotMezzState == nil {
		var ret string
		return ret
	}
	return *o.SlotMezzState
}

// GetSlotMezzStateOk returns a tuple with the SlotMezzState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotMezzStateOk() (*string, bool) {
	if o == nil || o.SlotMezzState == nil {
		return nil, false
	}
	return o.SlotMezzState, true
}

// HasSlotMezzState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotMezzState() bool {
	if o != nil && o.SlotMezzState != nil {
		return true
	}

	return false
}

// SetSlotMezzState gets a reference to the given string and assigns it to the SlotMezzState field.
func (o *BiosPolicyAllOf) SetSlotMezzState(v string) {
	o.SlotMezzState = &v
}

// GetSlotMlomLinkSpeed returns the SlotMlomLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotMlomLinkSpeed() string {
	if o == nil || o.SlotMlomLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotMlomLinkSpeed
}

// GetSlotMlomLinkSpeedOk returns a tuple with the SlotMlomLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotMlomLinkSpeedOk() (*string, bool) {
	if o == nil || o.SlotMlomLinkSpeed == nil {
		return nil, false
	}
	return o.SlotMlomLinkSpeed, true
}

// HasSlotMlomLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotMlomLinkSpeed() bool {
	if o != nil && o.SlotMlomLinkSpeed != nil {
		return true
	}

	return false
}

// SetSlotMlomLinkSpeed gets a reference to the given string and assigns it to the SlotMlomLinkSpeed field.
func (o *BiosPolicyAllOf) SetSlotMlomLinkSpeed(v string) {
	o.SlotMlomLinkSpeed = &v
}

// GetSlotMlomState returns the SlotMlomState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotMlomState() string {
	if o == nil || o.SlotMlomState == nil {
		var ret string
		return ret
	}
	return *o.SlotMlomState
}

// GetSlotMlomStateOk returns a tuple with the SlotMlomState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotMlomStateOk() (*string, bool) {
	if o == nil || o.SlotMlomState == nil {
		return nil, false
	}
	return o.SlotMlomState, true
}

// HasSlotMlomState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotMlomState() bool {
	if o != nil && o.SlotMlomState != nil {
		return true
	}

	return false
}

// SetSlotMlomState gets a reference to the given string and assigns it to the SlotMlomState field.
func (o *BiosPolicyAllOf) SetSlotMlomState(v string) {
	o.SlotMlomState = &v
}

// GetSlotMraidLinkSpeed returns the SlotMraidLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotMraidLinkSpeed() string {
	if o == nil || o.SlotMraidLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotMraidLinkSpeed
}

// GetSlotMraidLinkSpeedOk returns a tuple with the SlotMraidLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotMraidLinkSpeedOk() (*string, bool) {
	if o == nil || o.SlotMraidLinkSpeed == nil {
		return nil, false
	}
	return o.SlotMraidLinkSpeed, true
}

// HasSlotMraidLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotMraidLinkSpeed() bool {
	if o != nil && o.SlotMraidLinkSpeed != nil {
		return true
	}

	return false
}

// SetSlotMraidLinkSpeed gets a reference to the given string and assigns it to the SlotMraidLinkSpeed field.
func (o *BiosPolicyAllOf) SetSlotMraidLinkSpeed(v string) {
	o.SlotMraidLinkSpeed = &v
}

// GetSlotMraidState returns the SlotMraidState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotMraidState() string {
	if o == nil || o.SlotMraidState == nil {
		var ret string
		return ret
	}
	return *o.SlotMraidState
}

// GetSlotMraidStateOk returns a tuple with the SlotMraidState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotMraidStateOk() (*string, bool) {
	if o == nil || o.SlotMraidState == nil {
		return nil, false
	}
	return o.SlotMraidState, true
}

// HasSlotMraidState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotMraidState() bool {
	if o != nil && o.SlotMraidState != nil {
		return true
	}

	return false
}

// SetSlotMraidState gets a reference to the given string and assigns it to the SlotMraidState field.
func (o *BiosPolicyAllOf) SetSlotMraidState(v string) {
	o.SlotMraidState = &v
}

// GetSlotN10state returns the SlotN10state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN10state() string {
	if o == nil || o.SlotN10state == nil {
		var ret string
		return ret
	}
	return *o.SlotN10state
}

// GetSlotN10stateOk returns a tuple with the SlotN10state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN10stateOk() (*string, bool) {
	if o == nil || o.SlotN10state == nil {
		return nil, false
	}
	return o.SlotN10state, true
}

// HasSlotN10state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN10state() bool {
	if o != nil && o.SlotN10state != nil {
		return true
	}

	return false
}

// SetSlotN10state gets a reference to the given string and assigns it to the SlotN10state field.
func (o *BiosPolicyAllOf) SetSlotN10state(v string) {
	o.SlotN10state = &v
}

// GetSlotN11state returns the SlotN11state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN11state() string {
	if o == nil || o.SlotN11state == nil {
		var ret string
		return ret
	}
	return *o.SlotN11state
}

// GetSlotN11stateOk returns a tuple with the SlotN11state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN11stateOk() (*string, bool) {
	if o == nil || o.SlotN11state == nil {
		return nil, false
	}
	return o.SlotN11state, true
}

// HasSlotN11state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN11state() bool {
	if o != nil && o.SlotN11state != nil {
		return true
	}

	return false
}

// SetSlotN11state gets a reference to the given string and assigns it to the SlotN11state field.
func (o *BiosPolicyAllOf) SetSlotN11state(v string) {
	o.SlotN11state = &v
}

// GetSlotN12state returns the SlotN12state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN12state() string {
	if o == nil || o.SlotN12state == nil {
		var ret string
		return ret
	}
	return *o.SlotN12state
}

// GetSlotN12stateOk returns a tuple with the SlotN12state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN12stateOk() (*string, bool) {
	if o == nil || o.SlotN12state == nil {
		return nil, false
	}
	return o.SlotN12state, true
}

// HasSlotN12state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN12state() bool {
	if o != nil && o.SlotN12state != nil {
		return true
	}

	return false
}

// SetSlotN12state gets a reference to the given string and assigns it to the SlotN12state field.
func (o *BiosPolicyAllOf) SetSlotN12state(v string) {
	o.SlotN12state = &v
}

// GetSlotN13state returns the SlotN13state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN13state() string {
	if o == nil || o.SlotN13state == nil {
		var ret string
		return ret
	}
	return *o.SlotN13state
}

// GetSlotN13stateOk returns a tuple with the SlotN13state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN13stateOk() (*string, bool) {
	if o == nil || o.SlotN13state == nil {
		return nil, false
	}
	return o.SlotN13state, true
}

// HasSlotN13state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN13state() bool {
	if o != nil && o.SlotN13state != nil {
		return true
	}

	return false
}

// SetSlotN13state gets a reference to the given string and assigns it to the SlotN13state field.
func (o *BiosPolicyAllOf) SetSlotN13state(v string) {
	o.SlotN13state = &v
}

// GetSlotN14state returns the SlotN14state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN14state() string {
	if o == nil || o.SlotN14state == nil {
		var ret string
		return ret
	}
	return *o.SlotN14state
}

// GetSlotN14stateOk returns a tuple with the SlotN14state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN14stateOk() (*string, bool) {
	if o == nil || o.SlotN14state == nil {
		return nil, false
	}
	return o.SlotN14state, true
}

// HasSlotN14state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN14state() bool {
	if o != nil && o.SlotN14state != nil {
		return true
	}

	return false
}

// SetSlotN14state gets a reference to the given string and assigns it to the SlotN14state field.
func (o *BiosPolicyAllOf) SetSlotN14state(v string) {
	o.SlotN14state = &v
}

// GetSlotN15state returns the SlotN15state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN15state() string {
	if o == nil || o.SlotN15state == nil {
		var ret string
		return ret
	}
	return *o.SlotN15state
}

// GetSlotN15stateOk returns a tuple with the SlotN15state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN15stateOk() (*string, bool) {
	if o == nil || o.SlotN15state == nil {
		return nil, false
	}
	return o.SlotN15state, true
}

// HasSlotN15state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN15state() bool {
	if o != nil && o.SlotN15state != nil {
		return true
	}

	return false
}

// SetSlotN15state gets a reference to the given string and assigns it to the SlotN15state field.
func (o *BiosPolicyAllOf) SetSlotN15state(v string) {
	o.SlotN15state = &v
}

// GetSlotN16state returns the SlotN16state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN16state() string {
	if o == nil || o.SlotN16state == nil {
		var ret string
		return ret
	}
	return *o.SlotN16state
}

// GetSlotN16stateOk returns a tuple with the SlotN16state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN16stateOk() (*string, bool) {
	if o == nil || o.SlotN16state == nil {
		return nil, false
	}
	return o.SlotN16state, true
}

// HasSlotN16state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN16state() bool {
	if o != nil && o.SlotN16state != nil {
		return true
	}

	return false
}

// SetSlotN16state gets a reference to the given string and assigns it to the SlotN16state field.
func (o *BiosPolicyAllOf) SetSlotN16state(v string) {
	o.SlotN16state = &v
}

// GetSlotN17state returns the SlotN17state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN17state() string {
	if o == nil || o.SlotN17state == nil {
		var ret string
		return ret
	}
	return *o.SlotN17state
}

// GetSlotN17stateOk returns a tuple with the SlotN17state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN17stateOk() (*string, bool) {
	if o == nil || o.SlotN17state == nil {
		return nil, false
	}
	return o.SlotN17state, true
}

// HasSlotN17state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN17state() bool {
	if o != nil && o.SlotN17state != nil {
		return true
	}

	return false
}

// SetSlotN17state gets a reference to the given string and assigns it to the SlotN17state field.
func (o *BiosPolicyAllOf) SetSlotN17state(v string) {
	o.SlotN17state = &v
}

// GetSlotN18state returns the SlotN18state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN18state() string {
	if o == nil || o.SlotN18state == nil {
		var ret string
		return ret
	}
	return *o.SlotN18state
}

// GetSlotN18stateOk returns a tuple with the SlotN18state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN18stateOk() (*string, bool) {
	if o == nil || o.SlotN18state == nil {
		return nil, false
	}
	return o.SlotN18state, true
}

// HasSlotN18state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN18state() bool {
	if o != nil && o.SlotN18state != nil {
		return true
	}

	return false
}

// SetSlotN18state gets a reference to the given string and assigns it to the SlotN18state field.
func (o *BiosPolicyAllOf) SetSlotN18state(v string) {
	o.SlotN18state = &v
}

// GetSlotN19state returns the SlotN19state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN19state() string {
	if o == nil || o.SlotN19state == nil {
		var ret string
		return ret
	}
	return *o.SlotN19state
}

// GetSlotN19stateOk returns a tuple with the SlotN19state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN19stateOk() (*string, bool) {
	if o == nil || o.SlotN19state == nil {
		return nil, false
	}
	return o.SlotN19state, true
}

// HasSlotN19state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN19state() bool {
	if o != nil && o.SlotN19state != nil {
		return true
	}

	return false
}

// SetSlotN19state gets a reference to the given string and assigns it to the SlotN19state field.
func (o *BiosPolicyAllOf) SetSlotN19state(v string) {
	o.SlotN19state = &v
}

// GetSlotN1state returns the SlotN1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN1state() string {
	if o == nil || o.SlotN1state == nil {
		var ret string
		return ret
	}
	return *o.SlotN1state
}

// GetSlotN1stateOk returns a tuple with the SlotN1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN1stateOk() (*string, bool) {
	if o == nil || o.SlotN1state == nil {
		return nil, false
	}
	return o.SlotN1state, true
}

// HasSlotN1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN1state() bool {
	if o != nil && o.SlotN1state != nil {
		return true
	}

	return false
}

// SetSlotN1state gets a reference to the given string and assigns it to the SlotN1state field.
func (o *BiosPolicyAllOf) SetSlotN1state(v string) {
	o.SlotN1state = &v
}

// GetSlotN20state returns the SlotN20state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN20state() string {
	if o == nil || o.SlotN20state == nil {
		var ret string
		return ret
	}
	return *o.SlotN20state
}

// GetSlotN20stateOk returns a tuple with the SlotN20state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN20stateOk() (*string, bool) {
	if o == nil || o.SlotN20state == nil {
		return nil, false
	}
	return o.SlotN20state, true
}

// HasSlotN20state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN20state() bool {
	if o != nil && o.SlotN20state != nil {
		return true
	}

	return false
}

// SetSlotN20state gets a reference to the given string and assigns it to the SlotN20state field.
func (o *BiosPolicyAllOf) SetSlotN20state(v string) {
	o.SlotN20state = &v
}

// GetSlotN21state returns the SlotN21state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN21state() string {
	if o == nil || o.SlotN21state == nil {
		var ret string
		return ret
	}
	return *o.SlotN21state
}

// GetSlotN21stateOk returns a tuple with the SlotN21state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN21stateOk() (*string, bool) {
	if o == nil || o.SlotN21state == nil {
		return nil, false
	}
	return o.SlotN21state, true
}

// HasSlotN21state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN21state() bool {
	if o != nil && o.SlotN21state != nil {
		return true
	}

	return false
}

// SetSlotN21state gets a reference to the given string and assigns it to the SlotN21state field.
func (o *BiosPolicyAllOf) SetSlotN21state(v string) {
	o.SlotN21state = &v
}

// GetSlotN22state returns the SlotN22state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN22state() string {
	if o == nil || o.SlotN22state == nil {
		var ret string
		return ret
	}
	return *o.SlotN22state
}

// GetSlotN22stateOk returns a tuple with the SlotN22state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN22stateOk() (*string, bool) {
	if o == nil || o.SlotN22state == nil {
		return nil, false
	}
	return o.SlotN22state, true
}

// HasSlotN22state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN22state() bool {
	if o != nil && o.SlotN22state != nil {
		return true
	}

	return false
}

// SetSlotN22state gets a reference to the given string and assigns it to the SlotN22state field.
func (o *BiosPolicyAllOf) SetSlotN22state(v string) {
	o.SlotN22state = &v
}

// GetSlotN23state returns the SlotN23state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN23state() string {
	if o == nil || o.SlotN23state == nil {
		var ret string
		return ret
	}
	return *o.SlotN23state
}

// GetSlotN23stateOk returns a tuple with the SlotN23state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN23stateOk() (*string, bool) {
	if o == nil || o.SlotN23state == nil {
		return nil, false
	}
	return o.SlotN23state, true
}

// HasSlotN23state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN23state() bool {
	if o != nil && o.SlotN23state != nil {
		return true
	}

	return false
}

// SetSlotN23state gets a reference to the given string and assigns it to the SlotN23state field.
func (o *BiosPolicyAllOf) SetSlotN23state(v string) {
	o.SlotN23state = &v
}

// GetSlotN24state returns the SlotN24state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN24state() string {
	if o == nil || o.SlotN24state == nil {
		var ret string
		return ret
	}
	return *o.SlotN24state
}

// GetSlotN24stateOk returns a tuple with the SlotN24state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN24stateOk() (*string, bool) {
	if o == nil || o.SlotN24state == nil {
		return nil, false
	}
	return o.SlotN24state, true
}

// HasSlotN24state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN24state() bool {
	if o != nil && o.SlotN24state != nil {
		return true
	}

	return false
}

// SetSlotN24state gets a reference to the given string and assigns it to the SlotN24state field.
func (o *BiosPolicyAllOf) SetSlotN24state(v string) {
	o.SlotN24state = &v
}

// GetSlotN2state returns the SlotN2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN2state() string {
	if o == nil || o.SlotN2state == nil {
		var ret string
		return ret
	}
	return *o.SlotN2state
}

// GetSlotN2stateOk returns a tuple with the SlotN2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN2stateOk() (*string, bool) {
	if o == nil || o.SlotN2state == nil {
		return nil, false
	}
	return o.SlotN2state, true
}

// HasSlotN2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN2state() bool {
	if o != nil && o.SlotN2state != nil {
		return true
	}

	return false
}

// SetSlotN2state gets a reference to the given string and assigns it to the SlotN2state field.
func (o *BiosPolicyAllOf) SetSlotN2state(v string) {
	o.SlotN2state = &v
}

// GetSlotN3state returns the SlotN3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN3state() string {
	if o == nil || o.SlotN3state == nil {
		var ret string
		return ret
	}
	return *o.SlotN3state
}

// GetSlotN3stateOk returns a tuple with the SlotN3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN3stateOk() (*string, bool) {
	if o == nil || o.SlotN3state == nil {
		return nil, false
	}
	return o.SlotN3state, true
}

// HasSlotN3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN3state() bool {
	if o != nil && o.SlotN3state != nil {
		return true
	}

	return false
}

// SetSlotN3state gets a reference to the given string and assigns it to the SlotN3state field.
func (o *BiosPolicyAllOf) SetSlotN3state(v string) {
	o.SlotN3state = &v
}

// GetSlotN4state returns the SlotN4state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN4state() string {
	if o == nil || o.SlotN4state == nil {
		var ret string
		return ret
	}
	return *o.SlotN4state
}

// GetSlotN4stateOk returns a tuple with the SlotN4state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN4stateOk() (*string, bool) {
	if o == nil || o.SlotN4state == nil {
		return nil, false
	}
	return o.SlotN4state, true
}

// HasSlotN4state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN4state() bool {
	if o != nil && o.SlotN4state != nil {
		return true
	}

	return false
}

// SetSlotN4state gets a reference to the given string and assigns it to the SlotN4state field.
func (o *BiosPolicyAllOf) SetSlotN4state(v string) {
	o.SlotN4state = &v
}

// GetSlotN5state returns the SlotN5state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN5state() string {
	if o == nil || o.SlotN5state == nil {
		var ret string
		return ret
	}
	return *o.SlotN5state
}

// GetSlotN5stateOk returns a tuple with the SlotN5state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN5stateOk() (*string, bool) {
	if o == nil || o.SlotN5state == nil {
		return nil, false
	}
	return o.SlotN5state, true
}

// HasSlotN5state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN5state() bool {
	if o != nil && o.SlotN5state != nil {
		return true
	}

	return false
}

// SetSlotN5state gets a reference to the given string and assigns it to the SlotN5state field.
func (o *BiosPolicyAllOf) SetSlotN5state(v string) {
	o.SlotN5state = &v
}

// GetSlotN6state returns the SlotN6state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN6state() string {
	if o == nil || o.SlotN6state == nil {
		var ret string
		return ret
	}
	return *o.SlotN6state
}

// GetSlotN6stateOk returns a tuple with the SlotN6state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN6stateOk() (*string, bool) {
	if o == nil || o.SlotN6state == nil {
		return nil, false
	}
	return o.SlotN6state, true
}

// HasSlotN6state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN6state() bool {
	if o != nil && o.SlotN6state != nil {
		return true
	}

	return false
}

// SetSlotN6state gets a reference to the given string and assigns it to the SlotN6state field.
func (o *BiosPolicyAllOf) SetSlotN6state(v string) {
	o.SlotN6state = &v
}

// GetSlotN7state returns the SlotN7state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN7state() string {
	if o == nil || o.SlotN7state == nil {
		var ret string
		return ret
	}
	return *o.SlotN7state
}

// GetSlotN7stateOk returns a tuple with the SlotN7state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN7stateOk() (*string, bool) {
	if o == nil || o.SlotN7state == nil {
		return nil, false
	}
	return o.SlotN7state, true
}

// HasSlotN7state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN7state() bool {
	if o != nil && o.SlotN7state != nil {
		return true
	}

	return false
}

// SetSlotN7state gets a reference to the given string and assigns it to the SlotN7state field.
func (o *BiosPolicyAllOf) SetSlotN7state(v string) {
	o.SlotN7state = &v
}

// GetSlotN8state returns the SlotN8state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN8state() string {
	if o == nil || o.SlotN8state == nil {
		var ret string
		return ret
	}
	return *o.SlotN8state
}

// GetSlotN8stateOk returns a tuple with the SlotN8state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN8stateOk() (*string, bool) {
	if o == nil || o.SlotN8state == nil {
		return nil, false
	}
	return o.SlotN8state, true
}

// HasSlotN8state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN8state() bool {
	if o != nil && o.SlotN8state != nil {
		return true
	}

	return false
}

// SetSlotN8state gets a reference to the given string and assigns it to the SlotN8state field.
func (o *BiosPolicyAllOf) SetSlotN8state(v string) {
	o.SlotN8state = &v
}

// GetSlotN9state returns the SlotN9state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotN9state() string {
	if o == nil || o.SlotN9state == nil {
		var ret string
		return ret
	}
	return *o.SlotN9state
}

// GetSlotN9stateOk returns a tuple with the SlotN9state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotN9stateOk() (*string, bool) {
	if o == nil || o.SlotN9state == nil {
		return nil, false
	}
	return o.SlotN9state, true
}

// HasSlotN9state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotN9state() bool {
	if o != nil && o.SlotN9state != nil {
		return true
	}

	return false
}

// SetSlotN9state gets a reference to the given string and assigns it to the SlotN9state field.
func (o *BiosPolicyAllOf) SetSlotN9state(v string) {
	o.SlotN9state = &v
}

// GetSlotRaidLinkSpeed returns the SlotRaidLinkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRaidLinkSpeed() string {
	if o == nil || o.SlotRaidLinkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRaidLinkSpeed
}

// GetSlotRaidLinkSpeedOk returns a tuple with the SlotRaidLinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRaidLinkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRaidLinkSpeed == nil {
		return nil, false
	}
	return o.SlotRaidLinkSpeed, true
}

// HasSlotRaidLinkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRaidLinkSpeed() bool {
	if o != nil && o.SlotRaidLinkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRaidLinkSpeed gets a reference to the given string and assigns it to the SlotRaidLinkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRaidLinkSpeed(v string) {
	o.SlotRaidLinkSpeed = &v
}

// GetSlotRaidState returns the SlotRaidState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRaidState() string {
	if o == nil || o.SlotRaidState == nil {
		var ret string
		return ret
	}
	return *o.SlotRaidState
}

// GetSlotRaidStateOk returns a tuple with the SlotRaidState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRaidStateOk() (*string, bool) {
	if o == nil || o.SlotRaidState == nil {
		return nil, false
	}
	return o.SlotRaidState, true
}

// HasSlotRaidState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRaidState() bool {
	if o != nil && o.SlotRaidState != nil {
		return true
	}

	return false
}

// SetSlotRaidState gets a reference to the given string and assigns it to the SlotRaidState field.
func (o *BiosPolicyAllOf) SetSlotRaidState(v string) {
	o.SlotRaidState = &v
}

// GetSlotRearNvme1linkSpeed returns the SlotRearNvme1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme1linkSpeed() string {
	if o == nil || o.SlotRearNvme1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme1linkSpeed
}

// GetSlotRearNvme1linkSpeedOk returns a tuple with the SlotRearNvme1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme1linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRearNvme1linkSpeed == nil {
		return nil, false
	}
	return o.SlotRearNvme1linkSpeed, true
}

// HasSlotRearNvme1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme1linkSpeed() bool {
	if o != nil && o.SlotRearNvme1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRearNvme1linkSpeed gets a reference to the given string and assigns it to the SlotRearNvme1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRearNvme1linkSpeed(v string) {
	o.SlotRearNvme1linkSpeed = &v
}

// GetSlotRearNvme1state returns the SlotRearNvme1state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme1state() string {
	if o == nil || o.SlotRearNvme1state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme1state
}

// GetSlotRearNvme1stateOk returns a tuple with the SlotRearNvme1state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme1stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme1state == nil {
		return nil, false
	}
	return o.SlotRearNvme1state, true
}

// HasSlotRearNvme1state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme1state() bool {
	if o != nil && o.SlotRearNvme1state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme1state gets a reference to the given string and assigns it to the SlotRearNvme1state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme1state(v string) {
	o.SlotRearNvme1state = &v
}

// GetSlotRearNvme2linkSpeed returns the SlotRearNvme2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme2linkSpeed() string {
	if o == nil || o.SlotRearNvme2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme2linkSpeed
}

// GetSlotRearNvme2linkSpeedOk returns a tuple with the SlotRearNvme2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme2linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRearNvme2linkSpeed == nil {
		return nil, false
	}
	return o.SlotRearNvme2linkSpeed, true
}

// HasSlotRearNvme2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme2linkSpeed() bool {
	if o != nil && o.SlotRearNvme2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRearNvme2linkSpeed gets a reference to the given string and assigns it to the SlotRearNvme2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRearNvme2linkSpeed(v string) {
	o.SlotRearNvme2linkSpeed = &v
}

// GetSlotRearNvme2state returns the SlotRearNvme2state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme2state() string {
	if o == nil || o.SlotRearNvme2state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme2state
}

// GetSlotRearNvme2stateOk returns a tuple with the SlotRearNvme2state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme2stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme2state == nil {
		return nil, false
	}
	return o.SlotRearNvme2state, true
}

// HasSlotRearNvme2state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme2state() bool {
	if o != nil && o.SlotRearNvme2state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme2state gets a reference to the given string and assigns it to the SlotRearNvme2state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme2state(v string) {
	o.SlotRearNvme2state = &v
}

// GetSlotRearNvme3linkSpeed returns the SlotRearNvme3linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme3linkSpeed() string {
	if o == nil || o.SlotRearNvme3linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme3linkSpeed
}

// GetSlotRearNvme3linkSpeedOk returns a tuple with the SlotRearNvme3linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme3linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRearNvme3linkSpeed == nil {
		return nil, false
	}
	return o.SlotRearNvme3linkSpeed, true
}

// HasSlotRearNvme3linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme3linkSpeed() bool {
	if o != nil && o.SlotRearNvme3linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRearNvme3linkSpeed gets a reference to the given string and assigns it to the SlotRearNvme3linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRearNvme3linkSpeed(v string) {
	o.SlotRearNvme3linkSpeed = &v
}

// GetSlotRearNvme3state returns the SlotRearNvme3state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme3state() string {
	if o == nil || o.SlotRearNvme3state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme3state
}

// GetSlotRearNvme3stateOk returns a tuple with the SlotRearNvme3state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme3stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme3state == nil {
		return nil, false
	}
	return o.SlotRearNvme3state, true
}

// HasSlotRearNvme3state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme3state() bool {
	if o != nil && o.SlotRearNvme3state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme3state gets a reference to the given string and assigns it to the SlotRearNvme3state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme3state(v string) {
	o.SlotRearNvme3state = &v
}

// GetSlotRearNvme4linkSpeed returns the SlotRearNvme4linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme4linkSpeed() string {
	if o == nil || o.SlotRearNvme4linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme4linkSpeed
}

// GetSlotRearNvme4linkSpeedOk returns a tuple with the SlotRearNvme4linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme4linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRearNvme4linkSpeed == nil {
		return nil, false
	}
	return o.SlotRearNvme4linkSpeed, true
}

// HasSlotRearNvme4linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme4linkSpeed() bool {
	if o != nil && o.SlotRearNvme4linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRearNvme4linkSpeed gets a reference to the given string and assigns it to the SlotRearNvme4linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRearNvme4linkSpeed(v string) {
	o.SlotRearNvme4linkSpeed = &v
}

// GetSlotRearNvme4state returns the SlotRearNvme4state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme4state() string {
	if o == nil || o.SlotRearNvme4state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme4state
}

// GetSlotRearNvme4stateOk returns a tuple with the SlotRearNvme4state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme4stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme4state == nil {
		return nil, false
	}
	return o.SlotRearNvme4state, true
}

// HasSlotRearNvme4state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme4state() bool {
	if o != nil && o.SlotRearNvme4state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme4state gets a reference to the given string and assigns it to the SlotRearNvme4state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme4state(v string) {
	o.SlotRearNvme4state = &v
}

// GetSlotRearNvme5state returns the SlotRearNvme5state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme5state() string {
	if o == nil || o.SlotRearNvme5state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme5state
}

// GetSlotRearNvme5stateOk returns a tuple with the SlotRearNvme5state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme5stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme5state == nil {
		return nil, false
	}
	return o.SlotRearNvme5state, true
}

// HasSlotRearNvme5state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme5state() bool {
	if o != nil && o.SlotRearNvme5state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme5state gets a reference to the given string and assigns it to the SlotRearNvme5state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme5state(v string) {
	o.SlotRearNvme5state = &v
}

// GetSlotRearNvme6state returns the SlotRearNvme6state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme6state() string {
	if o == nil || o.SlotRearNvme6state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme6state
}

// GetSlotRearNvme6stateOk returns a tuple with the SlotRearNvme6state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme6stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme6state == nil {
		return nil, false
	}
	return o.SlotRearNvme6state, true
}

// HasSlotRearNvme6state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme6state() bool {
	if o != nil && o.SlotRearNvme6state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme6state gets a reference to the given string and assigns it to the SlotRearNvme6state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme6state(v string) {
	o.SlotRearNvme6state = &v
}

// GetSlotRearNvme7state returns the SlotRearNvme7state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme7state() string {
	if o == nil || o.SlotRearNvme7state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme7state
}

// GetSlotRearNvme7stateOk returns a tuple with the SlotRearNvme7state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme7stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme7state == nil {
		return nil, false
	}
	return o.SlotRearNvme7state, true
}

// HasSlotRearNvme7state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme7state() bool {
	if o != nil && o.SlotRearNvme7state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme7state gets a reference to the given string and assigns it to the SlotRearNvme7state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme7state(v string) {
	o.SlotRearNvme7state = &v
}

// GetSlotRearNvme8state returns the SlotRearNvme8state field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRearNvme8state() string {
	if o == nil || o.SlotRearNvme8state == nil {
		var ret string
		return ret
	}
	return *o.SlotRearNvme8state
}

// GetSlotRearNvme8stateOk returns a tuple with the SlotRearNvme8state field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRearNvme8stateOk() (*string, bool) {
	if o == nil || o.SlotRearNvme8state == nil {
		return nil, false
	}
	return o.SlotRearNvme8state, true
}

// HasSlotRearNvme8state returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRearNvme8state() bool {
	if o != nil && o.SlotRearNvme8state != nil {
		return true
	}

	return false
}

// SetSlotRearNvme8state gets a reference to the given string and assigns it to the SlotRearNvme8state field.
func (o *BiosPolicyAllOf) SetSlotRearNvme8state(v string) {
	o.SlotRearNvme8state = &v
}

// GetSlotRiser1linkSpeed returns the SlotRiser1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser1linkSpeed() string {
	if o == nil || o.SlotRiser1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser1linkSpeed
}

// GetSlotRiser1linkSpeedOk returns a tuple with the SlotRiser1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser1linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser1linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser1linkSpeed, true
}

// HasSlotRiser1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser1linkSpeed() bool {
	if o != nil && o.SlotRiser1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser1linkSpeed gets a reference to the given string and assigns it to the SlotRiser1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser1linkSpeed(v string) {
	o.SlotRiser1linkSpeed = &v
}

// GetSlotRiser1slot1linkSpeed returns the SlotRiser1slot1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser1slot1linkSpeed() string {
	if o == nil || o.SlotRiser1slot1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser1slot1linkSpeed
}

// GetSlotRiser1slot1linkSpeedOk returns a tuple with the SlotRiser1slot1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser1slot1linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser1slot1linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser1slot1linkSpeed, true
}

// HasSlotRiser1slot1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser1slot1linkSpeed() bool {
	if o != nil && o.SlotRiser1slot1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser1slot1linkSpeed gets a reference to the given string and assigns it to the SlotRiser1slot1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser1slot1linkSpeed(v string) {
	o.SlotRiser1slot1linkSpeed = &v
}

// GetSlotRiser1slot2linkSpeed returns the SlotRiser1slot2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser1slot2linkSpeed() string {
	if o == nil || o.SlotRiser1slot2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser1slot2linkSpeed
}

// GetSlotRiser1slot2linkSpeedOk returns a tuple with the SlotRiser1slot2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser1slot2linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser1slot2linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser1slot2linkSpeed, true
}

// HasSlotRiser1slot2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser1slot2linkSpeed() bool {
	if o != nil && o.SlotRiser1slot2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser1slot2linkSpeed gets a reference to the given string and assigns it to the SlotRiser1slot2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser1slot2linkSpeed(v string) {
	o.SlotRiser1slot2linkSpeed = &v
}

// GetSlotRiser1slot3linkSpeed returns the SlotRiser1slot3linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser1slot3linkSpeed() string {
	if o == nil || o.SlotRiser1slot3linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser1slot3linkSpeed
}

// GetSlotRiser1slot3linkSpeedOk returns a tuple with the SlotRiser1slot3linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser1slot3linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser1slot3linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser1slot3linkSpeed, true
}

// HasSlotRiser1slot3linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser1slot3linkSpeed() bool {
	if o != nil && o.SlotRiser1slot3linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser1slot3linkSpeed gets a reference to the given string and assigns it to the SlotRiser1slot3linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser1slot3linkSpeed(v string) {
	o.SlotRiser1slot3linkSpeed = &v
}

// GetSlotRiser2linkSpeed returns the SlotRiser2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser2linkSpeed() string {
	if o == nil || o.SlotRiser2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser2linkSpeed
}

// GetSlotRiser2linkSpeedOk returns a tuple with the SlotRiser2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser2linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser2linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser2linkSpeed, true
}

// HasSlotRiser2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser2linkSpeed() bool {
	if o != nil && o.SlotRiser2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser2linkSpeed gets a reference to the given string and assigns it to the SlotRiser2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser2linkSpeed(v string) {
	o.SlotRiser2linkSpeed = &v
}

// GetSlotRiser2slot4linkSpeed returns the SlotRiser2slot4linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser2slot4linkSpeed() string {
	if o == nil || o.SlotRiser2slot4linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser2slot4linkSpeed
}

// GetSlotRiser2slot4linkSpeedOk returns a tuple with the SlotRiser2slot4linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser2slot4linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser2slot4linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser2slot4linkSpeed, true
}

// HasSlotRiser2slot4linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser2slot4linkSpeed() bool {
	if o != nil && o.SlotRiser2slot4linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser2slot4linkSpeed gets a reference to the given string and assigns it to the SlotRiser2slot4linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser2slot4linkSpeed(v string) {
	o.SlotRiser2slot4linkSpeed = &v
}

// GetSlotRiser2slot5linkSpeed returns the SlotRiser2slot5linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser2slot5linkSpeed() string {
	if o == nil || o.SlotRiser2slot5linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser2slot5linkSpeed
}

// GetSlotRiser2slot5linkSpeedOk returns a tuple with the SlotRiser2slot5linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser2slot5linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser2slot5linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser2slot5linkSpeed, true
}

// HasSlotRiser2slot5linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser2slot5linkSpeed() bool {
	if o != nil && o.SlotRiser2slot5linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser2slot5linkSpeed gets a reference to the given string and assigns it to the SlotRiser2slot5linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser2slot5linkSpeed(v string) {
	o.SlotRiser2slot5linkSpeed = &v
}

// GetSlotRiser2slot6linkSpeed returns the SlotRiser2slot6linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotRiser2slot6linkSpeed() string {
	if o == nil || o.SlotRiser2slot6linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotRiser2slot6linkSpeed
}

// GetSlotRiser2slot6linkSpeedOk returns a tuple with the SlotRiser2slot6linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotRiser2slot6linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotRiser2slot6linkSpeed == nil {
		return nil, false
	}
	return o.SlotRiser2slot6linkSpeed, true
}

// HasSlotRiser2slot6linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotRiser2slot6linkSpeed() bool {
	if o != nil && o.SlotRiser2slot6linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotRiser2slot6linkSpeed gets a reference to the given string and assigns it to the SlotRiser2slot6linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotRiser2slot6linkSpeed(v string) {
	o.SlotRiser2slot6linkSpeed = &v
}

// GetSlotSasState returns the SlotSasState field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotSasState() string {
	if o == nil || o.SlotSasState == nil {
		var ret string
		return ret
	}
	return *o.SlotSasState
}

// GetSlotSasStateOk returns a tuple with the SlotSasState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotSasStateOk() (*string, bool) {
	if o == nil || o.SlotSasState == nil {
		return nil, false
	}
	return o.SlotSasState, true
}

// HasSlotSasState returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotSasState() bool {
	if o != nil && o.SlotSasState != nil {
		return true
	}

	return false
}

// SetSlotSasState gets a reference to the given string and assigns it to the SlotSasState field.
func (o *BiosPolicyAllOf) SetSlotSasState(v string) {
	o.SlotSasState = &v
}

// GetSlotSsdSlot1linkSpeed returns the SlotSsdSlot1linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotSsdSlot1linkSpeed() string {
	if o == nil || o.SlotSsdSlot1linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotSsdSlot1linkSpeed
}

// GetSlotSsdSlot1linkSpeedOk returns a tuple with the SlotSsdSlot1linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotSsdSlot1linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotSsdSlot1linkSpeed == nil {
		return nil, false
	}
	return o.SlotSsdSlot1linkSpeed, true
}

// HasSlotSsdSlot1linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotSsdSlot1linkSpeed() bool {
	if o != nil && o.SlotSsdSlot1linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotSsdSlot1linkSpeed gets a reference to the given string and assigns it to the SlotSsdSlot1linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotSsdSlot1linkSpeed(v string) {
	o.SlotSsdSlot1linkSpeed = &v
}

// GetSlotSsdSlot2linkSpeed returns the SlotSsdSlot2linkSpeed field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSlotSsdSlot2linkSpeed() string {
	if o == nil || o.SlotSsdSlot2linkSpeed == nil {
		var ret string
		return ret
	}
	return *o.SlotSsdSlot2linkSpeed
}

// GetSlotSsdSlot2linkSpeedOk returns a tuple with the SlotSsdSlot2linkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSlotSsdSlot2linkSpeedOk() (*string, bool) {
	if o == nil || o.SlotSsdSlot2linkSpeed == nil {
		return nil, false
	}
	return o.SlotSsdSlot2linkSpeed, true
}

// HasSlotSsdSlot2linkSpeed returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSlotSsdSlot2linkSpeed() bool {
	if o != nil && o.SlotSsdSlot2linkSpeed != nil {
		return true
	}

	return false
}

// SetSlotSsdSlot2linkSpeed gets a reference to the given string and assigns it to the SlotSsdSlot2linkSpeed field.
func (o *BiosPolicyAllOf) SetSlotSsdSlot2linkSpeed(v string) {
	o.SlotSsdSlot2linkSpeed = &v
}

// GetSmee returns the Smee field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSmee() string {
	if o == nil || o.Smee == nil {
		var ret string
		return ret
	}
	return *o.Smee
}

// GetSmeeOk returns a tuple with the Smee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSmeeOk() (*string, bool) {
	if o == nil || o.Smee == nil {
		return nil, false
	}
	return o.Smee, true
}

// HasSmee returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSmee() bool {
	if o != nil && o.Smee != nil {
		return true
	}

	return false
}

// SetSmee gets a reference to the given string and assigns it to the Smee field.
func (o *BiosPolicyAllOf) SetSmee(v string) {
	o.Smee = &v
}

// GetSmtMode returns the SmtMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSmtMode() string {
	if o == nil || o.SmtMode == nil {
		var ret string
		return ret
	}
	return *o.SmtMode
}

// GetSmtModeOk returns a tuple with the SmtMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSmtModeOk() (*string, bool) {
	if o == nil || o.SmtMode == nil {
		return nil, false
	}
	return o.SmtMode, true
}

// HasSmtMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSmtMode() bool {
	if o != nil && o.SmtMode != nil {
		return true
	}

	return false
}

// SetSmtMode gets a reference to the given string and assigns it to the SmtMode field.
func (o *BiosPolicyAllOf) SetSmtMode(v string) {
	o.SmtMode = &v
}

// GetSnc returns the Snc field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSnc() string {
	if o == nil || o.Snc == nil {
		var ret string
		return ret
	}
	return *o.Snc
}

// GetSncOk returns a tuple with the Snc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSncOk() (*string, bool) {
	if o == nil || o.Snc == nil {
		return nil, false
	}
	return o.Snc, true
}

// HasSnc returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSnc() bool {
	if o != nil && o.Snc != nil {
		return true
	}

	return false
}

// SetSnc gets a reference to the given string and assigns it to the Snc field.
func (o *BiosPolicyAllOf) SetSnc(v string) {
	o.Snc = &v
}

// GetSnoopyModeFor2lm returns the SnoopyModeFor2lm field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSnoopyModeFor2lm() string {
	if o == nil || o.SnoopyModeFor2lm == nil {
		var ret string
		return ret
	}
	return *o.SnoopyModeFor2lm
}

// GetSnoopyModeFor2lmOk returns a tuple with the SnoopyModeFor2lm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSnoopyModeFor2lmOk() (*string, bool) {
	if o == nil || o.SnoopyModeFor2lm == nil {
		return nil, false
	}
	return o.SnoopyModeFor2lm, true
}

// HasSnoopyModeFor2lm returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSnoopyModeFor2lm() bool {
	if o != nil && o.SnoopyModeFor2lm != nil {
		return true
	}

	return false
}

// SetSnoopyModeFor2lm gets a reference to the given string and assigns it to the SnoopyModeFor2lm field.
func (o *BiosPolicyAllOf) SetSnoopyModeFor2lm(v string) {
	o.SnoopyModeFor2lm = &v
}

// GetSnoopyModeForAd returns the SnoopyModeForAd field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSnoopyModeForAd() string {
	if o == nil || o.SnoopyModeForAd == nil {
		var ret string
		return ret
	}
	return *o.SnoopyModeForAd
}

// GetSnoopyModeForAdOk returns a tuple with the SnoopyModeForAd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSnoopyModeForAdOk() (*string, bool) {
	if o == nil || o.SnoopyModeForAd == nil {
		return nil, false
	}
	return o.SnoopyModeForAd, true
}

// HasSnoopyModeForAd returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSnoopyModeForAd() bool {
	if o != nil && o.SnoopyModeForAd != nil {
		return true
	}

	return false
}

// SetSnoopyModeForAd gets a reference to the given string and assigns it to the SnoopyModeForAd field.
func (o *BiosPolicyAllOf) SetSnoopyModeForAd(v string) {
	o.SnoopyModeForAd = &v
}

// GetSparingMode returns the SparingMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSparingMode() string {
	if o == nil || o.SparingMode == nil {
		var ret string
		return ret
	}
	return *o.SparingMode
}

// GetSparingModeOk returns a tuple with the SparingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSparingModeOk() (*string, bool) {
	if o == nil || o.SparingMode == nil {
		return nil, false
	}
	return o.SparingMode, true
}

// HasSparingMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSparingMode() bool {
	if o != nil && o.SparingMode != nil {
		return true
	}

	return false
}

// SetSparingMode gets a reference to the given string and assigns it to the SparingMode field.
func (o *BiosPolicyAllOf) SetSparingMode(v string) {
	o.SparingMode = &v
}

// GetSrIov returns the SrIov field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSrIov() string {
	if o == nil || o.SrIov == nil {
		var ret string
		return ret
	}
	return *o.SrIov
}

// GetSrIovOk returns a tuple with the SrIov field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSrIovOk() (*string, bool) {
	if o == nil || o.SrIov == nil {
		return nil, false
	}
	return o.SrIov, true
}

// HasSrIov returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSrIov() bool {
	if o != nil && o.SrIov != nil {
		return true
	}

	return false
}

// SetSrIov gets a reference to the given string and assigns it to the SrIov field.
func (o *BiosPolicyAllOf) SetSrIov(v string) {
	o.SrIov = &v
}

// GetStreamerPrefetch returns the StreamerPrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetStreamerPrefetch() string {
	if o == nil || o.StreamerPrefetch == nil {
		var ret string
		return ret
	}
	return *o.StreamerPrefetch
}

// GetStreamerPrefetchOk returns a tuple with the StreamerPrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetStreamerPrefetchOk() (*string, bool) {
	if o == nil || o.StreamerPrefetch == nil {
		return nil, false
	}
	return o.StreamerPrefetch, true
}

// HasStreamerPrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasStreamerPrefetch() bool {
	if o != nil && o.StreamerPrefetch != nil {
		return true
	}

	return false
}

// SetStreamerPrefetch gets a reference to the given string and assigns it to the StreamerPrefetch field.
func (o *BiosPolicyAllOf) SetStreamerPrefetch(v string) {
	o.StreamerPrefetch = &v
}

// GetSvmMode returns the SvmMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetSvmMode() string {
	if o == nil || o.SvmMode == nil {
		var ret string
		return ret
	}
	return *o.SvmMode
}

// GetSvmModeOk returns a tuple with the SvmMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetSvmModeOk() (*string, bool) {
	if o == nil || o.SvmMode == nil {
		return nil, false
	}
	return o.SvmMode, true
}

// HasSvmMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasSvmMode() bool {
	if o != nil && o.SvmMode != nil {
		return true
	}

	return false
}

// SetSvmMode gets a reference to the given string and assigns it to the SvmMode field.
func (o *BiosPolicyAllOf) SetSvmMode(v string) {
	o.SvmMode = &v
}

// GetTerminalType returns the TerminalType field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTerminalType() string {
	if o == nil || o.TerminalType == nil {
		var ret string
		return ret
	}
	return *o.TerminalType
}

// GetTerminalTypeOk returns a tuple with the TerminalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTerminalTypeOk() (*string, bool) {
	if o == nil || o.TerminalType == nil {
		return nil, false
	}
	return o.TerminalType, true
}

// HasTerminalType returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTerminalType() bool {
	if o != nil && o.TerminalType != nil {
		return true
	}

	return false
}

// SetTerminalType gets a reference to the given string and assigns it to the TerminalType field.
func (o *BiosPolicyAllOf) SetTerminalType(v string) {
	o.TerminalType = &v
}

// GetTpmControl returns the TpmControl field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTpmControl() string {
	if o == nil || o.TpmControl == nil {
		var ret string
		return ret
	}
	return *o.TpmControl
}

// GetTpmControlOk returns a tuple with the TpmControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTpmControlOk() (*string, bool) {
	if o == nil || o.TpmControl == nil {
		return nil, false
	}
	return o.TpmControl, true
}

// HasTpmControl returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTpmControl() bool {
	if o != nil && o.TpmControl != nil {
		return true
	}

	return false
}

// SetTpmControl gets a reference to the given string and assigns it to the TpmControl field.
func (o *BiosPolicyAllOf) SetTpmControl(v string) {
	o.TpmControl = &v
}

// GetTpmPendingOperation returns the TpmPendingOperation field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTpmPendingOperation() string {
	if o == nil || o.TpmPendingOperation == nil {
		var ret string
		return ret
	}
	return *o.TpmPendingOperation
}

// GetTpmPendingOperationOk returns a tuple with the TpmPendingOperation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTpmPendingOperationOk() (*string, bool) {
	if o == nil || o.TpmPendingOperation == nil {
		return nil, false
	}
	return o.TpmPendingOperation, true
}

// HasTpmPendingOperation returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTpmPendingOperation() bool {
	if o != nil && o.TpmPendingOperation != nil {
		return true
	}

	return false
}

// SetTpmPendingOperation gets a reference to the given string and assigns it to the TpmPendingOperation field.
func (o *BiosPolicyAllOf) SetTpmPendingOperation(v string) {
	o.TpmPendingOperation = &v
}

// GetTpmSupport returns the TpmSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTpmSupport() string {
	if o == nil || o.TpmSupport == nil {
		var ret string
		return ret
	}
	return *o.TpmSupport
}

// GetTpmSupportOk returns a tuple with the TpmSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTpmSupportOk() (*string, bool) {
	if o == nil || o.TpmSupport == nil {
		return nil, false
	}
	return o.TpmSupport, true
}

// HasTpmSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTpmSupport() bool {
	if o != nil && o.TpmSupport != nil {
		return true
	}

	return false
}

// SetTpmSupport gets a reference to the given string and assigns it to the TpmSupport field.
func (o *BiosPolicyAllOf) SetTpmSupport(v string) {
	o.TpmSupport = &v
}

// GetTsme returns the Tsme field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTsme() string {
	if o == nil || o.Tsme == nil {
		var ret string
		return ret
	}
	return *o.Tsme
}

// GetTsmeOk returns a tuple with the Tsme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTsmeOk() (*string, bool) {
	if o == nil || o.Tsme == nil {
		return nil, false
	}
	return o.Tsme, true
}

// HasTsme returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTsme() bool {
	if o != nil && o.Tsme != nil {
		return true
	}

	return false
}

// SetTsme gets a reference to the given string and assigns it to the Tsme field.
func (o *BiosPolicyAllOf) SetTsme(v string) {
	o.Tsme = &v
}

// GetTxtSupport returns the TxtSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetTxtSupport() string {
	if o == nil || o.TxtSupport == nil {
		var ret string
		return ret
	}
	return *o.TxtSupport
}

// GetTxtSupportOk returns a tuple with the TxtSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetTxtSupportOk() (*string, bool) {
	if o == nil || o.TxtSupport == nil {
		return nil, false
	}
	return o.TxtSupport, true
}

// HasTxtSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasTxtSupport() bool {
	if o != nil && o.TxtSupport != nil {
		return true
	}

	return false
}

// SetTxtSupport gets a reference to the given string and assigns it to the TxtSupport field.
func (o *BiosPolicyAllOf) SetTxtSupport(v string) {
	o.TxtSupport = &v
}

// GetUcsmBootOrderRule returns the UcsmBootOrderRule field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUcsmBootOrderRule() string {
	if o == nil || o.UcsmBootOrderRule == nil {
		var ret string
		return ret
	}
	return *o.UcsmBootOrderRule
}

// GetUcsmBootOrderRuleOk returns a tuple with the UcsmBootOrderRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUcsmBootOrderRuleOk() (*string, bool) {
	if o == nil || o.UcsmBootOrderRule == nil {
		return nil, false
	}
	return o.UcsmBootOrderRule, true
}

// HasUcsmBootOrderRule returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUcsmBootOrderRule() bool {
	if o != nil && o.UcsmBootOrderRule != nil {
		return true
	}

	return false
}

// SetUcsmBootOrderRule gets a reference to the given string and assigns it to the UcsmBootOrderRule field.
func (o *BiosPolicyAllOf) SetUcsmBootOrderRule(v string) {
	o.UcsmBootOrderRule = &v
}

// GetUfsDisable returns the UfsDisable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUfsDisable() string {
	if o == nil || o.UfsDisable == nil {
		var ret string
		return ret
	}
	return *o.UfsDisable
}

// GetUfsDisableOk returns a tuple with the UfsDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUfsDisableOk() (*string, bool) {
	if o == nil || o.UfsDisable == nil {
		return nil, false
	}
	return o.UfsDisable, true
}

// HasUfsDisable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUfsDisable() bool {
	if o != nil && o.UfsDisable != nil {
		return true
	}

	return false
}

// SetUfsDisable gets a reference to the given string and assigns it to the UfsDisable field.
func (o *BiosPolicyAllOf) SetUfsDisable(v string) {
	o.UfsDisable = &v
}

// GetUmaBasedClustering returns the UmaBasedClustering field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUmaBasedClustering() string {
	if o == nil || o.UmaBasedClustering == nil {
		var ret string
		return ret
	}
	return *o.UmaBasedClustering
}

// GetUmaBasedClusteringOk returns a tuple with the UmaBasedClustering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUmaBasedClusteringOk() (*string, bool) {
	if o == nil || o.UmaBasedClustering == nil {
		return nil, false
	}
	return o.UmaBasedClustering, true
}

// HasUmaBasedClustering returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUmaBasedClustering() bool {
	if o != nil && o.UmaBasedClustering != nil {
		return true
	}

	return false
}

// SetUmaBasedClustering gets a reference to the given string and assigns it to the UmaBasedClustering field.
func (o *BiosPolicyAllOf) SetUmaBasedClustering(v string) {
	o.UmaBasedClustering = &v
}

// GetUsbEmul6064 returns the UsbEmul6064 field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbEmul6064() string {
	if o == nil || o.UsbEmul6064 == nil {
		var ret string
		return ret
	}
	return *o.UsbEmul6064
}

// GetUsbEmul6064Ok returns a tuple with the UsbEmul6064 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbEmul6064Ok() (*string, bool) {
	if o == nil || o.UsbEmul6064 == nil {
		return nil, false
	}
	return o.UsbEmul6064, true
}

// HasUsbEmul6064 returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbEmul6064() bool {
	if o != nil && o.UsbEmul6064 != nil {
		return true
	}

	return false
}

// SetUsbEmul6064 gets a reference to the given string and assigns it to the UsbEmul6064 field.
func (o *BiosPolicyAllOf) SetUsbEmul6064(v string) {
	o.UsbEmul6064 = &v
}

// GetUsbPortFront returns the UsbPortFront field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortFront() string {
	if o == nil || o.UsbPortFront == nil {
		var ret string
		return ret
	}
	return *o.UsbPortFront
}

// GetUsbPortFrontOk returns a tuple with the UsbPortFront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortFrontOk() (*string, bool) {
	if o == nil || o.UsbPortFront == nil {
		return nil, false
	}
	return o.UsbPortFront, true
}

// HasUsbPortFront returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortFront() bool {
	if o != nil && o.UsbPortFront != nil {
		return true
	}

	return false
}

// SetUsbPortFront gets a reference to the given string and assigns it to the UsbPortFront field.
func (o *BiosPolicyAllOf) SetUsbPortFront(v string) {
	o.UsbPortFront = &v
}

// GetUsbPortInternal returns the UsbPortInternal field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortInternal() string {
	if o == nil || o.UsbPortInternal == nil {
		var ret string
		return ret
	}
	return *o.UsbPortInternal
}

// GetUsbPortInternalOk returns a tuple with the UsbPortInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortInternalOk() (*string, bool) {
	if o == nil || o.UsbPortInternal == nil {
		return nil, false
	}
	return o.UsbPortInternal, true
}

// HasUsbPortInternal returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortInternal() bool {
	if o != nil && o.UsbPortInternal != nil {
		return true
	}

	return false
}

// SetUsbPortInternal gets a reference to the given string and assigns it to the UsbPortInternal field.
func (o *BiosPolicyAllOf) SetUsbPortInternal(v string) {
	o.UsbPortInternal = &v
}

// GetUsbPortKvm returns the UsbPortKvm field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortKvm() string {
	if o == nil || o.UsbPortKvm == nil {
		var ret string
		return ret
	}
	return *o.UsbPortKvm
}

// GetUsbPortKvmOk returns a tuple with the UsbPortKvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortKvmOk() (*string, bool) {
	if o == nil || o.UsbPortKvm == nil {
		return nil, false
	}
	return o.UsbPortKvm, true
}

// HasUsbPortKvm returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortKvm() bool {
	if o != nil && o.UsbPortKvm != nil {
		return true
	}

	return false
}

// SetUsbPortKvm gets a reference to the given string and assigns it to the UsbPortKvm field.
func (o *BiosPolicyAllOf) SetUsbPortKvm(v string) {
	o.UsbPortKvm = &v
}

// GetUsbPortRear returns the UsbPortRear field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortRear() string {
	if o == nil || o.UsbPortRear == nil {
		var ret string
		return ret
	}
	return *o.UsbPortRear
}

// GetUsbPortRearOk returns a tuple with the UsbPortRear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortRearOk() (*string, bool) {
	if o == nil || o.UsbPortRear == nil {
		return nil, false
	}
	return o.UsbPortRear, true
}

// HasUsbPortRear returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortRear() bool {
	if o != nil && o.UsbPortRear != nil {
		return true
	}

	return false
}

// SetUsbPortRear gets a reference to the given string and assigns it to the UsbPortRear field.
func (o *BiosPolicyAllOf) SetUsbPortRear(v string) {
	o.UsbPortRear = &v
}

// GetUsbPortSdCard returns the UsbPortSdCard field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortSdCard() string {
	if o == nil || o.UsbPortSdCard == nil {
		var ret string
		return ret
	}
	return *o.UsbPortSdCard
}

// GetUsbPortSdCardOk returns a tuple with the UsbPortSdCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortSdCardOk() (*string, bool) {
	if o == nil || o.UsbPortSdCard == nil {
		return nil, false
	}
	return o.UsbPortSdCard, true
}

// HasUsbPortSdCard returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortSdCard() bool {
	if o != nil && o.UsbPortSdCard != nil {
		return true
	}

	return false
}

// SetUsbPortSdCard gets a reference to the given string and assigns it to the UsbPortSdCard field.
func (o *BiosPolicyAllOf) SetUsbPortSdCard(v string) {
	o.UsbPortSdCard = &v
}

// GetUsbPortVmedia returns the UsbPortVmedia field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbPortVmedia() string {
	if o == nil || o.UsbPortVmedia == nil {
		var ret string
		return ret
	}
	return *o.UsbPortVmedia
}

// GetUsbPortVmediaOk returns a tuple with the UsbPortVmedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbPortVmediaOk() (*string, bool) {
	if o == nil || o.UsbPortVmedia == nil {
		return nil, false
	}
	return o.UsbPortVmedia, true
}

// HasUsbPortVmedia returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbPortVmedia() bool {
	if o != nil && o.UsbPortVmedia != nil {
		return true
	}

	return false
}

// SetUsbPortVmedia gets a reference to the given string and assigns it to the UsbPortVmedia field.
func (o *BiosPolicyAllOf) SetUsbPortVmedia(v string) {
	o.UsbPortVmedia = &v
}

// GetUsbXhciSupport returns the UsbXhciSupport field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetUsbXhciSupport() string {
	if o == nil || o.UsbXhciSupport == nil {
		var ret string
		return ret
	}
	return *o.UsbXhciSupport
}

// GetUsbXhciSupportOk returns a tuple with the UsbXhciSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetUsbXhciSupportOk() (*string, bool) {
	if o == nil || o.UsbXhciSupport == nil {
		return nil, false
	}
	return o.UsbXhciSupport, true
}

// HasUsbXhciSupport returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasUsbXhciSupport() bool {
	if o != nil && o.UsbXhciSupport != nil {
		return true
	}

	return false
}

// SetUsbXhciSupport gets a reference to the given string and assigns it to the UsbXhciSupport field.
func (o *BiosPolicyAllOf) SetUsbXhciSupport(v string) {
	o.UsbXhciSupport = &v
}

// GetVgaPriority returns the VgaPriority field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetVgaPriority() string {
	if o == nil || o.VgaPriority == nil {
		var ret string
		return ret
	}
	return *o.VgaPriority
}

// GetVgaPriorityOk returns a tuple with the VgaPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetVgaPriorityOk() (*string, bool) {
	if o == nil || o.VgaPriority == nil {
		return nil, false
	}
	return o.VgaPriority, true
}

// HasVgaPriority returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasVgaPriority() bool {
	if o != nil && o.VgaPriority != nil {
		return true
	}

	return false
}

// SetVgaPriority gets a reference to the given string and assigns it to the VgaPriority field.
func (o *BiosPolicyAllOf) SetVgaPriority(v string) {
	o.VgaPriority = &v
}

// GetVmdEnable returns the VmdEnable field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetVmdEnable() string {
	if o == nil || o.VmdEnable == nil {
		var ret string
		return ret
	}
	return *o.VmdEnable
}

// GetVmdEnableOk returns a tuple with the VmdEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetVmdEnableOk() (*string, bool) {
	if o == nil || o.VmdEnable == nil {
		return nil, false
	}
	return o.VmdEnable, true
}

// HasVmdEnable returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasVmdEnable() bool {
	if o != nil && o.VmdEnable != nil {
		return true
	}

	return false
}

// SetVmdEnable gets a reference to the given string and assigns it to the VmdEnable field.
func (o *BiosPolicyAllOf) SetVmdEnable(v string) {
	o.VmdEnable = &v
}

// GetVolMemoryMode returns the VolMemoryMode field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetVolMemoryMode() string {
	if o == nil || o.VolMemoryMode == nil {
		var ret string
		return ret
	}
	return *o.VolMemoryMode
}

// GetVolMemoryModeOk returns a tuple with the VolMemoryMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetVolMemoryModeOk() (*string, bool) {
	if o == nil || o.VolMemoryMode == nil {
		return nil, false
	}
	return o.VolMemoryMode, true
}

// HasVolMemoryMode returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasVolMemoryMode() bool {
	if o != nil && o.VolMemoryMode != nil {
		return true
	}

	return false
}

// SetVolMemoryMode gets a reference to the given string and assigns it to the VolMemoryMode field.
func (o *BiosPolicyAllOf) SetVolMemoryMode(v string) {
	o.VolMemoryMode = &v
}

// GetWorkLoadConfig returns the WorkLoadConfig field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetWorkLoadConfig() string {
	if o == nil || o.WorkLoadConfig == nil {
		var ret string
		return ret
	}
	return *o.WorkLoadConfig
}

// GetWorkLoadConfigOk returns a tuple with the WorkLoadConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetWorkLoadConfigOk() (*string, bool) {
	if o == nil || o.WorkLoadConfig == nil {
		return nil, false
	}
	return o.WorkLoadConfig, true
}

// HasWorkLoadConfig returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasWorkLoadConfig() bool {
	if o != nil && o.WorkLoadConfig != nil {
		return true
	}

	return false
}

// SetWorkLoadConfig gets a reference to the given string and assigns it to the WorkLoadConfig field.
func (o *BiosPolicyAllOf) SetWorkLoadConfig(v string) {
	o.WorkLoadConfig = &v
}

// GetXptPrefetch returns the XptPrefetch field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetXptPrefetch() string {
	if o == nil || o.XptPrefetch == nil {
		var ret string
		return ret
	}
	return *o.XptPrefetch
}

// GetXptPrefetchOk returns a tuple with the XptPrefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetXptPrefetchOk() (*string, bool) {
	if o == nil || o.XptPrefetch == nil {
		return nil, false
	}
	return o.XptPrefetch, true
}

// HasXptPrefetch returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasXptPrefetch() bool {
	if o != nil && o.XptPrefetch != nil {
		return true
	}

	return false
}

// SetXptPrefetch gets a reference to the given string and assigns it to the XptPrefetch field.
func (o *BiosPolicyAllOf) SetXptPrefetch(v string) {
	o.XptPrefetch = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *BiosPolicyAllOf) GetOrganization() OrganizationOrganizationRelationship {
	if o == nil || o.Organization == nil {
		var ret OrganizationOrganizationRelationship
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BiosPolicyAllOf) GetOrganizationOk() (*OrganizationOrganizationRelationship, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given OrganizationOrganizationRelationship and assigns it to the Organization field.
func (o *BiosPolicyAllOf) SetOrganization(v OrganizationOrganizationRelationship) {
	o.Organization = &v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BiosPolicyAllOf) GetProfiles() []PolicyAbstractConfigProfileRelationship {
	if o == nil {
		var ret []PolicyAbstractConfigProfileRelationship
		return ret
	}
	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BiosPolicyAllOf) GetProfilesOk() (*[]PolicyAbstractConfigProfileRelationship, bool) {
	if o == nil || o.Profiles == nil {
		return nil, false
	}
	return &o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *BiosPolicyAllOf) HasProfiles() bool {
	if o != nil && o.Profiles != nil {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given []PolicyAbstractConfigProfileRelationship and assigns it to the Profiles field.
func (o *BiosPolicyAllOf) SetProfiles(v []PolicyAbstractConfigProfileRelationship) {
	o.Profiles = v
}

func (o BiosPolicyAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ClassId"] = o.ClassId
	}
	if true {
		toSerialize["ObjectType"] = o.ObjectType
	}
	if o.AcsControlGpu1state != nil {
		toSerialize["AcsControlGpu1state"] = o.AcsControlGpu1state
	}
	if o.AcsControlGpu2state != nil {
		toSerialize["AcsControlGpu2state"] = o.AcsControlGpu2state
	}
	if o.AcsControlGpu3state != nil {
		toSerialize["AcsControlGpu3state"] = o.AcsControlGpu3state
	}
	if o.AcsControlGpu4state != nil {
		toSerialize["AcsControlGpu4state"] = o.AcsControlGpu4state
	}
	if o.AcsControlGpu5state != nil {
		toSerialize["AcsControlGpu5state"] = o.AcsControlGpu5state
	}
	if o.AcsControlGpu6state != nil {
		toSerialize["AcsControlGpu6state"] = o.AcsControlGpu6state
	}
	if o.AcsControlGpu7state != nil {
		toSerialize["AcsControlGpu7state"] = o.AcsControlGpu7state
	}
	if o.AcsControlGpu8state != nil {
		toSerialize["AcsControlGpu8state"] = o.AcsControlGpu8state
	}
	if o.AcsControlSlot11state != nil {
		toSerialize["AcsControlSlot11state"] = o.AcsControlSlot11state
	}
	if o.AcsControlSlot12state != nil {
		toSerialize["AcsControlSlot12state"] = o.AcsControlSlot12state
	}
	if o.AcsControlSlot13state != nil {
		toSerialize["AcsControlSlot13state"] = o.AcsControlSlot13state
	}
	if o.AcsControlSlot14state != nil {
		toSerialize["AcsControlSlot14state"] = o.AcsControlSlot14state
	}
	if o.AdjacentCacheLinePrefetch != nil {
		toSerialize["AdjacentCacheLinePrefetch"] = o.AdjacentCacheLinePrefetch
	}
	if o.AdvancedMemTest != nil {
		toSerialize["AdvancedMemTest"] = o.AdvancedMemTest
	}
	if o.AllUsbDevices != nil {
		toSerialize["AllUsbDevices"] = o.AllUsbDevices
	}
	if o.Altitude != nil {
		toSerialize["Altitude"] = o.Altitude
	}
	if o.AspmSupport != nil {
		toSerialize["AspmSupport"] = o.AspmSupport
	}
	if o.AssertNmiOnPerr != nil {
		toSerialize["AssertNmiOnPerr"] = o.AssertNmiOnPerr
	}
	if o.AssertNmiOnSerr != nil {
		toSerialize["AssertNmiOnSerr"] = o.AssertNmiOnSerr
	}
	if o.AutoCcState != nil {
		toSerialize["AutoCcState"] = o.AutoCcState
	}
	if o.AutonumousCstateEnable != nil {
		toSerialize["AutonumousCstateEnable"] = o.AutonumousCstateEnable
	}
	if o.BaudRate != nil {
		toSerialize["BaudRate"] = o.BaudRate
	}
	if o.BmeDmaMitigation != nil {
		toSerialize["BmeDmaMitigation"] = o.BmeDmaMitigation
	}
	if o.BootOptionNumRetry != nil {
		toSerialize["BootOptionNumRetry"] = o.BootOptionNumRetry
	}
	if o.BootOptionReCoolDown != nil {
		toSerialize["BootOptionReCoolDown"] = o.BootOptionReCoolDown
	}
	if o.BootOptionRetry != nil {
		toSerialize["BootOptionRetry"] = o.BootOptionRetry
	}
	if o.BootPerformanceMode != nil {
		toSerialize["BootPerformanceMode"] = o.BootPerformanceMode
	}
	if o.BurstAndPostponedRefresh != nil {
		toSerialize["BurstAndPostponedRefresh"] = o.BurstAndPostponedRefresh
	}
	if o.CbsCmnApbdis != nil {
		toSerialize["CbsCmnApbdis"] = o.CbsCmnApbdis
	}
	if o.CbsCmnCpuCpb != nil {
		toSerialize["CbsCmnCpuCpb"] = o.CbsCmnCpuCpb
	}
	if o.CbsCmnCpuGenDowncoreCtrl != nil {
		toSerialize["CbsCmnCpuGenDowncoreCtrl"] = o.CbsCmnCpuGenDowncoreCtrl
	}
	if o.CbsCmnCpuGlobalCstateCtrl != nil {
		toSerialize["CbsCmnCpuGlobalCstateCtrl"] = o.CbsCmnCpuGlobalCstateCtrl
	}
	if o.CbsCmnCpuL1streamHwPrefetcher != nil {
		toSerialize["CbsCmnCpuL1streamHwPrefetcher"] = o.CbsCmnCpuL1streamHwPrefetcher
	}
	if o.CbsCmnCpuL2streamHwPrefetcher != nil {
		toSerialize["CbsCmnCpuL2streamHwPrefetcher"] = o.CbsCmnCpuL2streamHwPrefetcher
	}
	if o.CbsCmnCpuSmee != nil {
		toSerialize["CbsCmnCpuSmee"] = o.CbsCmnCpuSmee
	}
	if o.CbsCmnCpuStreamingStoresCtrl != nil {
		toSerialize["CbsCmnCpuStreamingStoresCtrl"] = o.CbsCmnCpuStreamingStoresCtrl
	}
	if o.CbsCmnDeterminismSlider != nil {
		toSerialize["CbsCmnDeterminismSlider"] = o.CbsCmnDeterminismSlider
	}
	if o.CbsCmnEfficiencyModeEn != nil {
		toSerialize["CbsCmnEfficiencyModeEn"] = o.CbsCmnEfficiencyModeEn
	}
	if o.CbsCmnFixedSocPstate != nil {
		toSerialize["CbsCmnFixedSocPstate"] = o.CbsCmnFixedSocPstate
	}
	if o.CbsCmnGnbNbIommu != nil {
		toSerialize["CbsCmnGnbNbIommu"] = o.CbsCmnGnbNbIommu
	}
	if o.CbsCmnGnbSmuDfCstates != nil {
		toSerialize["CbsCmnGnbSmuDfCstates"] = o.CbsCmnGnbSmuDfCstates
	}
	if o.CbsCmnGnbSmucppc != nil {
		toSerialize["CbsCmnGnbSmucppc"] = o.CbsCmnGnbSmucppc
	}
	if o.CbsCmnMemCtrlBankGroupSwapDdr4 != nil {
		toSerialize["CbsCmnMemCtrlBankGroupSwapDdr4"] = o.CbsCmnMemCtrlBankGroupSwapDdr4
	}
	if o.CbsCmnMemMapBankInterleaveDdr4 != nil {
		toSerialize["CbsCmnMemMapBankInterleaveDdr4"] = o.CbsCmnMemMapBankInterleaveDdr4
	}
	if o.CbsCmncTdpCtl != nil {
		toSerialize["CbsCmncTdpCtl"] = o.CbsCmncTdpCtl
	}
	if o.CbsCpuCcdCtrlSsp != nil {
		toSerialize["CbsCpuCcdCtrlSsp"] = o.CbsCpuCcdCtrlSsp
	}
	if o.CbsCpuCoreCtrl != nil {
		toSerialize["CbsCpuCoreCtrl"] = o.CbsCpuCoreCtrl
	}
	if o.CbsCpuSmtCtrl != nil {
		toSerialize["CbsCpuSmtCtrl"] = o.CbsCpuSmtCtrl
	}
	if o.CbsDbgCpuSnpMemCover != nil {
		toSerialize["CbsDbgCpuSnpMemCover"] = o.CbsDbgCpuSnpMemCover
	}
	if o.CbsDbgCpuSnpMemSizeCover != nil {
		toSerialize["CbsDbgCpuSnpMemSizeCover"] = o.CbsDbgCpuSnpMemSizeCover
	}
	if o.CbsDfCmnAcpiSratL3numa != nil {
		toSerialize["CbsDfCmnAcpiSratL3numa"] = o.CbsDfCmnAcpiSratL3numa
	}
	if o.CbsDfCmnDramNps != nil {
		toSerialize["CbsDfCmnDramNps"] = o.CbsDfCmnDramNps
	}
	if o.CbsDfCmnMemIntlv != nil {
		toSerialize["CbsDfCmnMemIntlv"] = o.CbsDfCmnMemIntlv
	}
	if o.CbsDfCmnMemIntlvSize != nil {
		toSerialize["CbsDfCmnMemIntlvSize"] = o.CbsDfCmnMemIntlvSize
	}
	if o.CbsSevSnpSupport != nil {
		toSerialize["CbsSevSnpSupport"] = o.CbsSevSnpSupport
	}
	if o.CdnEnable != nil {
		toSerialize["CdnEnable"] = o.CdnEnable
	}
	if o.CdnSupport != nil {
		toSerialize["CdnSupport"] = o.CdnSupport
	}
	if o.ChannelInterLeave != nil {
		toSerialize["ChannelInterLeave"] = o.ChannelInterLeave
	}
	if o.CiscoAdaptiveMemTraining != nil {
		toSerialize["CiscoAdaptiveMemTraining"] = o.CiscoAdaptiveMemTraining
	}
	if o.CiscoDebugLevel != nil {
		toSerialize["CiscoDebugLevel"] = o.CiscoDebugLevel
	}
	if o.CiscoOpromLaunchOptimization != nil {
		toSerialize["CiscoOpromLaunchOptimization"] = o.CiscoOpromLaunchOptimization
	}
	if o.CiscoXgmiMaxSpeed != nil {
		toSerialize["CiscoXgmiMaxSpeed"] = o.CiscoXgmiMaxSpeed
	}
	if o.CkeLowPolicy != nil {
		toSerialize["CkeLowPolicy"] = o.CkeLowPolicy
	}
	if o.ClosedLoopThermThrotl != nil {
		toSerialize["ClosedLoopThermThrotl"] = o.ClosedLoopThermThrotl
	}
	if o.CmciEnable != nil {
		toSerialize["CmciEnable"] = o.CmciEnable
	}
	if o.ConfigTdp != nil {
		toSerialize["ConfigTdp"] = o.ConfigTdp
	}
	if o.ConfigTdpLevel != nil {
		toSerialize["ConfigTdpLevel"] = o.ConfigTdpLevel
	}
	if o.ConsoleRedirection != nil {
		toSerialize["ConsoleRedirection"] = o.ConsoleRedirection
	}
	if o.CoreMultiProcessing != nil {
		toSerialize["CoreMultiProcessing"] = o.CoreMultiProcessing
	}
	if o.CpuEnergyPerformance != nil {
		toSerialize["CpuEnergyPerformance"] = o.CpuEnergyPerformance
	}
	if o.CpuFrequencyFloor != nil {
		toSerialize["CpuFrequencyFloor"] = o.CpuFrequencyFloor
	}
	if o.CpuPerformance != nil {
		toSerialize["CpuPerformance"] = o.CpuPerformance
	}
	if o.CpuPowerManagement != nil {
		toSerialize["CpuPowerManagement"] = o.CpuPowerManagement
	}
	if o.CrQos != nil {
		toSerialize["CrQos"] = o.CrQos
	}
	if o.CrfastgoConfig != nil {
		toSerialize["CrfastgoConfig"] = o.CrfastgoConfig
	}
	if o.DcpmmFirmwareDowngrade != nil {
		toSerialize["DcpmmFirmwareDowngrade"] = o.DcpmmFirmwareDowngrade
	}
	if o.DemandScrub != nil {
		toSerialize["DemandScrub"] = o.DemandScrub
	}
	if o.DirectCacheAccess != nil {
		toSerialize["DirectCacheAccess"] = o.DirectCacheAccess
	}
	if o.DramClockThrottling != nil {
		toSerialize["DramClockThrottling"] = o.DramClockThrottling
	}
	if o.DramRefreshRate != nil {
		toSerialize["DramRefreshRate"] = o.DramRefreshRate
	}
	if o.DramSwThermalThrottling != nil {
		toSerialize["DramSwThermalThrottling"] = o.DramSwThermalThrottling
	}
	if o.EadrSupport != nil {
		toSerialize["EadrSupport"] = o.EadrSupport
	}
	if o.EdpcEn != nil {
		toSerialize["EdpcEn"] = o.EdpcEn
	}
	if o.EnableClockSpreadSpec != nil {
		toSerialize["EnableClockSpreadSpec"] = o.EnableClockSpreadSpec
	}
	if o.EnableMktme != nil {
		toSerialize["EnableMktme"] = o.EnableMktme
	}
	if o.EnableSgx != nil {
		toSerialize["EnableSgx"] = o.EnableSgx
	}
	if o.EnableTme != nil {
		toSerialize["EnableTme"] = o.EnableTme
	}
	if o.EnergyEfficientTurbo != nil {
		toSerialize["EnergyEfficientTurbo"] = o.EnergyEfficientTurbo
	}
	if o.EngPerfTuning != nil {
		toSerialize["EngPerfTuning"] = o.EngPerfTuning
	}
	if o.EnhancedIntelSpeedStepTech != nil {
		toSerialize["EnhancedIntelSpeedStepTech"] = o.EnhancedIntelSpeedStepTech
	}
	if o.EpochUpdate != nil {
		toSerialize["EpochUpdate"] = o.EpochUpdate
	}
	if o.EppEnable != nil {
		toSerialize["EppEnable"] = o.EppEnable
	}
	if o.EppProfile != nil {
		toSerialize["EppProfile"] = o.EppProfile
	}
	if o.ExecuteDisableBit != nil {
		toSerialize["ExecuteDisableBit"] = o.ExecuteDisableBit
	}
	if o.ExtendedApic != nil {
		toSerialize["ExtendedApic"] = o.ExtendedApic
	}
	if o.FlowControl != nil {
		toSerialize["FlowControl"] = o.FlowControl
	}
	if o.Frb2enable != nil {
		toSerialize["Frb2enable"] = o.Frb2enable
	}
	if o.HardwarePrefetch != nil {
		toSerialize["HardwarePrefetch"] = o.HardwarePrefetch
	}
	if o.HwpmEnable != nil {
		toSerialize["HwpmEnable"] = o.HwpmEnable
	}
	if o.ImcInterleave != nil {
		toSerialize["ImcInterleave"] = o.ImcInterleave
	}
	if o.IntelDynamicSpeedSelect != nil {
		toSerialize["IntelDynamicSpeedSelect"] = o.IntelDynamicSpeedSelect
	}
	if o.IntelHyperThreadingTech != nil {
		toSerialize["IntelHyperThreadingTech"] = o.IntelHyperThreadingTech
	}
	if o.IntelSpeedSelect != nil {
		toSerialize["IntelSpeedSelect"] = o.IntelSpeedSelect
	}
	if o.IntelTurboBoostTech != nil {
		toSerialize["IntelTurboBoostTech"] = o.IntelTurboBoostTech
	}
	if o.IntelVirtualizationTechnology != nil {
		toSerialize["IntelVirtualizationTechnology"] = o.IntelVirtualizationTechnology
	}
	if o.IntelVtForDirectedIo != nil {
		toSerialize["IntelVtForDirectedIo"] = o.IntelVtForDirectedIo
	}
	if o.IntelVtdCoherencySupport != nil {
		toSerialize["IntelVtdCoherencySupport"] = o.IntelVtdCoherencySupport
	}
	if o.IntelVtdInterruptRemapping != nil {
		toSerialize["IntelVtdInterruptRemapping"] = o.IntelVtdInterruptRemapping
	}
	if o.IntelVtdPassThroughDmaSupport != nil {
		toSerialize["IntelVtdPassThroughDmaSupport"] = o.IntelVtdPassThroughDmaSupport
	}
	if o.IntelVtdatsSupport != nil {
		toSerialize["IntelVtdatsSupport"] = o.IntelVtdatsSupport
	}
	if o.IohErrorEnable != nil {
		toSerialize["IohErrorEnable"] = o.IohErrorEnable
	}
	if o.IohResource != nil {
		toSerialize["IohResource"] = o.IohResource
	}
	if o.IpPrefetch != nil {
		toSerialize["IpPrefetch"] = o.IpPrefetch
	}
	if o.Ipv4http != nil {
		toSerialize["Ipv4http"] = o.Ipv4http
	}
	if o.Ipv4pxe != nil {
		toSerialize["Ipv4pxe"] = o.Ipv4pxe
	}
	if o.Ipv6http != nil {
		toSerialize["Ipv6http"] = o.Ipv6http
	}
	if o.Ipv6pxe != nil {
		toSerialize["Ipv6pxe"] = o.Ipv6pxe
	}
	if o.KtiPrefetch != nil {
		toSerialize["KtiPrefetch"] = o.KtiPrefetch
	}
	if o.LegacyOsRedirection != nil {
		toSerialize["LegacyOsRedirection"] = o.LegacyOsRedirection
	}
	if o.LegacyUsbSupport != nil {
		toSerialize["LegacyUsbSupport"] = o.LegacyUsbSupport
	}
	if o.LlcPrefetch != nil {
		toSerialize["LlcPrefetch"] = o.LlcPrefetch
	}
	if o.LomPort0state != nil {
		toSerialize["LomPort0state"] = o.LomPort0state
	}
	if o.LomPort1state != nil {
		toSerialize["LomPort1state"] = o.LomPort1state
	}
	if o.LomPort2state != nil {
		toSerialize["LomPort2state"] = o.LomPort2state
	}
	if o.LomPort3state != nil {
		toSerialize["LomPort3state"] = o.LomPort3state
	}
	if o.LomPortsAllState != nil {
		toSerialize["LomPortsAllState"] = o.LomPortsAllState
	}
	if o.LvDdrMode != nil {
		toSerialize["LvDdrMode"] = o.LvDdrMode
	}
	if o.MakeDeviceNonBootable != nil {
		toSerialize["MakeDeviceNonBootable"] = o.MakeDeviceNonBootable
	}
	if o.MemoryBandwidthBoost != nil {
		toSerialize["MemoryBandwidthBoost"] = o.MemoryBandwidthBoost
	}
	if o.MemoryInterLeave != nil {
		toSerialize["MemoryInterLeave"] = o.MemoryInterLeave
	}
	if o.MemoryMappedIoAbove4gb != nil {
		toSerialize["MemoryMappedIoAbove4gb"] = o.MemoryMappedIoAbove4gb
	}
	if o.MemoryRefreshRate != nil {
		toSerialize["MemoryRefreshRate"] = o.MemoryRefreshRate
	}
	if o.MemorySizeLimit != nil {
		toSerialize["MemorySizeLimit"] = o.MemorySizeLimit
	}
	if o.MemoryThermalThrottling != nil {
		toSerialize["MemoryThermalThrottling"] = o.MemoryThermalThrottling
	}
	if o.MirroringMode != nil {
		toSerialize["MirroringMode"] = o.MirroringMode
	}
	if o.MmcfgBase != nil {
		toSerialize["MmcfgBase"] = o.MmcfgBase
	}
	if o.NetworkStack != nil {
		toSerialize["NetworkStack"] = o.NetworkStack
	}
	if o.NumaOptimized != nil {
		toSerialize["NumaOptimized"] = o.NumaOptimized
	}
	if o.NvmdimmPerformConfig != nil {
		toSerialize["NvmdimmPerformConfig"] = o.NvmdimmPerformConfig
	}
	if o.Onboard10gbitLom != nil {
		toSerialize["Onboard10gbitLom"] = o.Onboard10gbitLom
	}
	if o.OnboardGbitLom != nil {
		toSerialize["OnboardGbitLom"] = o.OnboardGbitLom
	}
	if o.OnboardScuStorageSupport != nil {
		toSerialize["OnboardScuStorageSupport"] = o.OnboardScuStorageSupport
	}
	if o.OnboardScuStorageSwStack != nil {
		toSerialize["OnboardScuStorageSwStack"] = o.OnboardScuStorageSwStack
	}
	if o.OperationMode != nil {
		toSerialize["OperationMode"] = o.OperationMode
	}
	if o.OsBootWatchdogTimer != nil {
		toSerialize["OsBootWatchdogTimer"] = o.OsBootWatchdogTimer
	}
	if o.OsBootWatchdogTimerPolicy != nil {
		toSerialize["OsBootWatchdogTimerPolicy"] = o.OsBootWatchdogTimerPolicy
	}
	if o.OsBootWatchdogTimerTimeout != nil {
		toSerialize["OsBootWatchdogTimerTimeout"] = o.OsBootWatchdogTimerTimeout
	}
	if o.OutOfBandMgmtPort != nil {
		toSerialize["OutOfBandMgmtPort"] = o.OutOfBandMgmtPort
	}
	if o.PackageCstateLimit != nil {
		toSerialize["PackageCstateLimit"] = o.PackageCstateLimit
	}
	if o.PanicHighWatermark != nil {
		toSerialize["PanicHighWatermark"] = o.PanicHighWatermark
	}
	if o.PartialCacheLineSparing != nil {
		toSerialize["PartialCacheLineSparing"] = o.PartialCacheLineSparing
	}
	if o.PartialMirrorModeConfig != nil {
		toSerialize["PartialMirrorModeConfig"] = o.PartialMirrorModeConfig
	}
	if o.PartialMirrorPercent != nil {
		toSerialize["PartialMirrorPercent"] = o.PartialMirrorPercent
	}
	if o.PartialMirrorValue1 != nil {
		toSerialize["PartialMirrorValue1"] = o.PartialMirrorValue1
	}
	if o.PartialMirrorValue2 != nil {
		toSerialize["PartialMirrorValue2"] = o.PartialMirrorValue2
	}
	if o.PartialMirrorValue3 != nil {
		toSerialize["PartialMirrorValue3"] = o.PartialMirrorValue3
	}
	if o.PartialMirrorValue4 != nil {
		toSerialize["PartialMirrorValue4"] = o.PartialMirrorValue4
	}
	if o.PatrolScrub != nil {
		toSerialize["PatrolScrub"] = o.PatrolScrub
	}
	if o.PatrolScrubDuration != nil {
		toSerialize["PatrolScrubDuration"] = o.PatrolScrubDuration
	}
	if o.PcIeRasSupport != nil {
		toSerialize["PcIeRasSupport"] = o.PcIeRasSupport
	}
	if o.PcIeSsdHotPlugSupport != nil {
		toSerialize["PcIeSsdHotPlugSupport"] = o.PcIeSsdHotPlugSupport
	}
	if o.PchUsb30mode != nil {
		toSerialize["PchUsb30mode"] = o.PchUsb30mode
	}
	if o.PciOptionRoMs != nil {
		toSerialize["PciOptionRoMs"] = o.PciOptionRoMs
	}
	if o.PciRomClp != nil {
		toSerialize["PciRomClp"] = o.PciRomClp
	}
	if o.PcieAriSupport != nil {
		toSerialize["PcieAriSupport"] = o.PcieAriSupport
	}
	if o.PciePllSsc != nil {
		toSerialize["PciePllSsc"] = o.PciePllSsc
	}
	if o.PcieSlotMraid1linkSpeed != nil {
		toSerialize["PcieSlotMraid1linkSpeed"] = o.PcieSlotMraid1linkSpeed
	}
	if o.PcieSlotMraid1optionRom != nil {
		toSerialize["PcieSlotMraid1optionRom"] = o.PcieSlotMraid1optionRom
	}
	if o.PcieSlotMraid2linkSpeed != nil {
		toSerialize["PcieSlotMraid2linkSpeed"] = o.PcieSlotMraid2linkSpeed
	}
	if o.PcieSlotMraid2optionRom != nil {
		toSerialize["PcieSlotMraid2optionRom"] = o.PcieSlotMraid2optionRom
	}
	if o.PcieSlotMstorraidLinkSpeed != nil {
		toSerialize["PcieSlotMstorraidLinkSpeed"] = o.PcieSlotMstorraidLinkSpeed
	}
	if o.PcieSlotMstorraidOptionRom != nil {
		toSerialize["PcieSlotMstorraidOptionRom"] = o.PcieSlotMstorraidOptionRom
	}
	if o.PcieSlotNvme1linkSpeed != nil {
		toSerialize["PcieSlotNvme1linkSpeed"] = o.PcieSlotNvme1linkSpeed
	}
	if o.PcieSlotNvme1optionRom != nil {
		toSerialize["PcieSlotNvme1optionRom"] = o.PcieSlotNvme1optionRom
	}
	if o.PcieSlotNvme2linkSpeed != nil {
		toSerialize["PcieSlotNvme2linkSpeed"] = o.PcieSlotNvme2linkSpeed
	}
	if o.PcieSlotNvme2optionRom != nil {
		toSerialize["PcieSlotNvme2optionRom"] = o.PcieSlotNvme2optionRom
	}
	if o.PcieSlotNvme3linkSpeed != nil {
		toSerialize["PcieSlotNvme3linkSpeed"] = o.PcieSlotNvme3linkSpeed
	}
	if o.PcieSlotNvme3optionRom != nil {
		toSerialize["PcieSlotNvme3optionRom"] = o.PcieSlotNvme3optionRom
	}
	if o.PcieSlotNvme4linkSpeed != nil {
		toSerialize["PcieSlotNvme4linkSpeed"] = o.PcieSlotNvme4linkSpeed
	}
	if o.PcieSlotNvme4optionRom != nil {
		toSerialize["PcieSlotNvme4optionRom"] = o.PcieSlotNvme4optionRom
	}
	if o.PcieSlotNvme5linkSpeed != nil {
		toSerialize["PcieSlotNvme5linkSpeed"] = o.PcieSlotNvme5linkSpeed
	}
	if o.PcieSlotNvme5optionRom != nil {
		toSerialize["PcieSlotNvme5optionRom"] = o.PcieSlotNvme5optionRom
	}
	if o.PcieSlotNvme6linkSpeed != nil {
		toSerialize["PcieSlotNvme6linkSpeed"] = o.PcieSlotNvme6linkSpeed
	}
	if o.PcieSlotNvme6optionRom != nil {
		toSerialize["PcieSlotNvme6optionRom"] = o.PcieSlotNvme6optionRom
	}
	if o.PopSupport != nil {
		toSerialize["PopSupport"] = o.PopSupport
	}
	if o.PostErrorPause != nil {
		toSerialize["PostErrorPause"] = o.PostErrorPause
	}
	if o.PostPackageRepair != nil {
		toSerialize["PostPackageRepair"] = o.PostPackageRepair
	}
	if o.ProcessorC1e != nil {
		toSerialize["ProcessorC1e"] = o.ProcessorC1e
	}
	if o.ProcessorC3report != nil {
		toSerialize["ProcessorC3report"] = o.ProcessorC3report
	}
	if o.ProcessorC6report != nil {
		toSerialize["ProcessorC6report"] = o.ProcessorC6report
	}
	if o.ProcessorCstate != nil {
		toSerialize["ProcessorCstate"] = o.ProcessorCstate
	}
	if o.Psata != nil {
		toSerialize["Psata"] = o.Psata
	}
	if o.PstateCoordType != nil {
		toSerialize["PstateCoordType"] = o.PstateCoordType
	}
	if o.PuttyKeyPad != nil {
		toSerialize["PuttyKeyPad"] = o.PuttyKeyPad
	}
	if o.PwrPerfTuning != nil {
		toSerialize["PwrPerfTuning"] = o.PwrPerfTuning
	}
	if o.QpiLinkFrequency != nil {
		toSerialize["QpiLinkFrequency"] = o.QpiLinkFrequency
	}
	if o.QpiLinkSpeed != nil {
		toSerialize["QpiLinkSpeed"] = o.QpiLinkSpeed
	}
	if o.QpiSnoopMode != nil {
		toSerialize["QpiSnoopMode"] = o.QpiSnoopMode
	}
	if o.RankInterLeave != nil {
		toSerialize["RankInterLeave"] = o.RankInterLeave
	}
	if o.RedirectionAfterPost != nil {
		toSerialize["RedirectionAfterPost"] = o.RedirectionAfterPost
	}
	if o.SataModeSelect != nil {
		toSerialize["SataModeSelect"] = o.SataModeSelect
	}
	if o.SelectMemoryRasConfiguration != nil {
		toSerialize["SelectMemoryRasConfiguration"] = o.SelectMemoryRasConfiguration
	}
	if o.SelectPprType != nil {
		toSerialize["SelectPprType"] = o.SelectPprType
	}
	if o.SerialPortAenable != nil {
		toSerialize["SerialPortAenable"] = o.SerialPortAenable
	}
	if o.Sev != nil {
		toSerialize["Sev"] = o.Sev
	}
	if o.SgxAutoRegistrationAgent != nil {
		toSerialize["SgxAutoRegistrationAgent"] = o.SgxAutoRegistrationAgent
	}
	if o.SgxEpoch0 != nil {
		toSerialize["SgxEpoch0"] = o.SgxEpoch0
	}
	if o.SgxEpoch1 != nil {
		toSerialize["SgxEpoch1"] = o.SgxEpoch1
	}
	if o.SgxFactoryReset != nil {
		toSerialize["SgxFactoryReset"] = o.SgxFactoryReset
	}
	if o.SgxLePubKeyHash0 != nil {
		toSerialize["SgxLePubKeyHash0"] = o.SgxLePubKeyHash0
	}
	if o.SgxLePubKeyHash1 != nil {
		toSerialize["SgxLePubKeyHash1"] = o.SgxLePubKeyHash1
	}
	if o.SgxLePubKeyHash2 != nil {
		toSerialize["SgxLePubKeyHash2"] = o.SgxLePubKeyHash2
	}
	if o.SgxLePubKeyHash3 != nil {
		toSerialize["SgxLePubKeyHash3"] = o.SgxLePubKeyHash3
	}
	if o.SgxLeWr != nil {
		toSerialize["SgxLeWr"] = o.SgxLeWr
	}
	if o.SgxPackageInfoInBandAccess != nil {
		toSerialize["SgxPackageInfoInBandAccess"] = o.SgxPackageInfoInBandAccess
	}
	if o.SgxQos != nil {
		toSerialize["SgxQos"] = o.SgxQos
	}
	if o.SinglePctlEnable != nil {
		toSerialize["SinglePctlEnable"] = o.SinglePctlEnable
	}
	if o.Slot10linkSpeed != nil {
		toSerialize["Slot10linkSpeed"] = o.Slot10linkSpeed
	}
	if o.Slot10state != nil {
		toSerialize["Slot10state"] = o.Slot10state
	}
	if o.Slot11linkSpeed != nil {
		toSerialize["Slot11linkSpeed"] = o.Slot11linkSpeed
	}
	if o.Slot11state != nil {
		toSerialize["Slot11state"] = o.Slot11state
	}
	if o.Slot12linkSpeed != nil {
		toSerialize["Slot12linkSpeed"] = o.Slot12linkSpeed
	}
	if o.Slot12state != nil {
		toSerialize["Slot12state"] = o.Slot12state
	}
	if o.Slot13state != nil {
		toSerialize["Slot13state"] = o.Slot13state
	}
	if o.Slot14state != nil {
		toSerialize["Slot14state"] = o.Slot14state
	}
	if o.Slot1linkSpeed != nil {
		toSerialize["Slot1linkSpeed"] = o.Slot1linkSpeed
	}
	if o.Slot1state != nil {
		toSerialize["Slot1state"] = o.Slot1state
	}
	if o.Slot2linkSpeed != nil {
		toSerialize["Slot2linkSpeed"] = o.Slot2linkSpeed
	}
	if o.Slot2state != nil {
		toSerialize["Slot2state"] = o.Slot2state
	}
	if o.Slot3linkSpeed != nil {
		toSerialize["Slot3linkSpeed"] = o.Slot3linkSpeed
	}
	if o.Slot3state != nil {
		toSerialize["Slot3state"] = o.Slot3state
	}
	if o.Slot4linkSpeed != nil {
		toSerialize["Slot4linkSpeed"] = o.Slot4linkSpeed
	}
	if o.Slot4state != nil {
		toSerialize["Slot4state"] = o.Slot4state
	}
	if o.Slot5linkSpeed != nil {
		toSerialize["Slot5linkSpeed"] = o.Slot5linkSpeed
	}
	if o.Slot5state != nil {
		toSerialize["Slot5state"] = o.Slot5state
	}
	if o.Slot6linkSpeed != nil {
		toSerialize["Slot6linkSpeed"] = o.Slot6linkSpeed
	}
	if o.Slot6state != nil {
		toSerialize["Slot6state"] = o.Slot6state
	}
	if o.Slot7linkSpeed != nil {
		toSerialize["Slot7linkSpeed"] = o.Slot7linkSpeed
	}
	if o.Slot7state != nil {
		toSerialize["Slot7state"] = o.Slot7state
	}
	if o.Slot8linkSpeed != nil {
		toSerialize["Slot8linkSpeed"] = o.Slot8linkSpeed
	}
	if o.Slot8state != nil {
		toSerialize["Slot8state"] = o.Slot8state
	}
	if o.Slot9linkSpeed != nil {
		toSerialize["Slot9linkSpeed"] = o.Slot9linkSpeed
	}
	if o.Slot9state != nil {
		toSerialize["Slot9state"] = o.Slot9state
	}
	if o.SlotFlomLinkSpeed != nil {
		toSerialize["SlotFlomLinkSpeed"] = o.SlotFlomLinkSpeed
	}
	if o.SlotFrontNvme10linkSpeed != nil {
		toSerialize["SlotFrontNvme10linkSpeed"] = o.SlotFrontNvme10linkSpeed
	}
	if o.SlotFrontNvme10optionRom != nil {
		toSerialize["SlotFrontNvme10optionRom"] = o.SlotFrontNvme10optionRom
	}
	if o.SlotFrontNvme11linkSpeed != nil {
		toSerialize["SlotFrontNvme11linkSpeed"] = o.SlotFrontNvme11linkSpeed
	}
	if o.SlotFrontNvme11optionRom != nil {
		toSerialize["SlotFrontNvme11optionRom"] = o.SlotFrontNvme11optionRom
	}
	if o.SlotFrontNvme12linkSpeed != nil {
		toSerialize["SlotFrontNvme12linkSpeed"] = o.SlotFrontNvme12linkSpeed
	}
	if o.SlotFrontNvme12optionRom != nil {
		toSerialize["SlotFrontNvme12optionRom"] = o.SlotFrontNvme12optionRom
	}
	if o.SlotFrontNvme13optionRom != nil {
		toSerialize["SlotFrontNvme13optionRom"] = o.SlotFrontNvme13optionRom
	}
	if o.SlotFrontNvme14optionRom != nil {
		toSerialize["SlotFrontNvme14optionRom"] = o.SlotFrontNvme14optionRom
	}
	if o.SlotFrontNvme15optionRom != nil {
		toSerialize["SlotFrontNvme15optionRom"] = o.SlotFrontNvme15optionRom
	}
	if o.SlotFrontNvme16optionRom != nil {
		toSerialize["SlotFrontNvme16optionRom"] = o.SlotFrontNvme16optionRom
	}
	if o.SlotFrontNvme17optionRom != nil {
		toSerialize["SlotFrontNvme17optionRom"] = o.SlotFrontNvme17optionRom
	}
	if o.SlotFrontNvme18optionRom != nil {
		toSerialize["SlotFrontNvme18optionRom"] = o.SlotFrontNvme18optionRom
	}
	if o.SlotFrontNvme19optionRom != nil {
		toSerialize["SlotFrontNvme19optionRom"] = o.SlotFrontNvme19optionRom
	}
	if o.SlotFrontNvme1linkSpeed != nil {
		toSerialize["SlotFrontNvme1linkSpeed"] = o.SlotFrontNvme1linkSpeed
	}
	if o.SlotFrontNvme1optionRom != nil {
		toSerialize["SlotFrontNvme1optionRom"] = o.SlotFrontNvme1optionRom
	}
	if o.SlotFrontNvme20optionRom != nil {
		toSerialize["SlotFrontNvme20optionRom"] = o.SlotFrontNvme20optionRom
	}
	if o.SlotFrontNvme21optionRom != nil {
		toSerialize["SlotFrontNvme21optionRom"] = o.SlotFrontNvme21optionRom
	}
	if o.SlotFrontNvme22optionRom != nil {
		toSerialize["SlotFrontNvme22optionRom"] = o.SlotFrontNvme22optionRom
	}
	if o.SlotFrontNvme23optionRom != nil {
		toSerialize["SlotFrontNvme23optionRom"] = o.SlotFrontNvme23optionRom
	}
	if o.SlotFrontNvme24optionRom != nil {
		toSerialize["SlotFrontNvme24optionRom"] = o.SlotFrontNvme24optionRom
	}
	if o.SlotFrontNvme2linkSpeed != nil {
		toSerialize["SlotFrontNvme2linkSpeed"] = o.SlotFrontNvme2linkSpeed
	}
	if o.SlotFrontNvme2optionRom != nil {
		toSerialize["SlotFrontNvme2optionRom"] = o.SlotFrontNvme2optionRom
	}
	if o.SlotFrontNvme3linkSpeed != nil {
		toSerialize["SlotFrontNvme3linkSpeed"] = o.SlotFrontNvme3linkSpeed
	}
	if o.SlotFrontNvme3optionRom != nil {
		toSerialize["SlotFrontNvme3optionRom"] = o.SlotFrontNvme3optionRom
	}
	if o.SlotFrontNvme4linkSpeed != nil {
		toSerialize["SlotFrontNvme4linkSpeed"] = o.SlotFrontNvme4linkSpeed
	}
	if o.SlotFrontNvme4optionRom != nil {
		toSerialize["SlotFrontNvme4optionRom"] = o.SlotFrontNvme4optionRom
	}
	if o.SlotFrontNvme5linkSpeed != nil {
		toSerialize["SlotFrontNvme5linkSpeed"] = o.SlotFrontNvme5linkSpeed
	}
	if o.SlotFrontNvme5optionRom != nil {
		toSerialize["SlotFrontNvme5optionRom"] = o.SlotFrontNvme5optionRom
	}
	if o.SlotFrontNvme6linkSpeed != nil {
		toSerialize["SlotFrontNvme6linkSpeed"] = o.SlotFrontNvme6linkSpeed
	}
	if o.SlotFrontNvme6optionRom != nil {
		toSerialize["SlotFrontNvme6optionRom"] = o.SlotFrontNvme6optionRom
	}
	if o.SlotFrontNvme7linkSpeed != nil {
		toSerialize["SlotFrontNvme7linkSpeed"] = o.SlotFrontNvme7linkSpeed
	}
	if o.SlotFrontNvme7optionRom != nil {
		toSerialize["SlotFrontNvme7optionRom"] = o.SlotFrontNvme7optionRom
	}
	if o.SlotFrontNvme8linkSpeed != nil {
		toSerialize["SlotFrontNvme8linkSpeed"] = o.SlotFrontNvme8linkSpeed
	}
	if o.SlotFrontNvme8optionRom != nil {
		toSerialize["SlotFrontNvme8optionRom"] = o.SlotFrontNvme8optionRom
	}
	if o.SlotFrontNvme9linkSpeed != nil {
		toSerialize["SlotFrontNvme9linkSpeed"] = o.SlotFrontNvme9linkSpeed
	}
	if o.SlotFrontNvme9optionRom != nil {
		toSerialize["SlotFrontNvme9optionRom"] = o.SlotFrontNvme9optionRom
	}
	if o.SlotFrontSlot5linkSpeed != nil {
		toSerialize["SlotFrontSlot5linkSpeed"] = o.SlotFrontSlot5linkSpeed
	}
	if o.SlotFrontSlot6linkSpeed != nil {
		toSerialize["SlotFrontSlot6linkSpeed"] = o.SlotFrontSlot6linkSpeed
	}
	if o.SlotGpu1state != nil {
		toSerialize["SlotGpu1state"] = o.SlotGpu1state
	}
	if o.SlotGpu2state != nil {
		toSerialize["SlotGpu2state"] = o.SlotGpu2state
	}
	if o.SlotGpu3state != nil {
		toSerialize["SlotGpu3state"] = o.SlotGpu3state
	}
	if o.SlotGpu4state != nil {
		toSerialize["SlotGpu4state"] = o.SlotGpu4state
	}
	if o.SlotGpu5state != nil {
		toSerialize["SlotGpu5state"] = o.SlotGpu5state
	}
	if o.SlotGpu6state != nil {
		toSerialize["SlotGpu6state"] = o.SlotGpu6state
	}
	if o.SlotGpu7state != nil {
		toSerialize["SlotGpu7state"] = o.SlotGpu7state
	}
	if o.SlotGpu8state != nil {
		toSerialize["SlotGpu8state"] = o.SlotGpu8state
	}
	if o.SlotHbaLinkSpeed != nil {
		toSerialize["SlotHbaLinkSpeed"] = o.SlotHbaLinkSpeed
	}
	if o.SlotHbaState != nil {
		toSerialize["SlotHbaState"] = o.SlotHbaState
	}
	if o.SlotLom1link != nil {
		toSerialize["SlotLom1link"] = o.SlotLom1link
	}
	if o.SlotLom2link != nil {
		toSerialize["SlotLom2link"] = o.SlotLom2link
	}
	if o.SlotMezzState != nil {
		toSerialize["SlotMezzState"] = o.SlotMezzState
	}
	if o.SlotMlomLinkSpeed != nil {
		toSerialize["SlotMlomLinkSpeed"] = o.SlotMlomLinkSpeed
	}
	if o.SlotMlomState != nil {
		toSerialize["SlotMlomState"] = o.SlotMlomState
	}
	if o.SlotMraidLinkSpeed != nil {
		toSerialize["SlotMraidLinkSpeed"] = o.SlotMraidLinkSpeed
	}
	if o.SlotMraidState != nil {
		toSerialize["SlotMraidState"] = o.SlotMraidState
	}
	if o.SlotN10state != nil {
		toSerialize["SlotN10state"] = o.SlotN10state
	}
	if o.SlotN11state != nil {
		toSerialize["SlotN11state"] = o.SlotN11state
	}
	if o.SlotN12state != nil {
		toSerialize["SlotN12state"] = o.SlotN12state
	}
	if o.SlotN13state != nil {
		toSerialize["SlotN13state"] = o.SlotN13state
	}
	if o.SlotN14state != nil {
		toSerialize["SlotN14state"] = o.SlotN14state
	}
	if o.SlotN15state != nil {
		toSerialize["SlotN15state"] = o.SlotN15state
	}
	if o.SlotN16state != nil {
		toSerialize["SlotN16state"] = o.SlotN16state
	}
	if o.SlotN17state != nil {
		toSerialize["SlotN17state"] = o.SlotN17state
	}
	if o.SlotN18state != nil {
		toSerialize["SlotN18state"] = o.SlotN18state
	}
	if o.SlotN19state != nil {
		toSerialize["SlotN19state"] = o.SlotN19state
	}
	if o.SlotN1state != nil {
		toSerialize["SlotN1state"] = o.SlotN1state
	}
	if o.SlotN20state != nil {
		toSerialize["SlotN20state"] = o.SlotN20state
	}
	if o.SlotN21state != nil {
		toSerialize["SlotN21state"] = o.SlotN21state
	}
	if o.SlotN22state != nil {
		toSerialize["SlotN22state"] = o.SlotN22state
	}
	if o.SlotN23state != nil {
		toSerialize["SlotN23state"] = o.SlotN23state
	}
	if o.SlotN24state != nil {
		toSerialize["SlotN24state"] = o.SlotN24state
	}
	if o.SlotN2state != nil {
		toSerialize["SlotN2state"] = o.SlotN2state
	}
	if o.SlotN3state != nil {
		toSerialize["SlotN3state"] = o.SlotN3state
	}
	if o.SlotN4state != nil {
		toSerialize["SlotN4state"] = o.SlotN4state
	}
	if o.SlotN5state != nil {
		toSerialize["SlotN5state"] = o.SlotN5state
	}
	if o.SlotN6state != nil {
		toSerialize["SlotN6state"] = o.SlotN6state
	}
	if o.SlotN7state != nil {
		toSerialize["SlotN7state"] = o.SlotN7state
	}
	if o.SlotN8state != nil {
		toSerialize["SlotN8state"] = o.SlotN8state
	}
	if o.SlotN9state != nil {
		toSerialize["SlotN9state"] = o.SlotN9state
	}
	if o.SlotRaidLinkSpeed != nil {
		toSerialize["SlotRaidLinkSpeed"] = o.SlotRaidLinkSpeed
	}
	if o.SlotRaidState != nil {
		toSerialize["SlotRaidState"] = o.SlotRaidState
	}
	if o.SlotRearNvme1linkSpeed != nil {
		toSerialize["SlotRearNvme1linkSpeed"] = o.SlotRearNvme1linkSpeed
	}
	if o.SlotRearNvme1state != nil {
		toSerialize["SlotRearNvme1state"] = o.SlotRearNvme1state
	}
	if o.SlotRearNvme2linkSpeed != nil {
		toSerialize["SlotRearNvme2linkSpeed"] = o.SlotRearNvme2linkSpeed
	}
	if o.SlotRearNvme2state != nil {
		toSerialize["SlotRearNvme2state"] = o.SlotRearNvme2state
	}
	if o.SlotRearNvme3linkSpeed != nil {
		toSerialize["SlotRearNvme3linkSpeed"] = o.SlotRearNvme3linkSpeed
	}
	if o.SlotRearNvme3state != nil {
		toSerialize["SlotRearNvme3state"] = o.SlotRearNvme3state
	}
	if o.SlotRearNvme4linkSpeed != nil {
		toSerialize["SlotRearNvme4linkSpeed"] = o.SlotRearNvme4linkSpeed
	}
	if o.SlotRearNvme4state != nil {
		toSerialize["SlotRearNvme4state"] = o.SlotRearNvme4state
	}
	if o.SlotRearNvme5state != nil {
		toSerialize["SlotRearNvme5state"] = o.SlotRearNvme5state
	}
	if o.SlotRearNvme6state != nil {
		toSerialize["SlotRearNvme6state"] = o.SlotRearNvme6state
	}
	if o.SlotRearNvme7state != nil {
		toSerialize["SlotRearNvme7state"] = o.SlotRearNvme7state
	}
	if o.SlotRearNvme8state != nil {
		toSerialize["SlotRearNvme8state"] = o.SlotRearNvme8state
	}
	if o.SlotRiser1linkSpeed != nil {
		toSerialize["SlotRiser1linkSpeed"] = o.SlotRiser1linkSpeed
	}
	if o.SlotRiser1slot1linkSpeed != nil {
		toSerialize["SlotRiser1slot1linkSpeed"] = o.SlotRiser1slot1linkSpeed
	}
	if o.SlotRiser1slot2linkSpeed != nil {
		toSerialize["SlotRiser1slot2linkSpeed"] = o.SlotRiser1slot2linkSpeed
	}
	if o.SlotRiser1slot3linkSpeed != nil {
		toSerialize["SlotRiser1slot3linkSpeed"] = o.SlotRiser1slot3linkSpeed
	}
	if o.SlotRiser2linkSpeed != nil {
		toSerialize["SlotRiser2linkSpeed"] = o.SlotRiser2linkSpeed
	}
	if o.SlotRiser2slot4linkSpeed != nil {
		toSerialize["SlotRiser2slot4linkSpeed"] = o.SlotRiser2slot4linkSpeed
	}
	if o.SlotRiser2slot5linkSpeed != nil {
		toSerialize["SlotRiser2slot5linkSpeed"] = o.SlotRiser2slot5linkSpeed
	}
	if o.SlotRiser2slot6linkSpeed != nil {
		toSerialize["SlotRiser2slot6linkSpeed"] = o.SlotRiser2slot6linkSpeed
	}
	if o.SlotSasState != nil {
		toSerialize["SlotSasState"] = o.SlotSasState
	}
	if o.SlotSsdSlot1linkSpeed != nil {
		toSerialize["SlotSsdSlot1linkSpeed"] = o.SlotSsdSlot1linkSpeed
	}
	if o.SlotSsdSlot2linkSpeed != nil {
		toSerialize["SlotSsdSlot2linkSpeed"] = o.SlotSsdSlot2linkSpeed
	}
	if o.Smee != nil {
		toSerialize["Smee"] = o.Smee
	}
	if o.SmtMode != nil {
		toSerialize["SmtMode"] = o.SmtMode
	}
	if o.Snc != nil {
		toSerialize["Snc"] = o.Snc
	}
	if o.SnoopyModeFor2lm != nil {
		toSerialize["SnoopyModeFor2lm"] = o.SnoopyModeFor2lm
	}
	if o.SnoopyModeForAd != nil {
		toSerialize["SnoopyModeForAd"] = o.SnoopyModeForAd
	}
	if o.SparingMode != nil {
		toSerialize["SparingMode"] = o.SparingMode
	}
	if o.SrIov != nil {
		toSerialize["SrIov"] = o.SrIov
	}
	if o.StreamerPrefetch != nil {
		toSerialize["StreamerPrefetch"] = o.StreamerPrefetch
	}
	if o.SvmMode != nil {
		toSerialize["SvmMode"] = o.SvmMode
	}
	if o.TerminalType != nil {
		toSerialize["TerminalType"] = o.TerminalType
	}
	if o.TpmControl != nil {
		toSerialize["TpmControl"] = o.TpmControl
	}
	if o.TpmPendingOperation != nil {
		toSerialize["TpmPendingOperation"] = o.TpmPendingOperation
	}
	if o.TpmSupport != nil {
		toSerialize["TpmSupport"] = o.TpmSupport
	}
	if o.Tsme != nil {
		toSerialize["Tsme"] = o.Tsme
	}
	if o.TxtSupport != nil {
		toSerialize["TxtSupport"] = o.TxtSupport
	}
	if o.UcsmBootOrderRule != nil {
		toSerialize["UcsmBootOrderRule"] = o.UcsmBootOrderRule
	}
	if o.UfsDisable != nil {
		toSerialize["UfsDisable"] = o.UfsDisable
	}
	if o.UmaBasedClustering != nil {
		toSerialize["UmaBasedClustering"] = o.UmaBasedClustering
	}
	if o.UsbEmul6064 != nil {
		toSerialize["UsbEmul6064"] = o.UsbEmul6064
	}
	if o.UsbPortFront != nil {
		toSerialize["UsbPortFront"] = o.UsbPortFront
	}
	if o.UsbPortInternal != nil {
		toSerialize["UsbPortInternal"] = o.UsbPortInternal
	}
	if o.UsbPortKvm != nil {
		toSerialize["UsbPortKvm"] = o.UsbPortKvm
	}
	if o.UsbPortRear != nil {
		toSerialize["UsbPortRear"] = o.UsbPortRear
	}
	if o.UsbPortSdCard != nil {
		toSerialize["UsbPortSdCard"] = o.UsbPortSdCard
	}
	if o.UsbPortVmedia != nil {
		toSerialize["UsbPortVmedia"] = o.UsbPortVmedia
	}
	if o.UsbXhciSupport != nil {
		toSerialize["UsbXhciSupport"] = o.UsbXhciSupport
	}
	if o.VgaPriority != nil {
		toSerialize["VgaPriority"] = o.VgaPriority
	}
	if o.VmdEnable != nil {
		toSerialize["VmdEnable"] = o.VmdEnable
	}
	if o.VolMemoryMode != nil {
		toSerialize["VolMemoryMode"] = o.VolMemoryMode
	}
	if o.WorkLoadConfig != nil {
		toSerialize["WorkLoadConfig"] = o.WorkLoadConfig
	}
	if o.XptPrefetch != nil {
		toSerialize["XptPrefetch"] = o.XptPrefetch
	}
	if o.Organization != nil {
		toSerialize["Organization"] = o.Organization
	}
	if o.Profiles != nil {
		toSerialize["Profiles"] = o.Profiles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BiosPolicyAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varBiosPolicyAllOf := _BiosPolicyAllOf{}

	if err = json.Unmarshal(bytes, &varBiosPolicyAllOf); err == nil {
		*o = BiosPolicyAllOf(varBiosPolicyAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ClassId")
		delete(additionalProperties, "ObjectType")
		delete(additionalProperties, "AcsControlGpu1state")
		delete(additionalProperties, "AcsControlGpu2state")
		delete(additionalProperties, "AcsControlGpu3state")
		delete(additionalProperties, "AcsControlGpu4state")
		delete(additionalProperties, "AcsControlGpu5state")
		delete(additionalProperties, "AcsControlGpu6state")
		delete(additionalProperties, "AcsControlGpu7state")
		delete(additionalProperties, "AcsControlGpu8state")
		delete(additionalProperties, "AcsControlSlot11state")
		delete(additionalProperties, "AcsControlSlot12state")
		delete(additionalProperties, "AcsControlSlot13state")
		delete(additionalProperties, "AcsControlSlot14state")
		delete(additionalProperties, "AdjacentCacheLinePrefetch")
		delete(additionalProperties, "AdvancedMemTest")
		delete(additionalProperties, "AllUsbDevices")
		delete(additionalProperties, "Altitude")
		delete(additionalProperties, "AspmSupport")
		delete(additionalProperties, "AssertNmiOnPerr")
		delete(additionalProperties, "AssertNmiOnSerr")
		delete(additionalProperties, "AutoCcState")
		delete(additionalProperties, "AutonumousCstateEnable")
		delete(additionalProperties, "BaudRate")
		delete(additionalProperties, "BmeDmaMitigation")
		delete(additionalProperties, "BootOptionNumRetry")
		delete(additionalProperties, "BootOptionReCoolDown")
		delete(additionalProperties, "BootOptionRetry")
		delete(additionalProperties, "BootPerformanceMode")
		delete(additionalProperties, "BurstAndPostponedRefresh")
		delete(additionalProperties, "CbsCmnApbdis")
		delete(additionalProperties, "CbsCmnCpuCpb")
		delete(additionalProperties, "CbsCmnCpuGenDowncoreCtrl")
		delete(additionalProperties, "CbsCmnCpuGlobalCstateCtrl")
		delete(additionalProperties, "CbsCmnCpuL1streamHwPrefetcher")
		delete(additionalProperties, "CbsCmnCpuL2streamHwPrefetcher")
		delete(additionalProperties, "CbsCmnCpuSmee")
		delete(additionalProperties, "CbsCmnCpuStreamingStoresCtrl")
		delete(additionalProperties, "CbsCmnDeterminismSlider")
		delete(additionalProperties, "CbsCmnEfficiencyModeEn")
		delete(additionalProperties, "CbsCmnFixedSocPstate")
		delete(additionalProperties, "CbsCmnGnbNbIommu")
		delete(additionalProperties, "CbsCmnGnbSmuDfCstates")
		delete(additionalProperties, "CbsCmnGnbSmucppc")
		delete(additionalProperties, "CbsCmnMemCtrlBankGroupSwapDdr4")
		delete(additionalProperties, "CbsCmnMemMapBankInterleaveDdr4")
		delete(additionalProperties, "CbsCmncTdpCtl")
		delete(additionalProperties, "CbsCpuCcdCtrlSsp")
		delete(additionalProperties, "CbsCpuCoreCtrl")
		delete(additionalProperties, "CbsCpuSmtCtrl")
		delete(additionalProperties, "CbsDbgCpuSnpMemCover")
		delete(additionalProperties, "CbsDbgCpuSnpMemSizeCover")
		delete(additionalProperties, "CbsDfCmnAcpiSratL3numa")
		delete(additionalProperties, "CbsDfCmnDramNps")
		delete(additionalProperties, "CbsDfCmnMemIntlv")
		delete(additionalProperties, "CbsDfCmnMemIntlvSize")
		delete(additionalProperties, "CbsSevSnpSupport")
		delete(additionalProperties, "CdnEnable")
		delete(additionalProperties, "CdnSupport")
		delete(additionalProperties, "ChannelInterLeave")
		delete(additionalProperties, "CiscoAdaptiveMemTraining")
		delete(additionalProperties, "CiscoDebugLevel")
		delete(additionalProperties, "CiscoOpromLaunchOptimization")
		delete(additionalProperties, "CiscoXgmiMaxSpeed")
		delete(additionalProperties, "CkeLowPolicy")
		delete(additionalProperties, "ClosedLoopThermThrotl")
		delete(additionalProperties, "CmciEnable")
		delete(additionalProperties, "ConfigTdp")
		delete(additionalProperties, "ConfigTdpLevel")
		delete(additionalProperties, "ConsoleRedirection")
		delete(additionalProperties, "CoreMultiProcessing")
		delete(additionalProperties, "CpuEnergyPerformance")
		delete(additionalProperties, "CpuFrequencyFloor")
		delete(additionalProperties, "CpuPerformance")
		delete(additionalProperties, "CpuPowerManagement")
		delete(additionalProperties, "CrQos")
		delete(additionalProperties, "CrfastgoConfig")
		delete(additionalProperties, "DcpmmFirmwareDowngrade")
		delete(additionalProperties, "DemandScrub")
		delete(additionalProperties, "DirectCacheAccess")
		delete(additionalProperties, "DramClockThrottling")
		delete(additionalProperties, "DramRefreshRate")
		delete(additionalProperties, "DramSwThermalThrottling")
		delete(additionalProperties, "EadrSupport")
		delete(additionalProperties, "EdpcEn")
		delete(additionalProperties, "EnableClockSpreadSpec")
		delete(additionalProperties, "EnableMktme")
		delete(additionalProperties, "EnableSgx")
		delete(additionalProperties, "EnableTme")
		delete(additionalProperties, "EnergyEfficientTurbo")
		delete(additionalProperties, "EngPerfTuning")
		delete(additionalProperties, "EnhancedIntelSpeedStepTech")
		delete(additionalProperties, "EpochUpdate")
		delete(additionalProperties, "EppEnable")
		delete(additionalProperties, "EppProfile")
		delete(additionalProperties, "ExecuteDisableBit")
		delete(additionalProperties, "ExtendedApic")
		delete(additionalProperties, "FlowControl")
		delete(additionalProperties, "Frb2enable")
		delete(additionalProperties, "HardwarePrefetch")
		delete(additionalProperties, "HwpmEnable")
		delete(additionalProperties, "ImcInterleave")
		delete(additionalProperties, "IntelDynamicSpeedSelect")
		delete(additionalProperties, "IntelHyperThreadingTech")
		delete(additionalProperties, "IntelSpeedSelect")
		delete(additionalProperties, "IntelTurboBoostTech")
		delete(additionalProperties, "IntelVirtualizationTechnology")
		delete(additionalProperties, "IntelVtForDirectedIo")
		delete(additionalProperties, "IntelVtdCoherencySupport")
		delete(additionalProperties, "IntelVtdInterruptRemapping")
		delete(additionalProperties, "IntelVtdPassThroughDmaSupport")
		delete(additionalProperties, "IntelVtdatsSupport")
		delete(additionalProperties, "IohErrorEnable")
		delete(additionalProperties, "IohResource")
		delete(additionalProperties, "IpPrefetch")
		delete(additionalProperties, "Ipv4http")
		delete(additionalProperties, "Ipv4pxe")
		delete(additionalProperties, "Ipv6http")
		delete(additionalProperties, "Ipv6pxe")
		delete(additionalProperties, "KtiPrefetch")
		delete(additionalProperties, "LegacyOsRedirection")
		delete(additionalProperties, "LegacyUsbSupport")
		delete(additionalProperties, "LlcPrefetch")
		delete(additionalProperties, "LomPort0state")
		delete(additionalProperties, "LomPort1state")
		delete(additionalProperties, "LomPort2state")
		delete(additionalProperties, "LomPort3state")
		delete(additionalProperties, "LomPortsAllState")
		delete(additionalProperties, "LvDdrMode")
		delete(additionalProperties, "MakeDeviceNonBootable")
		delete(additionalProperties, "MemoryBandwidthBoost")
		delete(additionalProperties, "MemoryInterLeave")
		delete(additionalProperties, "MemoryMappedIoAbove4gb")
		delete(additionalProperties, "MemoryRefreshRate")
		delete(additionalProperties, "MemorySizeLimit")
		delete(additionalProperties, "MemoryThermalThrottling")
		delete(additionalProperties, "MirroringMode")
		delete(additionalProperties, "MmcfgBase")
		delete(additionalProperties, "NetworkStack")
		delete(additionalProperties, "NumaOptimized")
		delete(additionalProperties, "NvmdimmPerformConfig")
		delete(additionalProperties, "Onboard10gbitLom")
		delete(additionalProperties, "OnboardGbitLom")
		delete(additionalProperties, "OnboardScuStorageSupport")
		delete(additionalProperties, "OnboardScuStorageSwStack")
		delete(additionalProperties, "OperationMode")
		delete(additionalProperties, "OsBootWatchdogTimer")
		delete(additionalProperties, "OsBootWatchdogTimerPolicy")
		delete(additionalProperties, "OsBootWatchdogTimerTimeout")
		delete(additionalProperties, "OutOfBandMgmtPort")
		delete(additionalProperties, "PackageCstateLimit")
		delete(additionalProperties, "PanicHighWatermark")
		delete(additionalProperties, "PartialCacheLineSparing")
		delete(additionalProperties, "PartialMirrorModeConfig")
		delete(additionalProperties, "PartialMirrorPercent")
		delete(additionalProperties, "PartialMirrorValue1")
		delete(additionalProperties, "PartialMirrorValue2")
		delete(additionalProperties, "PartialMirrorValue3")
		delete(additionalProperties, "PartialMirrorValue4")
		delete(additionalProperties, "PatrolScrub")
		delete(additionalProperties, "PatrolScrubDuration")
		delete(additionalProperties, "PcIeRasSupport")
		delete(additionalProperties, "PcIeSsdHotPlugSupport")
		delete(additionalProperties, "PchUsb30mode")
		delete(additionalProperties, "PciOptionRoMs")
		delete(additionalProperties, "PciRomClp")
		delete(additionalProperties, "PcieAriSupport")
		delete(additionalProperties, "PciePllSsc")
		delete(additionalProperties, "PcieSlotMraid1linkSpeed")
		delete(additionalProperties, "PcieSlotMraid1optionRom")
		delete(additionalProperties, "PcieSlotMraid2linkSpeed")
		delete(additionalProperties, "PcieSlotMraid2optionRom")
		delete(additionalProperties, "PcieSlotMstorraidLinkSpeed")
		delete(additionalProperties, "PcieSlotMstorraidOptionRom")
		delete(additionalProperties, "PcieSlotNvme1linkSpeed")
		delete(additionalProperties, "PcieSlotNvme1optionRom")
		delete(additionalProperties, "PcieSlotNvme2linkSpeed")
		delete(additionalProperties, "PcieSlotNvme2optionRom")
		delete(additionalProperties, "PcieSlotNvme3linkSpeed")
		delete(additionalProperties, "PcieSlotNvme3optionRom")
		delete(additionalProperties, "PcieSlotNvme4linkSpeed")
		delete(additionalProperties, "PcieSlotNvme4optionRom")
		delete(additionalProperties, "PcieSlotNvme5linkSpeed")
		delete(additionalProperties, "PcieSlotNvme5optionRom")
		delete(additionalProperties, "PcieSlotNvme6linkSpeed")
		delete(additionalProperties, "PcieSlotNvme6optionRom")
		delete(additionalProperties, "PopSupport")
		delete(additionalProperties, "PostErrorPause")
		delete(additionalProperties, "PostPackageRepair")
		delete(additionalProperties, "ProcessorC1e")
		delete(additionalProperties, "ProcessorC3report")
		delete(additionalProperties, "ProcessorC6report")
		delete(additionalProperties, "ProcessorCstate")
		delete(additionalProperties, "Psata")
		delete(additionalProperties, "PstateCoordType")
		delete(additionalProperties, "PuttyKeyPad")
		delete(additionalProperties, "PwrPerfTuning")
		delete(additionalProperties, "QpiLinkFrequency")
		delete(additionalProperties, "QpiLinkSpeed")
		delete(additionalProperties, "QpiSnoopMode")
		delete(additionalProperties, "RankInterLeave")
		delete(additionalProperties, "RedirectionAfterPost")
		delete(additionalProperties, "SataModeSelect")
		delete(additionalProperties, "SelectMemoryRasConfiguration")
		delete(additionalProperties, "SelectPprType")
		delete(additionalProperties, "SerialPortAenable")
		delete(additionalProperties, "Sev")
		delete(additionalProperties, "SgxAutoRegistrationAgent")
		delete(additionalProperties, "SgxEpoch0")
		delete(additionalProperties, "SgxEpoch1")
		delete(additionalProperties, "SgxFactoryReset")
		delete(additionalProperties, "SgxLePubKeyHash0")
		delete(additionalProperties, "SgxLePubKeyHash1")
		delete(additionalProperties, "SgxLePubKeyHash2")
		delete(additionalProperties, "SgxLePubKeyHash3")
		delete(additionalProperties, "SgxLeWr")
		delete(additionalProperties, "SgxPackageInfoInBandAccess")
		delete(additionalProperties, "SgxQos")
		delete(additionalProperties, "SinglePctlEnable")
		delete(additionalProperties, "Slot10linkSpeed")
		delete(additionalProperties, "Slot10state")
		delete(additionalProperties, "Slot11linkSpeed")
		delete(additionalProperties, "Slot11state")
		delete(additionalProperties, "Slot12linkSpeed")
		delete(additionalProperties, "Slot12state")
		delete(additionalProperties, "Slot13state")
		delete(additionalProperties, "Slot14state")
		delete(additionalProperties, "Slot1linkSpeed")
		delete(additionalProperties, "Slot1state")
		delete(additionalProperties, "Slot2linkSpeed")
		delete(additionalProperties, "Slot2state")
		delete(additionalProperties, "Slot3linkSpeed")
		delete(additionalProperties, "Slot3state")
		delete(additionalProperties, "Slot4linkSpeed")
		delete(additionalProperties, "Slot4state")
		delete(additionalProperties, "Slot5linkSpeed")
		delete(additionalProperties, "Slot5state")
		delete(additionalProperties, "Slot6linkSpeed")
		delete(additionalProperties, "Slot6state")
		delete(additionalProperties, "Slot7linkSpeed")
		delete(additionalProperties, "Slot7state")
		delete(additionalProperties, "Slot8linkSpeed")
		delete(additionalProperties, "Slot8state")
		delete(additionalProperties, "Slot9linkSpeed")
		delete(additionalProperties, "Slot9state")
		delete(additionalProperties, "SlotFlomLinkSpeed")
		delete(additionalProperties, "SlotFrontNvme10linkSpeed")
		delete(additionalProperties, "SlotFrontNvme10optionRom")
		delete(additionalProperties, "SlotFrontNvme11linkSpeed")
		delete(additionalProperties, "SlotFrontNvme11optionRom")
		delete(additionalProperties, "SlotFrontNvme12linkSpeed")
		delete(additionalProperties, "SlotFrontNvme12optionRom")
		delete(additionalProperties, "SlotFrontNvme13optionRom")
		delete(additionalProperties, "SlotFrontNvme14optionRom")
		delete(additionalProperties, "SlotFrontNvme15optionRom")
		delete(additionalProperties, "SlotFrontNvme16optionRom")
		delete(additionalProperties, "SlotFrontNvme17optionRom")
		delete(additionalProperties, "SlotFrontNvme18optionRom")
		delete(additionalProperties, "SlotFrontNvme19optionRom")
		delete(additionalProperties, "SlotFrontNvme1linkSpeed")
		delete(additionalProperties, "SlotFrontNvme1optionRom")
		delete(additionalProperties, "SlotFrontNvme20optionRom")
		delete(additionalProperties, "SlotFrontNvme21optionRom")
		delete(additionalProperties, "SlotFrontNvme22optionRom")
		delete(additionalProperties, "SlotFrontNvme23optionRom")
		delete(additionalProperties, "SlotFrontNvme24optionRom")
		delete(additionalProperties, "SlotFrontNvme2linkSpeed")
		delete(additionalProperties, "SlotFrontNvme2optionRom")
		delete(additionalProperties, "SlotFrontNvme3linkSpeed")
		delete(additionalProperties, "SlotFrontNvme3optionRom")
		delete(additionalProperties, "SlotFrontNvme4linkSpeed")
		delete(additionalProperties, "SlotFrontNvme4optionRom")
		delete(additionalProperties, "SlotFrontNvme5linkSpeed")
		delete(additionalProperties, "SlotFrontNvme5optionRom")
		delete(additionalProperties, "SlotFrontNvme6linkSpeed")
		delete(additionalProperties, "SlotFrontNvme6optionRom")
		delete(additionalProperties, "SlotFrontNvme7linkSpeed")
		delete(additionalProperties, "SlotFrontNvme7optionRom")
		delete(additionalProperties, "SlotFrontNvme8linkSpeed")
		delete(additionalProperties, "SlotFrontNvme8optionRom")
		delete(additionalProperties, "SlotFrontNvme9linkSpeed")
		delete(additionalProperties, "SlotFrontNvme9optionRom")
		delete(additionalProperties, "SlotFrontSlot5linkSpeed")
		delete(additionalProperties, "SlotFrontSlot6linkSpeed")
		delete(additionalProperties, "SlotGpu1state")
		delete(additionalProperties, "SlotGpu2state")
		delete(additionalProperties, "SlotGpu3state")
		delete(additionalProperties, "SlotGpu4state")
		delete(additionalProperties, "SlotGpu5state")
		delete(additionalProperties, "SlotGpu6state")
		delete(additionalProperties, "SlotGpu7state")
		delete(additionalProperties, "SlotGpu8state")
		delete(additionalProperties, "SlotHbaLinkSpeed")
		delete(additionalProperties, "SlotHbaState")
		delete(additionalProperties, "SlotLom1link")
		delete(additionalProperties, "SlotLom2link")
		delete(additionalProperties, "SlotMezzState")
		delete(additionalProperties, "SlotMlomLinkSpeed")
		delete(additionalProperties, "SlotMlomState")
		delete(additionalProperties, "SlotMraidLinkSpeed")
		delete(additionalProperties, "SlotMraidState")
		delete(additionalProperties, "SlotN10state")
		delete(additionalProperties, "SlotN11state")
		delete(additionalProperties, "SlotN12state")
		delete(additionalProperties, "SlotN13state")
		delete(additionalProperties, "SlotN14state")
		delete(additionalProperties, "SlotN15state")
		delete(additionalProperties, "SlotN16state")
		delete(additionalProperties, "SlotN17state")
		delete(additionalProperties, "SlotN18state")
		delete(additionalProperties, "SlotN19state")
		delete(additionalProperties, "SlotN1state")
		delete(additionalProperties, "SlotN20state")
		delete(additionalProperties, "SlotN21state")
		delete(additionalProperties, "SlotN22state")
		delete(additionalProperties, "SlotN23state")
		delete(additionalProperties, "SlotN24state")
		delete(additionalProperties, "SlotN2state")
		delete(additionalProperties, "SlotN3state")
		delete(additionalProperties, "SlotN4state")
		delete(additionalProperties, "SlotN5state")
		delete(additionalProperties, "SlotN6state")
		delete(additionalProperties, "SlotN7state")
		delete(additionalProperties, "SlotN8state")
		delete(additionalProperties, "SlotN9state")
		delete(additionalProperties, "SlotRaidLinkSpeed")
		delete(additionalProperties, "SlotRaidState")
		delete(additionalProperties, "SlotRearNvme1linkSpeed")
		delete(additionalProperties, "SlotRearNvme1state")
		delete(additionalProperties, "SlotRearNvme2linkSpeed")
		delete(additionalProperties, "SlotRearNvme2state")
		delete(additionalProperties, "SlotRearNvme3linkSpeed")
		delete(additionalProperties, "SlotRearNvme3state")
		delete(additionalProperties, "SlotRearNvme4linkSpeed")
		delete(additionalProperties, "SlotRearNvme4state")
		delete(additionalProperties, "SlotRearNvme5state")
		delete(additionalProperties, "SlotRearNvme6state")
		delete(additionalProperties, "SlotRearNvme7state")
		delete(additionalProperties, "SlotRearNvme8state")
		delete(additionalProperties, "SlotRiser1linkSpeed")
		delete(additionalProperties, "SlotRiser1slot1linkSpeed")
		delete(additionalProperties, "SlotRiser1slot2linkSpeed")
		delete(additionalProperties, "SlotRiser1slot3linkSpeed")
		delete(additionalProperties, "SlotRiser2linkSpeed")
		delete(additionalProperties, "SlotRiser2slot4linkSpeed")
		delete(additionalProperties, "SlotRiser2slot5linkSpeed")
		delete(additionalProperties, "SlotRiser2slot6linkSpeed")
		delete(additionalProperties, "SlotSasState")
		delete(additionalProperties, "SlotSsdSlot1linkSpeed")
		delete(additionalProperties, "SlotSsdSlot2linkSpeed")
		delete(additionalProperties, "Smee")
		delete(additionalProperties, "SmtMode")
		delete(additionalProperties, "Snc")
		delete(additionalProperties, "SnoopyModeFor2lm")
		delete(additionalProperties, "SnoopyModeForAd")
		delete(additionalProperties, "SparingMode")
		delete(additionalProperties, "SrIov")
		delete(additionalProperties, "StreamerPrefetch")
		delete(additionalProperties, "SvmMode")
		delete(additionalProperties, "TerminalType")
		delete(additionalProperties, "TpmControl")
		delete(additionalProperties, "TpmPendingOperation")
		delete(additionalProperties, "TpmSupport")
		delete(additionalProperties, "Tsme")
		delete(additionalProperties, "TxtSupport")
		delete(additionalProperties, "UcsmBootOrderRule")
		delete(additionalProperties, "UfsDisable")
		delete(additionalProperties, "UmaBasedClustering")
		delete(additionalProperties, "UsbEmul6064")
		delete(additionalProperties, "UsbPortFront")
		delete(additionalProperties, "UsbPortInternal")
		delete(additionalProperties, "UsbPortKvm")
		delete(additionalProperties, "UsbPortRear")
		delete(additionalProperties, "UsbPortSdCard")
		delete(additionalProperties, "UsbPortVmedia")
		delete(additionalProperties, "UsbXhciSupport")
		delete(additionalProperties, "VgaPriority")
		delete(additionalProperties, "VmdEnable")
		delete(additionalProperties, "VolMemoryMode")
		delete(additionalProperties, "WorkLoadConfig")
		delete(additionalProperties, "XptPrefetch")
		delete(additionalProperties, "Organization")
		delete(additionalProperties, "Profiles")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBiosPolicyAllOf struct {
	value *BiosPolicyAllOf
	isSet bool
}

func (v NullableBiosPolicyAllOf) Get() *BiosPolicyAllOf {
	return v.value
}

func (v *NullableBiosPolicyAllOf) Set(val *BiosPolicyAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBiosPolicyAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBiosPolicyAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBiosPolicyAllOf(val *BiosPolicyAllOf) *NullableBiosPolicyAllOf {
	return &NullableBiosPolicyAllOf{value: val, isSet: true}
}

func (v NullableBiosPolicyAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBiosPolicyAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
